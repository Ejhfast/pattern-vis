[{:loci˛ﬂ:projects[I"activemodel_proj:ETI"activerecord_proj;TI"backup_proj;TI"bundler_proj;TI"cancan_proj;TI"capistrano_proj;TI"compass_proj;TI"cucumber_prok;TI"devise_proj;TI"diaspora_proj;TI"haml_proj;TI"homebrew_proj;TI"jekyll_proj;TI"mongoid_proj;TI"nokogiri_proj;TI"omni_proj;TI"paperclip_proj;TI"redmine_proj;TI"rescue_proj;TI"rspec_proj;TI"sinatra_proj;TI"SiriProxy_proj;TI"state_machine_proj;TI"twitter_proj;TI"whenever_proj;T:options[I"
--var;TI"--just-calls;T[õ[	I"var.last.is_a?(Hash);FI"var.pop;Fi%[%[	I"Bdata//bundler_proj/bundler/vendor/thor/actions/create_file.rb;TiI"àrequire("thor/actions/empty_directory")
var.last.is_a?(Hash)
var.pop
var.first
action(CreateFile.new(self, var, (var or var.to_s), var));Fi[	I"Bdata//bundler_proj/bundler/vendor/thor/actions/create_link.rb;TiI"{require("thor/actions/create_file")
var.last.is_a?(Hash)
var.pop
var.first
action(CreateLink.new(self, var, var, var));Fi[	I"@data//bundler_proj/bundler/vendor/thor/actions/directory.rb;TiI"àrequire("thor/actions/empty_directory")
var.last.is_a?(Hash)
var.pop
var.first
action(Directory.new(self, var, (var or var), var, &var));Fi[	I"Hdata//bundler_proj/bundler/vendor/thor/actions/file_manipulation.rb;TiI"require("erb")
require("open-uri")
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s));Fi[	@3iI"ö(var[:mode] == :preserve)
File.stat(var).mode
chmod(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s));Fi[	@3iI"≠var.first
File.expand_path(find_in_source_paths(var.to_s))
create_link(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s));Fi[	@3iI"wvar.call
File.basename(var)
create_file(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
var.sub(/\.tt$/, "");Fi[	@3i+I"Ísay_status(:chmod, relative_to_original_destination_root(var), var.fetch(:verbose, true))
options[:pretend]
FileUtils.chmod_R(var, var)
var.last.is_a?(Hash)
var.pop
var.merge!(:after => /\A/)
insert_into_file(var, *(var << var), &var);Fi[	@3i0I"◊var.merge!(:after => /\A/)
insert_into_file(var, *(var << var), &var)
alias_method(:prepend_file, :prepend_to_file)
var.last.is_a?(Hash)
var.pop
var.merge!(:before => /\z/)
insert_into_file(var, *(var << var), &var);Fi[	@3i5I"ıvar.merge!(:before => /\z/)
insert_into_file(var, *(var << var), &var)
alias_method(:append_file, :append_to_file)
var.last.is_a?(Hash)
var.pop
var.merge!(:after => (/class #{var}\n|class #{var} .*\n/))
insert_into_file(var, *(var << var), &var);Fi[	@3i:I"var.merge!(:after => (/class #{var}\n|class #{var} .*\n/))
insert_into_file(var, *(var << var), &var)
(behavior == :invoke)
var.last.is_a?(Hash)
var.pop
File.expand_path(var, destination_root)
say_status(:gsub, relative_to_original_destination_root(var), var.fetch(:verbose, true));Fi[	I"3data//bundler_proj/bundler/vendor/thor/base.rb;Ti>I"ëfrom_superclass(:class_options, {})
build_options(var, @var)
build_option(var, var, class_options)
var.last.is_a?(Hash)
var.pop
var.each
var.each;Fi[	@DiGI"ΩThor::CoreExt::OrderedHash.new
from_superclass(:all_tasks, Thor::CoreExt::OrderedHash.new)
@var.merge(tasks)
var.last.is_a?(Hash)
var.pop
var.each
Thor::Util.namespace_from_thor_class(self);Fi[	I"4data//bundler_proj/bundler/vendor/thor/group.rb;TiI"úvar.say(self.desc)
from_superclass(:invocations, {})
from_superclass(:invocation_blocks, {})
var.last.is_a?(Hash)
var.pop
var.fetch(:verbose, true)
var.each;Fi[	@IiI"qvar.pop
var.fetch(:verbose, true)
var.each
var.last.is_a?(Hash)
var.pop
var.fetch(:verbose, :white)
var.each;Fi[	I":data//bundler_proj/bundler/vendor/thor/shell/basic.rb;Ti	I"èattr_accessor(:base)
attr_reader(:padding)
[0, var].max
var.last.is_a?(Hash)
var.pop
var[:limited_to]
ask_filtered(var, var[:limited_to], *var);Fi[	I"8data//compass_proj/compass/configuration/helpers.rb;Ti%I"±Sass::Plugin.on_updating_stylesheet(&var)
Sass::Plugin.on_compilation_error
configuration.to_sass_engine_options
var.last.is_a?(Hash)
var.pop
var.shift
detect_configuration_file;Fi[	I"-data//compass_proj/compass/frameworks.rb;Ti
I"óattr_accessor(:name)
attr_accessor(:path)
attr_accessor(:templates_directory, :stylesheets_directory)
var.last.is_a?(Hash)
var.pop
var[:path]
var.shift;Fi[	I")data//compass_proj/compass/logger.rb;TiI"dattr_accessor(:actions, :options)
var.last.is_a?(Hash)
var.pop
DEFAULT_ACTIONS.dup
(@var + var);Fi[	I"-data//nokogiri_proj/nokogiri/xml/node.rb;Ti
I"êinclude(Nokogiri::XML::PP::Node)
include(Enumerable)
document.decorate(self)
var.last.is_a?(Hash)
var.pop
document.root
document.root.namespaces;Fi[	I"1data//nokogiri_proj/nokogiri/xml/node_set.rb;TiI"Ölast.after(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
var.each;Fi[	@]iI"àdocument.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
each;Fi[	@]i!I"àdocument.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
each;Fi[	I"7data//state_machine_proj/state_machine/callback.rb;TiI"‡attr_reader(:branch)
[:before, :after, :around, :failure].include?(var)
raise(ArgumentError, "Type must be :before, :after, :around, or :failure")
var.last.is_a?(Hash)
var.pop
@var.concat(Array(var.delete(:do)))
block_given?;Fi[	I"6data//state_machine_proj/state_machine/machine.rb;TiI"àinclude(Assertions)
include(EvalHelpers)
include(MatcherHelpers)
var.last.is_a?(Hash)
var.pop
var.first
var.respond_to?(:state_machines);Fi[	@gi1I"attr_reader(:action)
attr_reader(:namespace)
attr_reader(:use_transactions)
var.last.is_a?(Hash)
var.pop
assert_valid_keys(var, :attribute, :initial, :initialize, :action, :plural, :namespace, :integration, :messages, :use_transactions)
var.include?(:integration);Fi[	@gixI"Hwarn("#{(scope == :class) ? ("Class") : ("Instance")} method \"#{method}\" is already defined in #{ancestor_name}, use generic helper instead or set StateMachine::Machine.ignore_method_conflicts = true.")
self.name
var.class_eval
var.last.is_a?(Hash)
var.pop
assert_valid_keys(var, :value, :cache, :if, :human_name)
block_given?;Fi[	@giàI"∞self.attribute(var)
var.instance_variable_set("@#{attribute}", var)
var.send("#{attribute}=", var)
var.last.is_a?(Hash)
var.pop
assert_valid_keys(var, :human_name)
block_given?;Fi[	@giúI"Åevent(*Array(var.delete(:on)))
(var.length == 1)
var.first
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:before, var, &var);Fi[	@gi†I"|var.pop
var.any?
add_callback(:before, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:after, var, &var);Fi[	@gi§I"|var.pop
var.any?
add_callback(:after, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:around, var, &var);Fi[	@gi®I"Üvar.pop
var.any?
add_callback(:around, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
assert_valid_keys(var, :on, :do, :if, :unless);Fi[	I"block_given?;FI"instance_eval(&var);Fi [ [	I"(data//backup_proj/backup/archive.rb;TiI"ivar.to_s
Array.new
Array.new
block_given?
instance_eval(&var)
File.expand_path(var)
File.exist?(var);Fi[	I"2data//backup_proj/backup/compressor/custom.rb;TiI"vattr_accessor(:command)
attr_accessor(:extension)
load_defaults!
block_given?
instance_eval(&var)
set_cmd
set_ext;Fi[	I"0data//backup_proj/backup/compressor/lzma.rb;TiI"`attr_accessor(:best)
attr_accessor(:fast)
load_defaults!
block_given?
instance_eval(&var)
Backup::Logger.warn(((("[DEPRECATION WARNING]\n" + "  Compressor::Lzma is being deprecated as of backup v.3.0.24\n") + "  and will soon be removed. Please see the Compressors wiki page at\n") + "  https://github.com/meskyanichi/backup/wiki/Compressors"))
private;Fi[	I"2data//backup_proj/backup/compressor/pbzip2.rb;Ti	I"hattr_accessor(:fast)
attr_accessor(:processors)
load_defaults!
block_given?
instance_eval(&var)
Backup::Logger.warn(((("[DEPRECATION WARNING]\n" + "  Compressor::Pbzip2 is being deprecated as of backup v.3.0.24\n") + "  and will soon be removed. Please see the Compressors wiki page at\n") + "  https://github.com/meskyanichi/backup/wiki/Compressors"))
private;Fi[	I"3data//backup_proj/backup/encryptor/open_ssl.rb;Ti	I"|attr_accessor(:password_file)
attr_accessor(:base64)
attr_accessor(:salt)
block_given?
instance_eval(&var)
log!
private;Fi[	I"&data//backup_proj/backup/model.rb;TiI"èvar.to_s
var.to_s
procedure_instance_variables.each
block_given?
instance_eval(&var)
(Model.all << self)
(@var << Archive.new(self, var, &var));Fi[	I"1data//backup_proj/backup/notifier/hipchat.rb;TiI"êattr_accessor(:success_color)
attr_accessor(:warning_color)
attr_accessor(:failure_color)
block_given?
instance_eval(&var)
private
success_color;Fi[	I".data//backup_proj/backup/notifier/mail.rb;TiI"}attr_accessor(:exim)
attr_accessor(:exim_args)
attr_accessor(:mail_folder)
block_given?
instance_eval(&var)
private
new_email;Fi[	I"/data//backup_proj/backup/notifier/prowl.rb;TiI"ñBackup::Dependency.load("prowler")
attr_accessor(:application)
attr_accessor(:api_key)
block_given?
instance_eval(&var)
private
("[Backup::%s]" % var);Fi[	I"2data//backup_proj/backup/notifier/pushover.rb;TiI"©attr_accessor(:device)
attr_accessor(:title)
attr_accessor(:priority)
block_given?
instance_eval(&var)
private
("[Backup::%s] #{@model.label} (#{@model.trigger})" % var);Fi[	I"1data//backup_proj/backup/notifier/twitter.rb;TiI"˘Backup::Dependency.load("twitter")
attr_accessor(:consumer_key, :consumer_secret)
attr_accessor(:oauth_token, :oauth_token_secret)
block_given?
instance_eval(&var)
private
("[Backup::%s] #{@model.label} (#{@model.trigger}) (@ #{@model.time})" % var);Fi[	I"3data//backup_proj/backup/storage/cloudfiles.rb;Ti	I"Jattr_accessor(:username, :api_key, :auth_url)
attr_accessor(:servicenet)
attr_accessor(:container, :path)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :rackspace_username => (username), :rackspace_api_key => (api_key), :rackspace_auth_url => (auth_url), :rackspace_servicenet => (servicenet));Fi[	I"0data//backup_proj/backup/storage/dropbox.rb;TiI"√attr_deprecate(:email, :version => "3.0.17")
attr_deprecate(:password, :version => "3.0.17")
attr_deprecate(:timeout, :version => "3.0.21")
block_given?
instance_eval(&var)
private
cached_session;Fi[	I",data//backup_proj/backup/storage/ftp.rb;Ti
I"äattr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:passive_mode)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private;Fi[	I".data//backup_proj/backup/storage/local.rb;TiI"êattr_accessor(:path)
File.join(File.expand_path((ENV["HOME"] or "")), "backups")
block_given?
instance_eval(&var)
File.expand_path(@var)
private;Fi[	I"1data//backup_proj/backup/storage/ninefold.rb;TiI"Backup::Dependency.load("fog")
attr_accessor(:storage_token, :storage_secret)
attr_accessor(:path)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :ninefold_storage_token => (storage_token), :ninefold_storage_secret => (storage_secret));Fi[	I".data//backup_proj/backup/storage/rsync.rb;TiI"Éattr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:local)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private;Fi[	I"+data//backup_proj/backup/storage/s3.rb;Ti	I"$attr_accessor(:access_key_id, :secret_access_key)
attr_accessor(:bucket, :path)
attr_accessor(:region)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :aws_access_key_id => (access_key_id), :aws_secret_access_key => (secret_access_key), :region => (region));Fi[	I",data//backup_proj/backup/storage/scp.rb;Ti
I"ëattr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private;Fi[	I"-data//backup_proj/backup/storage/sftp.rb;Ti
I"ëattr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private;Fi[	I",data//backup_proj/backup/syncer/base.rb;TiI"kattr_accessor(:mirror)
load_defaults!
Array.new
block_given?
instance_eval(&var)
(@var << var)
private;Fi[	I"9data//backup_proj/backup/syncer/cloud/cloud_files.rb;Ti	I"äattr_accessor(:container)
attr_accessor(:auth_url)
attr_accessor(:servicenet)
block_given?
instance_eval(&var)
path.sub(/^\//, "")
private;Fi[	I"0data//backup_proj/backup/syncer/cloud/s3.rb;TiI"úattr_accessor(:access_key_id, :secret_access_key)
attr_accessor(:bucket)
attr_accessor(:region)
block_given?
instance_eval(&var)
path.sub(/^\//, "")
private;Fi[	I"3data//backup_proj/backup/syncer/rsync/local.rb;Ti I"◊block_given?
instance_eval(&var)
Logger.message(("#{syncer_name} started syncing the following directories:\n  " + @var.join("\n  ")))
run(("#{utility(:rsync)} #{options} " + "#{directories_option} '#{dest_path}'"));Fi [	I"2data//backup_proj/backup/syncer/rsync/push.rb;Ti	I"‹attr_accessor(:ip)
attr_accessor(:port)
attr_accessor(:compress)
block_given?
instance_eval(&var)
write_password_file!
Logger.message(("#{syncer_name} started syncing the following directories:\n  " + @var.join("\n  ")));Fi[	I"%data//homebrew_proj/compilers.rb;TiI"ÜMacOS.gcc_42_build_version.to_i
(@var.to_sym == var.to_sym)
attr_reader(:compiler)
block_given?
instance_eval(&var)
var.nil?
@var.to_i;Fi[	@giJI"sdefine_helpers
define_scopes(var[:plural])
after_initialize
block_given?
instance_eval(&var)
@var.dup
@var.dup;Fi[	I"((@var - @var) - @var);FI")(((var - (2 * @var)) * 1000) / @var);Fi[[	I"9data//redmine_proj/plugins/rfpdf/lib/fpdf/chinese.rb;Ti'I"ûMBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@ÀiWI"ö(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@ÀidI"öCell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!;Fi[	@ÀioI"|(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1);Fi[	@ÀizI"ä(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)));Fi[	I":data//redmine_proj/plugins/rfpdf/lib/fpdf/japanese.rb;Ti'I"†SJISMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@÷i[I"ú(@var["type"] == "Type0")
SJISWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@÷igI"†Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var < 128);Fi[	@÷ivI"~(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + var)
(var + 1);Fi[	@÷i|I"|(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + var);Fi[	I"8data//redmine_proj/plugins/rfpdf/lib/fpdf/korean.rb;Ti$I"ûMBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@·iTI"ö(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@·iaI"öCell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!;Fi[	@·ilI"|(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1);Fi[	@·iwI"ä(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)));Fi[	I"7data//redmine_proj/plugins/rfpdf/lib/rfpdf/fpdf.rb;TiI"|(@var + var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@ÏiBI"ß(var + "B")
self.Cell(var, var, var[(var..var)], var, 2, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length;Fi[	@ÏiLI"ßself.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var == " "[0]);Fi[	@ÏiUI"{(var == -1)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1);Fi[	@Ïi_I"°self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1);Fi[	I"var[0, 1];FI"var[0, 1];Fi[[	I";data//homebrew_proj/vendor/multi_json/vendor/okjson.rb;Ti8I"b(var << [var, var, var])
var[(var.length..-1)]
var[0]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i9I"Svar[(var.length..-1)]
var[0]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i:I"Gvar[0]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i;I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i<I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i=I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i>I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i?I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚i@I"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iAI"Mvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
nulltok(var);Fi[	@˚iBI"Pvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
nulltok(var)
truetok(var);Fi[	@˚iHI"Struetok(var)
falsetok(var)
strtok(var)
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iII"Pfalsetok(var)
strtok(var)
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iJI"Lstrtok(var)
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iKI"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iLI"Jvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1];Fi[	@˚iMI"Lvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
numtok(var);Fi[	@˚iNI"Xvar[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
var[0, 1]
numtok(var)
(var[0, 4] == "null");Fi[	I"(var + 1);FI"(var + 1);Fi[[	@˚ivI"raise(Error, "string literal ends with a \"\\": \"#{q}\"")
var[var]
var[var]
(var + 1)
(var + 1)
Unesc[var[var]]
(var + 1);Fi[	@˚iyI"[(var + 1)
(var + 1)
Unesc[var[var]]
(var + 1)
(var + 1)
(var + 1)
hexdec4(var[var, 4]);Fi[	@˚izI"á(var + 1)
Unesc[var[var]]
(var + 1)
(var + 1)
(var + 1)
hexdec4(var[var, 4])
raise(Error, "invalid escape sequence \u#{q[r, 4]}: #{e}");Fi[	@˚iáI"â(var == "\"")
(var < Spc)
raise(Error, "invalid character in string literal \"#{q}\"")
(var + 1)
(var + 1)
var[0, var]
(var <= Uchar1max);Fi[	@Ài;I"(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
var.!;Fi[	@ÀiII"æCell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + (var ? (1) : (2)));Fi[	@ÀiqI"É(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)));Fi[	@÷i:I"|var[var]
(var == 10)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var < 128);Fi[	@÷iLI"∞Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + var);Fi[	@·i8I"(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
var.!;Fi[	@·iFI"æCell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + (var ? (1) : (2)));Fi[	@·inI"É(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)));Fi[	@Ïi%I"(var == 0)
(var - 1)
self.Cell(var, var, var[(var..var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var == " "[0]);Fi[	@Ïi7I"¥((((var - var) / 1000.0) * @var) / (var - 1))
out(sprintf("%.3f Tw", (@var * @var)))
self.Cell(var, var, var[(var..var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var + 1);Fi[	@ÏiWI"x(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + 1);Fi[	@ÏiaI"Ø(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
var.!=(var)
self.Cell(((var / 1000.0) * @var), var, var[var, var], 0, 0, "", 0, var);Fi[	I"0Compass::Exec::CommandOptionParser.new(var);FI"3var.extend(Compass::Exec::GlobalOptionsParser);Fi[[	I"9data//compass_proj/compass/commands/clean_project.rb;TiI"Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CleanProjectOptionsParser);Fi[	I":data//compass_proj/compass/commands/create_project.rb;TiI"$var.on("--prepare", "Prepare the project by only creating configuration files.")
register(:create)
register(:init)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CreateProjectOptionsParser);Fi[	I"Ddata//compass_proj/compass/commands/generate_grid_background.rb;Ti
I"‡require("compass/grid_builder")
include(Actions)
register(:"grid-img")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(GridBackgroundOptionsParser)
option_parser([]).to_s;Fi[	I"0data//compass_proj/compass/commands/help.rb;TiI"Ë(var << Compass::Frameworks.pretty_print)
(var << "\nGlobal Options:\n")
register(:help)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(HelpOptionsParser)
option_parser([]).to_s;Fi[	I"7data//compass_proj/compass/commands/interactive.rb;Ti
I"Óregister(:interactive)
require("sass/repl")
Sass::Repl.new.run
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(InteractiveOptionsParser);Fi[	I";data//compass_proj/compass/commands/list_frameworks.rb;Ti	I"»register(:frameworks)
options[:quiet]
Compass::Frameworks::ALL.each
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
option_parser([]).to_s
option_parser(var);Fi[	I"9data//compass_proj/compass/commands/project_stats.rb;Ti'I"	Compass::Stats::CssFile.new(var)
var.analyze!
["selector_count", "prop_count", "file_size"].map
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StatsOptionsParser);Fi[	I"=data//compass_proj/compass/commands/project_structure.rb;TiI"Àvar.map!
var.sort_by
var.map!
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StructureOptionsParser);Fi[	I"2data//compass_proj/compass/commands/sprite.rb;TiI"[Sass::Engine.new(var, Compass.sass_engine_options.merge(:syntax => :scss)).to_tree.to_sass
directory(File.dirname(options[:output_file]))
write_file(options[:output_file], var)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(SpriteOptionsParser);Fi[	I"9data//compass_proj/compass/commands/stamp_pattern.rb;Ti
I"Çrequire("compass/commands/update_project")
var.on("-x", "--syntax SYNTAX", [:sass, :scss], "Specify the syntax to use when generating stylesheets.", "One of sass or scss. Defaults to scss.")
register(:install)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StampPatternOptionsParser);Fi[	I"<data//compass_proj/compass/commands/unpack_extension.rb;TiI",puts
puts(readme(var))
"| This is a copy of the \"#{framework.name}\" extension.\n           |\n           | It now overrides the original which was found here:\n           |\n           | #{framework.path}\n           |\n           | Unpacking an extension is useful when you need to easily peruse the\n           | extension's source. You might find yourself tempted to change the\n           | stylesheets here. If you do this, you'll find it harder to take\n           | updates from the original author. Sometimes this seems like a good\n           | idea at the time, but in a few months, you'll probably regret it.\n           |\n           | In the future, if you take an update of this framework, you'll need to run\n           |\n           |     compass unpack #{framework.name}\n           |\n           | again or remove this unpacked extension.\n           |".gsub(/^\s*\| ?/, "")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ExtensionOptionsParser);Fi[	I":data//compass_proj/compass/commands/update_project.rb;Ti,I" Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser);Fi[	I"<data//compass_proj/compass/commands/validate_project.rb;TiI"*require("compass/validator")
UpdateProject.new(working_path, options).perform
Dir.chdir(Compass.configuration.project_path)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ValidationOptionsParser);Fi[	I"9data//compass_proj/compass/commands/watch_project.rb;Ti+I"˜var.run
GC.start
::Compass::Exec::Helpers.report_error(var, options)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser);Fi[	I"?data//compass_proj/compass/commands/write_configuration.rb;TiI"ÏCompass.configuration.debug.each
project_directory
options
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ConfigurationOptionsParser);Fi[	I"extend(self);FI"ARGV.named.empty?;Fi[[	I"'data//homebrew_proj/cmd/--cache.rb;Ti I"8extend(self)
ARGV.named.empty?
puts(HOMEBREW_CACHE);Fi [	I"(data//homebrew_proj/cmd/--cellar.rb;Ti I"9extend(self)
ARGV.named.empty?
puts(HOMEBREW_CELLAR);Fi [	I"(data//homebrew_proj/cmd/--prefix.rb;Ti I"9extend(self)
ARGV.named.empty?
puts(HOMEBREW_PREFIX);Fi [	I"%data//homebrew_proj/cmd/audit.rb;TiI"rrequire("formula")
require("utils")
require("superenv")
extend(self)
ARGV.named.empty?
ARGV.formulae
var.each;Fi[	I"#data//homebrew_proj/cmd/cat.rb;Ti I"Zextend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
cd(HOMEBREW_REPOSITORY);Fi [	I"'data//homebrew_proj/cmd/cleanup.rb;Ti	I"érequire("keg")
require("bottles")
require("cmd/prune")
extend(self)
ARGV.named.empty?
HOMEBREW_CELLAR.directory?
HOMEBREW_CELLAR.children.each;Fi[	I"%data//homebrew_proj/cmd/fetch.rb;TiI"mrequire("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ARGV.include?("--deps");Fi[	I"$data//homebrew_proj/cmd/home.rb;Ti I">extend(self)
ARGV.named.empty?
exec_browser(HOMEBREW_WWW);Fi [	I"'data//homebrew_proj/cmd/install.rb;TiI"õrequire("formula_installer")
require("hardware")
require("blacklist")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ARGV.include?("--head");Fi[	I"$data//homebrew_proj/cmd/link.rb;TiI"crequire("ostruct")
extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
Process.uid.zero?;Fi[	I"#data//homebrew_proj/cmd/log.rb;Ti I"bextend(self)
ARGV.named.empty?
cd(HOMEBREW_REPOSITORY)
exec("git", "log", *ARGV.options_only);Fi [	I"$data//homebrew_proj/cmd/test.rb;TiI"órequire("extend/ENV")
require("hardware")
require("keg")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ENV.extend(HomebrewEnvExtension);Fi[	I")data//homebrew_proj/cmd/uninstall.rb;TiI"nrequire("keg")
require("formula")
extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
ARGV.force?.!;Fi[	I"&data//homebrew_proj/cmd/unlink.rb;Ti I"Mextend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
ARGV.kegs.each;Fi [	I"$data//homebrew_proj/cmd/uses.rb;TiI"drequire("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
Formula.select;Fi[	I"option_parser(var);FI"var.parse!;Fi[[	@HiI"±var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CleanProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	I"3data//compass_proj/compass/commands/default.rb;TiI"ôvar.on("-v", "--version")
Compass::Exec::CommandOptionParser.new(var)
var.extend(DefaultOptionsParser)
option_parser(var)
var.parse!
var.options
Proc.new;Fi[	@NiI"‚var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(GridBackgroundOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
(var.size == 0)
raise(OptionParser::ParseError, "Please specify the grid dimensions.");Fi[	@QiI"óvar.extend(Compass::Exec::GlobalOptionsParser)
var.extend(HelpOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options
var.shift;Fi[	@TiI"ïvar.extend(Compass::Exec::ProjectOptionsParser)
var.extend(InteractiveOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@WiI"õCompass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	I"9data//compass_proj/compass/commands/print_version.rb;TiI"æCompass::Exec::CommandOptionParser.new(var)
var.extend(VersionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options
(var << "Compass #{::Compass.version[:string]}");Fi[	@Zi,I"™var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StatsOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@]iI"Ævar.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StructureOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@`iI"´var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(SpriteOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@ciI"±var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StampPatternOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@fiI"Ævar.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ExtensionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@ii1I"≥var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@liI"Øvar.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ValidationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	@riI"≤var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ConfigurationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options;Fi[	I"option_parser([]).to_s;FI"option_parser(var);Fi[[	@HiI"‘var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CleanProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@NiI"«Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(GridBackgroundOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
(var.size == 0);Fi[	@QiI"πCompass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(HelpOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@TiI"ƒvar.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(InteractiveOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@WiI"πCompass::Frameworks::ALL.each
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@∑iI"†register(:version)
Compass::Exec::CommandOptionParser.new(var)
var.extend(VersionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@Zi+I"Õvar.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StatsOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@]iI"—var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StructureOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@`iI"Œvar.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(SpriteOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@ciI"‘var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StampPatternOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@fiI"—var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ExtensionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@ii0I"÷var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@liI"“var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ValidationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	@riI"’var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ConfigurationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var);Fi[	I"synchronize;FI"synchronize;Fi[[	I"Zdata//activerecord_proj/active_record/connection_adapters/abstract/connection_pool.rb;Ti
I"drequire("monitor")
require("set")
@var.new_cond
synchronize
synchronize
synchronize
synchronize;Fi[	@ÓiI"]require("set")
@var.new_cond
synchronize
synchronize
synchronize
synchronize
synchronize;Fi[	@ÓiI"Z@var.new_cond
synchronize
synchronize
synchronize
synchronize
synchronize
synchronize;Fi[	@ÓiI"Tsynchronize
synchronize
synchronize
synchronize
synchronize
synchronize
private;Fi[	@ÓiI"_synchronize
synchronize
synchronize
synchronize
synchronize
private
@var.synchronize(&var);Fi[	@Ói*I"vQueue.new(self)
synchronize
@var[current_connection_id]
synchronize
synchronize
synchronize
current_connection_id;Fi[	@Ói+I"ysynchronize
@var[current_connection_id]
synchronize
synchronize
synchronize
current_connection_id
active_connection?;Fi[	@Ói1I"cactive_connection?
connection
release_connection(var)
synchronize
synchronize
synchronize
reap;Fi[	@Ói2I"ïconnection
release_connection(var)
synchronize
synchronize
synchronize
reap
deprecate(:clear_stale_cached_connections! => "Please use #reap instead");Fi[	@Ói6I"äsynchronize
reap
deprecate(:clear_stale_cached_connections! => "Please use #reap instead")
synchronize
synchronize
synchronize
synchronize;Fi[	@Ói7I"Üreap
deprecate(:clear_stale_cached_connections! => "Please use #reap instead")
synchronize
synchronize
synchronize
synchronize
private;Fi[	@Ói8I"ãdeprecate(:clear_stale_cached_connections! => "Please use #reap instead")
synchronize
synchronize
synchronize
synchronize
private
@var.poll;Fi[	I"&data//rescue_proj/resque/queue.rb;TiI"éResque.logger.error("Invalid UTF-8 character in job: #{e.message}")
synchronize
(var == 1)
synchronize
synchronize
@var.llen(@var)
(size == 0);Fi[	I"var.options;FI"var.shift;Fi[[	@HiI"gvar.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.empty?
var.options;Fi[	@Ki%I"àvar.options
var.parse!
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@NiI"çvar.parse!
(var.size == 0)
raise(OptionParser::ParseError, "Please specify the grid dimensions.")
var.options
var.shift
var.options
var.shift;Fi[	@NiI"üraise(OptionParser::ParseError, "Please specify the grid dimensions.")
var.options
var.shift
var.options
var.shift
var.options
assert_project_directory_exists!;Fi[	@QiI"êoption_parser([]).to_s
option_parser(var)
var.parse!
var.options
var.shift
var.options
Compass::Commands.command_exists?(options[:help_command]);Fi[	@Zi1I"òparse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@]iI"\var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.options;Fi[	@`iI"ùvar.parse!
parse_arguments!(var, var)
var.options
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Please specify at least one image to sprite.");Fi[	@ciI"üvar.options
var[1]
(var.size > 0)
var.options
var.shift
(var.size > 0)
raise(OptionParser::ParseError, "Unexpected trailing arguments: #{arguments.join(" ")}");Fi[	@fi I"úparse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Please specify an extension to unpack.");Fi[	@ii7I"gvar.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.empty?
var.options;Fi[	@liI"òparse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@ri$I"òparse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@EI"4var.extend(Compass::Exec::ProjectOptionsParser);Fi[[	@HiI"Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CleanProjectOptionsParser)
option_parser([]).to_s;Fi[	@KiI"Íregister(:create)
register(:init)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CreateProjectOptionsParser)
option_parser([]).to_s;Fi[	@TiI"Órequire("sass/repl")
Sass::Repl.new.run
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(InteractiveOptionsParser)
option_parser([]).to_s;Fi[	@Zi(I"ˇvar.analyze!
["selector_count", "prop_count", "file_size"].map
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StatsOptionsParser)
option_parser([]).to_s;Fi[	@]iI"Ÿvar.sort_by
var.map!
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StructureOptionsParser)
option_parser([]).to_s;Fi[	@`iI"directory(File.dirname(options[:output_file]))
write_file(options[:output_file], var)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(SpriteOptionsParser)
option_parser([]).to_s;Fi[	@ciI"nvar.on("-x", "--syntax SYNTAX", [:sass, :scss], "Specify the syntax to use when generating stylesheets.", "One of sass or scss. Defaults to scss.")
register(:install)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(StampPatternOptionsParser)
option_parser([]).to_s;Fi[	@fiI">puts(readme(var))
"| This is a copy of the \"#{framework.name}\" extension.\n           |\n           | It now overrides the original which was found here:\n           |\n           | #{framework.path}\n           |\n           | Unpacking an extension is useful when you need to easily peruse the\n           | extension's source. You might find yourself tempted to change the\n           | stylesheets here. If you do this, you'll find it harder to take\n           | updates from the original author. Sometimes this seems like a good\n           | idea at the time, but in a few months, you'll probably regret it.\n           |\n           | In the future, if you take an update of this framework, you'll need to run\n           |\n           |     compass unpack #{framework.name}\n           |\n           | again or remove this unpacked extension.\n           |".gsub(/^\s*\| ?/, "")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ExtensionOptionsParser)
option_parser([]).to_s;Fi[	@ii-I"Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser)
option_parser([]).to_s;Fi[	@liI"$UpdateProject.new(working_path, options).perform
Dir.chdir(Compass.configuration.project_path)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ValidationOptionsParser)
option_parser([]).to_s;Fi[	@oi,I"GC.start
::Compass::Exec::Helpers.report_error(var, options)
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(CompileProjectOptionsParser)
var.extend(WatchProjectOptionsParser);Fi[	@riI"‚project_directory
options
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser)
var.extend(Compass::Exec::ProjectOptionsParser)
var.extend(ConfigurationOptionsParser)
option_parser([]).to_s;Fi[	@»I"(var + 1);Fi[[	@ÀieI"v(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ");Fi[	@ÀipI"|(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var);Fi[	@Ài{I"Ä(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)))
var.!=(var);Fi[	@÷ihI"Ç(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var < 128)
(var + (var[var.chr] or 0));Fi[	@÷i}I"x(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + var)
(var >= 128);Fi[	@·ibI"v(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ");Fi[	@·imI"|(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var);Fi[	@·ixI"Ä(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)))
var.!=(var);Fi[	@ÏiMI"â(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var == " "[0])
(var + GetCharWidth(var, var));Fi[	@ÏiVI"|(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var);Fi[	@Ïi`I"u(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
var.!=(var);Fi[	I"out(">>");FI"out("endobj");Fi[[	@ÀiÉI"Àout(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font");Fi[	@ÀiöI"Xout("/Descent -200")
out("/CapHeight 800")
out("/StemV 50")
out(">>")
out("endobj");Fi[	@÷iãI"Àout(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font");Fi[	@÷iïI"¡out((("/FontDescriptor " + (@var + 1).to_s) + " 0 R"))
var["cw"].keys.sort.each
out((var + "] 231 325 500 631 [500] 326 389 500]"))
out(">>")
out("endobj")
newobj
out("<</Type /FontDescriptor");Fi[	@÷i°I"Xout("/Descent -200")
out("/CapHeight 800")
out("/StemV 60")
out(">>")
out("endobj");Fi[	@·iÄI"Àout(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font");Fi[	@·iñI"Xout("/Descent -200")
out("/CapHeight 800")
out("/StemV 50")
out(">>")
out("endobj");Fi[	@ÏiôI"åout((var + "]"))
out(("/Count " + var.to_s))
out(sprintf("/MediaBox [0 0 %.2f %.2f]", var, var))
out(">>")
out("endobj")
@var.each
@var.each;Fi[	@Ïi≠I"äout("2 0 obj")
out("<<")
putresourcedict
out(">>")
out("endobj")
out(("/Producer " + textstring(("Ruby FPDF " + FPDF_VERSION))))
@var.nil?;Fi[	@Ïi’I"Fnewobj
out("<<")
putinfo
out(">>")
out("endobj")
newobj
out("<<");Fi[	@Ïi⁄I"Pnewobj
out("<<")
putcatalog
out(">>")
out("endobj")
@var.length
out("xref");Fi[	I"assert(var.ppc7400?.!);FI"assert(var.ppc64?.!);Fi[[	I"*data//homebrew_proj/test/test_mach.rb;TiI"†assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!);Fi[	@ziI"†assert(var.universal?.!)
assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!);Fi[	@zi!I"†assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!);Fi[	@zi,I"†assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?);Fi[	@zi7I"¢assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@ziBI"¢assert(var.universal?.!)
assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@ziMI"¢assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@ziXI"§assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@ziqI"§assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@zi~I"§assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	@ziÜI"§assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!);Fi[	I"shellout(var);FI"$?.exitstatus.!=(0);Fi[[	I"=data//redmine_proj/redmine/scm/adapters/darcs_adapter.rb;TiI"•Entries.new
(var << " --match #{shell_quote("hash #{identifier}")}")
(var << " #{shell_quote(path)}")
shellout(var)
$?.exitstatus.!=(0)
var.compact!
var.sort_by_name;Fi[	@ïi"I"Ø(var << " --from-match #{shell_quote("hash #{identifier_from}")}")
var[:limit]
(var << " --last #{options[:limit].to_i}")
shellout(var)
$?.exitstatus.!=(0)
var.blank?
var.nil?;Fi[	@ïi*I"!(var << " --to-match #{shell_quote("hash #{identifier_from}")}")
(var << " --from-match #{shell_quote("hash #{identifier_to}")}")
(var << " -u #{shell_quote(path)}")
shellout(var)
$?.exitstatus.!=(0)
(var << " --match #{shell_quote("hash #{identifier}")}")
(var << " #{shell_quote(path)}");Fi[	@ïi.I"∞$?.exitstatus.!=(0)
(var << " --match #{shell_quote("hash #{identifier}")}")
(var << " #{shell_quote(path)}")
shellout(var)
$?.exitstatus.!=(0)
private
var.elements["modified"];Fi[	I"Bdata//redmine_proj/redmine/scm/adapters/subversion_adapter.rb;TiI"lvar.to_i
Entries.new
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
logger
logger.debug?;Fi[	@ûi I"r(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i;Fi[	@ûi-I"évar[:limit]
(var << " --limit #{options[:limit].to_i}")
(var << (" " + target(var)))
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i;Fi[	@ûi8I"¢(var << "#{identifier_from}")
(var << " #{target(path)}@#{identifier_from}")
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i;Fi[	@ûi=I"r(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i;Fi[	@ûiCI"lvar.to_i
(var << credentials_string)
Annotate.new
shellout(var)
$?.exitstatus.!=(0)
private
@var.blank?;Fi[	I"broadcast(var);FI"broadcast(var);Fi[[	I"4data//cucumber_prok/cucumber/ast/tree_walker.rb;TiI"xattr_accessor(:configuration)
attr_reader(:step_mother)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var);Fi[	@ØiI"Çattr_accessor(:configuration)
attr_reader(:step_mother)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var);Fi[	@Øi	I"xattr_reader(:step_mother)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var);Fi[	@Øi
I"rbroadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var);Fi[	@ØiI"rbroadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var);Fi[	@ØiI"|broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var, var, var, var)
broadcast(var);Fi[	@ØiI"|broadcast(var)
broadcast(var)
broadcast(var, var, var, var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var);Fi[	@ØiI"∏broadcast(var, var)
broadcast(var)
broadcast(var, var, var, var)
broadcast(var)
broadcast(var)
broadcast(var, var, var, var, var, var, var, var)
broadcast(var, var, var, var, var, var);Fi[	@ØiI"ãbroadcast(var, var, var, var, var, var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var);Fi[	@ØiI"xbroadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(*var);Fi[	I"@var.each;FI"@var.each;Fi[[	I"(data//bundler_proj/bundler/graph.rb;Ti'I"”var.output_format
require("graphviz")
::GraphViz.digraph(@var, :concentrate => (true), :normalize => (true), :nodesep => 0.55)
@var.each
@var.each
(@var.to_s == "debug")
$stdout.puts(g.output(:none => (String)));Fi[	I"?data//cucumber_prok/cucumber/wire_support/wire_language.rb;TiI"B@var.map
var.flatten.join("\n")
protected
@var.each
@var.each;Fi[	I"-data//devise_proj/devise/param_filter.rb;TiI"Kstringify_params(var.dup)
@var.each
@var.each
var.is_a?(Hash)
var.each;Fi[	I"@data//diaspora_proj/controllers/conversations_controller.rb;Ti	I"frespond_to(:html, :mobile, :json, :js)
Conversation.joins(:conversation_visibilities).where(:conversation_visibilities => ({ :person_id => (current_user.person_id) })).paginate(:page => (params[:page]), :per_page => 15, :order => "updated_at DESC")
ConversationVisibility.where(:person_id => (current_user.person_id)).paginate(:page => (params[:page]), :per_page => 15, :order => "updated_at DESC")
@var.each
@var.each
Conversation.joins(:conversation_visibilities).where(:conversation_visibilities => ({ :person_id => (current_user.person_id), :conversation_id => (params[:conversation_id]) })).first
respond_with;Fi[	@ÏiõI"xout(sprintf("/MediaBox [0 0 %.2f %.2f]", var, var))
out(">>")
out("endobj")
@var.each
@var.each
@var.each
@var.each;Fi[	@ÏiúI"Tout(">>")
out("endobj")
@var.each
@var.each
@var.each
@var.each
@var.each_value;Fi[	@ÏiùI"out("endobj")
@var.each
@var.each
@var.each
@var.each
@var.each_value
out("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]");Fi[	I"5data//rspec_proj/spec/mocks/argument_matchers.rb;Ti
I"j(var == @var)
TrueClass.===(var)
FalseClass.===(var)
@var.each
@var.each
@var.all?
@var.matches?(var);Fi[	I">data//state_machine_proj/state_machine/node_collection.rb;TiI"u(@var << (var = { :nodes => (var), :block => (var) }))
each
(@var << var)
@var.each
@var.each
var.each
@var.each;Fi[	@›iI"T@var.each
@var.each
var.each
@var.each
@var.each
@var[var]
self.index(var)[var];Fi[	I"(var < var);FI"var[var].is_a?(String);Fi[[	@ÀiI"iGetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@Ài4I"i(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@Ài[I"{(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@÷iI"kGetSJISStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@÷i4I"i(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@÷i_I"{(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@·iI"iGetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@·i1I"i(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	@·iXI"{(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var];Fi[	I"%require("twitter/api/arguments");FI"!require("twitter/api/utils");Fi[[	I"6data//twitter_proj/twitter/api/direct_messages.rb;Ti I"|require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/direct_message")
require("twitter/user");Fi [	I"0data//twitter_proj/twitter/api/favorites.rb;Ti I"ãrequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/error/already_favorited")
require("twitter/error/forbidden");Fi [	I"<data//twitter_proj/twitter/api/friends_and_followers.rb;Ti I"require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/cursor")
require("twitter/error/forbidden");Fi [	I",data//twitter_proj/twitter/api/lists.rb;Ti I"~require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/core_ext/enumerable")
require("twitter/cursor");Fi [	I"5data//twitter_proj/twitter/api/saved_searches.rb;Ti I"require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/saved_search")
include(Twitter::API::Utils);Fi [	I"6data//twitter_proj/twitter/api/suggested_users.rb;Ti I"xrequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/suggestion")
require("twitter/user");Fi [	I"-data//twitter_proj/twitter/api/tweets.rb;Ti I"ãrequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/error/already_retweeted")
require("twitter/error/forbidden");Fi [	I"3data//twitter_proj/twitter/api/undocumented.rb;TiI"írequire("twitter/action_factory")
require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/cursor")
require("twitter/tweet");Fi[	I",data//twitter_proj/twitter/api/users.rb;Ti I"árequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/core_ext/enumerable")
require("twitter/error/not_found");Fi [	I"require("twitter/user");FI"!include(Twitter::API::Utils);Fi[[	@¸iI"Erequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/direct_message")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response(Twitter::DirectMessage, :get, "/1.1/direct_messages.json", var)
objects_from_response(Twitter::DirectMessage, :get, "/1.1/direct_messages/sent.json", var);Fi[	@ˇi
I"ƒrequire("twitter/error/already_favorited")
require("twitter/error/forbidden")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop;Fi[	@i
I"Krequire("twitter/cursor")
require("twitter/error/forbidden")
require("twitter/relationship")
require("twitter/user")
include(Twitter::API::Utils)
cursor_from_response_with_user(:ids, nil, :get, "/1.1/friends/ids.json", var, :friend_ids)
cursor_from_response_with_user(:ids, nil, :get, "/1.1/followers/ids.json", var, :follower_ids);Fi[	@iI"˚require("twitter/error/not_found")
require("twitter/list")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response_with_user(Twitter::List, :get, "/1.1/lists/list.json", var)
Twitter::API::Arguments.new(var);Fi[	I"5data//twitter_proj/twitter/api/spam_reporting.rb;TiI"†require("twitter/api/utils")
require("twitter/user")
include(Twitter::API::Utils)
threaded_user_objects_from_response(:post, "/1.1/users/report_spam.json", var);Fi[	@iI"πrequire("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/suggestion")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop;Fi[	I"0data//twitter_proj/twitter/api/timelines.rb;TiI""require("twitter/api/utils")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response(Twitter::Tweet, :get, "/1.1/statuses/mentions_timeline.json", var)
objects_from_response_with_user(Twitter::Tweet, :get, "/1.1/statuses/user_timeline.json", var);Fi[	@i
I"2require("twitter/api/utils")
require("twitter/cursor")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response(Twitter::ActionFactory, :get, "/i/activity/about_me.json", var)
objects_from_response(Twitter::ActionFactory, :get, "/i/activity/by_friends.json", var);Fi[	@iI"Ùrequire("twitter/error/not_found")
require("twitter/profile_banner")
require("twitter/settings")
require("twitter/user")
include(Twitter::API::Utils)
var.size.zero?
object_from_response(Twitter::Settings, var, "/1.1/account/settings.json", var);Fi[	I"assert(var.x86_64?.!);FI"assert(var.ppc7400?.!);Fi[[	@zi
I"≠Pathname.new("#{TEST_FOLDER}/mach/fat.dylib")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?);Fi[	@ziI"ÆPathname.new("#{TEST_FOLDER}/mach/i386.dylib")
assert(var.universal?.!)
assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?);Fi[	@zi+I"´Pathname.new("#{TEST_FOLDER}/mach/a.out")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@zi6I"∞Pathname.new("#{TEST_FOLDER}/mach/fat.bundle")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@ziAI"±Pathname.new("#{TEST_FOLDER}/mach/i386.bundle")
assert(var.universal?.!)
assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@ziWI"ºPathname.new("#{TEST_FOLDER}/tarballs/testball-0.1.tbz")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@zipI"övar.write("#!/bin/sh")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@zi}I"§var.write("#! /usr/bin/perl -w")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	@ziÖI"îvar.write(" #!")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!);Fi[	I"var.parse!;FI"parse_arguments!(var, var);Fi[[	@HiI"êvar.extend(CleanProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0);Fi[	@Zi-I"ävar.extend(StatsOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1);Fi[	@]iI"çvar.extend(StructureOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0);Fi[	@`iI"ávar.extend(SpriteOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
var.options;Fi[	@ciI"ëvar.extend(StampPatternOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 0);Fi[	@fiI"évar.extend(ExtensionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1);Fi[	@ii2I"ívar.extend(CompileProjectOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0);Fi[	@liI"èvar.extend(ValidationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1);Fi[	@ri I"ívar.extend(ConfigurationOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1);Fi[	@FI"var.options;Fi[[	@HiI"Öoption_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first);Fi[	@Zi.I"|option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options;Fi[	@]iI"Öoption_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first);Fi[	@`iI"voption_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
var.options
var.shift;Fi[	@ciI"®option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 0)
raise(OptionParser::ParseError, "Please specify a pattern.");Fi[	@fiI"|option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options;Fi[	@ii3I"Öoption_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first);Fi[	@liI"|option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options;Fi[	@ri!I"|option_parser([]).to_s
option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options;Fi[	I"var[var].is_a?(String);FI"var[var].ord;Fi[[	@ÀiI"_@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@Ài5I"ivar.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@Ài\I"gvar.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@÷iI"_@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@÷i5I"ivar.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var == 10);Fi[	@÷i`I"gvar.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var == 10);Fi[	@·iI"_@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@·i2I"ivar.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	@·iYI"gvar.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128);Fi[	I"raise(NotImplementedError);FI"raise(NotImplementedError);Fi[[	I"Tdata//activerecord_proj/active_record/associations/join_dependency/join_part.rb;TiI"$attr_reader(:active_record)
delegate(:table_name, :column_names, :primary_key, :reflections, :arel_engine, :to => :active_record)
Arel::Nodes::TableAlias.new(table, aliased_table_name)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@äi	I"Qdelegate(:table_name, :column_names, :primary_key, :reflections, :arel_engine, :to => :active_record)
Arel::Nodes::TableAlias.new(table, aliased_table_name)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
([primary_key] + (column_names - [primary_key])).compact.each_with_index;Fi[	@äi
I"Arel::Nodes::TableAlias.new(table, aliased_table_name)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
([primary_key] + (column_names - [primary_key])).compact.each_with_index
var[aliased_primary_key];Fi[	I"Pdata//activerecord_proj/active_record/connection_adapters/statement_pool.rb;TiI"include(Enumerable)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@ëiI"öinclude(Enumerable)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@ëiI"µinclude(Enumerable)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@ëi	I"ºraise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@ëi
I"°raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	@ëiI"Üraise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError)
raise(NotImplementedError);Fi[	I"include(Operation);FI"prepare;Fi[[	I"Ddata//mongoid_proj/lib/mongoid/persistence/atomic/add_to_set.rb;Ti I"7include(Operation)
prepare
path
value.is_a?(Array);Fi [	I"=data//mongoid_proj/lib/mongoid/persistence/atomic/bit.rb;Ti I"include(Operation)
prepare;Fi [	I"=data//mongoid_proj/lib/mongoid/persistence/atomic/inc.rb;Ti I"8include(Operation)
prepare
private
value.__to_inc__;Fi [	I"=data//mongoid_proj/lib/mongoid/persistence/atomic/pop.rb;Ti I"include(Operation)
prepare;Fi [	I">data//mongoid_proj/lib/mongoid/persistence/atomic/pull.rb;Ti I"include(Operation)
prepare;Fi [	I"Bdata//mongoid_proj/lib/mongoid/persistence/atomic/pull_all.rb;Ti I"include(Operation)
prepare;Fi [	I"@data//mongoid_proj/lib/mongoid/persistence/atomic/rename.rb;Ti I"include(Operation)
prepare;Fi [	I">data//mongoid_proj/lib/mongoid/persistence/atomic/sets.rb;Ti I"include(Operation)
prepare;Fi [	I"?data//mongoid_proj/lib/mongoid/persistence/atomic/unset.rb;Ti I"include(Operation)
prepare;Fi [	I"(var == 0);FI"(var == 0);Fi[[	I"Hdata//activerecord_proj/active_record/connection_adapters/column.rb;TiMI"èvar.!=(0)
Date.new(var, var, var)
var.nil?
(var == 0)
(var == 0)
(var == 0)
Time.send(Base.default_timezone, var, var, var, var, var, var, var);Fi[	@¡iNI"ûDate.new(var, var, var)
var.nil?
(var == 0)
(var == 0)
(var == 0)
Time.send(Base.default_timezone, var, var, var, var, var, var, var)
var.=~(Format::ISO_DATE);Fi[	@ÏiZI"i@var.!=(var)
out(var)
alias_method(:add_page, :AddPage)
(var == 0)
(var == 0)
(var == 0)
(var == -1);Fi[	@Ïi[I"}out(var)
alias_method(:add_page, :AddPage)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f G", (var / 255.0));Fi[	@ÏibI"ãsprintf("%.3f %.3f %.3f RG", (var / 255.0), (var / 255.0), (var / 255.0))
(@var > 0)
out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1);Fi[	@ÏicI"g(@var > 0)
out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f g", (var / 255.0));Fi[	@ÏikI"T@var.!=(@var)
(@var > 0)
out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1);Fi[	@ÏilI"g(@var > 0)
out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f g", (var / 255.0));Fi[	@ÏitI"çparsepng(var)
self.Error(("Unsupported image file type: " + var))
(@var.length + 1)
(var == 0)
(var == 0)
(var["w"] / @var)
(var["h"] / @var);Fi[	I"instance_eval(&var);FI"private;Fi[[	@âiI"Äattr_accessor(:warning_color)
attr_accessor(:failure_color)
block_given?
instance_eval(&var)
private
success_color
warning_color;Fi[	@åiI"£attr_accessor(:exim_args)
attr_accessor(:mail_folder)
block_given?
instance_eval(&var)
private
new_email
("[Backup::%s] #{@model.label} (#{@model.trigger})" % var);Fi[	@èi	I"Öattr_accessor(:application)
attr_accessor(:api_key)
block_given?
instance_eval(&var)
private
("[Backup::%s]" % var)
send_message(var);Fi[	@íiI"§attr_accessor(:title)
attr_accessor(:priority)
block_given?
instance_eval(&var)
private
("[Backup::%s] #{@model.label} (#{@model.trigger})" % var)
send_message(var);Fi[	@ïi	I"Ëattr_accessor(:consumer_key, :consumer_secret)
attr_accessor(:oauth_token, :oauth_token_secret)
block_given?
instance_eval(&var)
private
("[Backup::%s] #{@model.label} (#{@model.trigger}) (@ #{@model.time})" % var)
send_message(var);Fi[	@òi
I"2attr_accessor(:servicenet)
attr_accessor(:container, :path)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :rackspace_username => (username), :rackspace_api_key => (api_key), :rackspace_auth_url => (auth_url), :rackspace_servicenet => (servicenet))
remote_path_for(@var);Fi[	@õiI"¿attr_deprecate(:password, :version => "3.0.17")
attr_deprecate(:timeout, :version => "3.0.21")
block_given?
instance_eval(&var)
private
cached_session
Logger.message("Creating a new session!");Fi[	@§i	I"attr_accessor(:storage_token, :storage_secret)
attr_accessor(:path)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :ninefold_storage_token => (storage_token), :ninefold_storage_secret => (storage_secret))
connection.directories.get(var);Fi[	@™i
I"attr_accessor(:bucket, :path)
attr_accessor(:region)
block_given?
instance_eval(&var)
private
Fog::Storage.new(:provider => (provider), :aws_access_key_id => (access_key_id), :aws_secret_access_key => (secret_access_key), :region => (region))
super(var).sub(/^\//, "");Fi[	I"var[var].ord;FI"var[var];Fi[[	@ÀiI"avar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr];Fi[	@Ài6I"g(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n");Fi[	@Ài]I"fvar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n");Fi[	@÷iI"avar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr];Fi[	@÷i6I"à(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var == 10)
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@÷iaI"âvar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var == 10)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@·iI"avar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr];Fi[	@·i3I"g(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n");Fi[	@·iZI"fvar.length
(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n");Fi[	@ I"(var == 1);Fi[[	@ÀibI"®(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@ÀixI"⁄Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@÷ieI"üvar[var]
(var == 10)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@÷iI"⁄Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@·i_I"®(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@·iuI"⁄Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@ÏiJI"ßvar[var]
(var == "\n"[0])
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@Ïi]I"‘(var + 1)
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@di%I"Sself.type
var.arity
(var >= 0)
(var + 1)
(var == 1)
(var == :around)
(var + 1);Fi[	I"%assert(var.mach_o_executable?.!);FI"#assert(var.text_executable?.!);Fi[[	@ziI"Ìassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert((var.arch == :universal))
assert_match(/Mach-O (64-bit )?dynamically linked shared library/, file(var));Fi[	@ziI"ﬂassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert_match(/Mach-O dynamically linked shared library/, file(var));Fi[	@zi$I"Êassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert_match(/Mach-O 64-bit dynamically linked shared library/, file(var));Fi[	@zi:I"Œassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O (64-bit )?bundle/, file(var));Fi[	@ziEI"ƒassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O bundle/, file(var));Fi[	@ziPI"Àassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O 64-bit bundle/, file(var));Fi[	@zi[I"∫assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert((var.arch == :dunno));Fi[	@ziâI"πassert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert_equal([], var.archs)
assert((var.arch == :dunno));Fi[	I"var.gsub("\r", "");FI"var.length;Fi[[	@Ài)I"á(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n");Fi[	@ÀiYI"á@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String);Fi[	@÷i)I"á(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n");Fi[	@÷i]I"á@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String);Fi[	@·i&I"á(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n");Fi[	@·iVI"á@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String);Fi[	@ÏiI"ã(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)].chr == "\n");Fi[	@ÏiDI"~@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var];Fi[	I"(var == 1);FI"((@var - @var) - @var);Fi[[	@ÀicI"¶(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@ÀiyI"™Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@÷ifI"†(var == 10)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@÷i{I"™Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@·i`I"¶(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@·ivI"™Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@ÏiKI"®(var == "\n"[0])
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@Ïi^I"‘self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var)
(var + 1)
(var == 1)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	I"(var > var);FI"(var == -1);Fi[[	@ÀiAI"zvar.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var);Fi[	@ÀijI"{var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var);Fi[	@÷iDI"\(var <= 223)
(var + 500)
(var + 1000)
(var > var)
(var == -1)
(var == var)
(var == var);Fi[	@÷iqI"](var <= 223)
(var + 500)
(var + 1000)
(var > var)
(var == -1)
(var == var)
(@var > @var);Fi[	@·i>I"zvar.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var);Fi[	@·igI"{var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var);Fi[	@Ïi+I"l(var == " "[0])
(var + 1)
(var + GetCharWidth(var, var))
(var > var)
(var == -1)
(var == var)
(var + 1);Fi[	@ÏiQI"p(var + 1)
(var == " "[0])
(var + GetCharWidth(var, var))
(var > var)
(var == -1)
(@var > @var)
(@var + var);Fi[	@»I"var.gsub("\r", "");Fi[[	@Ài(I"~@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0);Fi[	@ÀiXI"åMBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var);Fi[	@÷i(I"~@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0);Fi[	@÷i\I"éSJISWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var);Fi[	@·i%I"~@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0);Fi[	@·iUI"åMBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var);Fi[	@ÏiI"~@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0);Fi[	@ÏiCI"ßself.Cell(var, var, var[(var..var)], var, 2, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var);Fi[	I"assert(var.ppc64?.!);FI"assert(var.dylib?.!);Fi[[	@zi-I"®assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?)
assert(var.text_executable?.!);Fi[	@zi8I"™assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@ziCI"®assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@ziNI"®assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@ziYI"™assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@zirI"®assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?);Fi[	@ziI"®assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?);Fi[	@ziáI"™assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	I"(var.to_i > 0);FI"var.to_i;Fi[[	@ûiI"åvar[2].scan(/\d+/).collect(&:to_i)
(var << credentials_string)
shellout(var)
(var.to_i > 0)
var.to_i
Entries.new
(var << credentials_string);Fi[	@ûiI"“logger.debug("Found #{entries.size} entries in the repository for #{target(path)}")
var.sort_by_name
self.class.client_version_above?([1, 5, 0])
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var);Fi[	@ûi"I"r(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0)
var.to_i;Fi[	@ûi$I"r$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0)
var.to_i
Revisions.new
(var << credentials_string);Fi[	@ûi/I"s(var << (" " + target(var)))
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0)
var.to_i;Fi[	@ûi1I"t$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0)
var.to_i
(var.to_i - 1)
(var << "#{identifier_to}:");Fi[	@ûi:I"(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var);Fi[	@ûi?I"~(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string)
Annotate.new;Fi[	I"var.pop;FI"var.first;Fi[[	@*iI"õrequire("thor/actions/empty_directory")
var.last.is_a?(Hash)
var.pop
var.first
action(CreateFile.new(self, var, (var or var.to_s), var))
attr_reader(:data);Fi[	@-iI"ârequire("thor/actions/create_file")
var.last.is_a?(Hash)
var.pop
var.first
action(CreateLink.new(self, var, var, var))
attr_reader(:data);Fi[	@0iI"ùrequire("thor/actions/empty_directory")
var.last.is_a?(Hash)
var.pop
var.first
action(Directory.new(self, var, (var or var), var, &var))
attr_reader(:source);Fi[	@3iI"ïrequire("erb")
require("open-uri")
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
create_file(var, nil, var);Fi[	@3iI"õFile.stat(var).mode
chmod(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
create_link(var, var, var);Fi[	@3iI"≠File.expand_path(find_in_source_paths(var.to_s))
create_link(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
open(var);Fi[	@3i I"öFile.basename(var)
create_file(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
var.sub(/\.tt$/, "")
File.expand_path(find_in_source_paths(var.to_s));Fi[	@giI"åinclude(EvalHelpers)
include(MatcherHelpers)
var.last.is_a?(Hash)
var.pop
var.first
var.respond_to?(:state_machines)
var.state_machines[var];Fi[	I"var.each;FI"private;Fi[[	I"Xdata//activerecord_proj/active_record/associations/preloader/through_association.rb;Ti	I"˙reflection.source_reflection
through_records_by_owner
Preloader.new(var.values.flatten, source_reflection.name, reflection_scope).run
var.each
private
Preloader.new(owners, through_reflection.name, through_scope).run
through_reflection.klass.unscoped;Fi[	I"9data//activerecord_proj/active_record/persistence.rb;Ti?I"Å(var << var)
var.empty?
current_time_from_proper_timezone
var.each
private
relation_for_destroy.delete_all
self.class.primary_key;Fi[	I"3data//cucumber_prok/cucumber/cli/drb_client.rb;Ti	I"«ENV["CUCUMBER_DRB"]
setup_support_for_io_streams_over_drb
DRbObject.new_with_uri("druby://127.0.0.1:#{port}")
var.each
private
DRb.start_service("druby://localhost:0")
DRb.start_service("druby://:0");Fi[	@Œi	I"g@var.each
@var.each
var.is_a?(Hash)
var.each
private
[Fixnum, TrueClass, FalseClass, Regexp].none?;Fi[	I"#data//homebrew_proj/cleaner.rb;TiI"}var.skip_clean?(var.info).!
var.info.rmtree
var.prefix.find
var.each
private
var.mach_o_executable?
var.text_executable?;Fi[	I"'data//homebrew_proj/extend/ARGV.rb;Ti8I"Dclone
quieter?
var.concat(["--verbose", "-v"])
var.each
private;Fi[	I"7data//mongoid_proj/lib/mongoid/atomic/modifiers.rb;Ti
I"Zvar.each_pair
var.each_pair
var.each_pair
var.each
private
var.has_key?(var)
var.each;Fi[	I"Ddata//redmine_proj/redmine/wiki_formatting/textile/formatter.rb;TiI"~var.strip
var.strip
var.strip
var.each
private
hard_breaks
var.gsub!(/(.)\n(?!\n|\Z| *([#*=]+(\s|$)|[{|]))/, "\\1<br />");Fi[	I"require("testing_env");FI"require("test/testball");Fi[[	I"-data//homebrew_proj/test/test_bottles.rb;Ti I"Xrequire("testing_env")
require("test/testball")
extend(self)
old_bottles_supported?;Fi [	I",data//homebrew_proj/test/test_bucket.rb;Ti I"srequire("testing_env")
require("test/testball")
SoftwareSpec.new(var)
(HOMEBREW_CACHE.parent + "test-0.1.zip");Fi [	I"/data//homebrew_proj/test/test_checksums.rb;Ti I"orequire("testing_env")
require("test/testball")
assert_nothing_raised
assert_raises(ChecksumMismatchError);Fi [	I"/data//homebrew_proj/test/test_compilers.rb;Ti I"ïrequire("testing_env")
require("test/testball")
["HOMEBREW_USE_CLANG", "HOMEBREW_USE_LLVM", "HOMEBREW_USE_GCC"].each
ENV.send(MacOS.default_compiler);Fi [	I"-data//homebrew_proj/test/test_formula.rb;Ti I"Nrequire("testing_env")
require("test/testball")
attr_reader(:url)
url("");Fi [	I")data//homebrew_proj/test/test_keg.rb;Ti I"Wrequire("testing_env")
require("test/testball")
require("keg")
require("stringio");Fi [	I"-data//homebrew_proj/test/test_patches.rb;Ti I"Yrequire("testing_env")
require("test/testball")
require("set")
attr_reader(:patches);Fi [	I".data//homebrew_proj/test/test_patching.rb;Ti I"Orequire("testing_env")
require("test/testball")
File.open(var, "r")
shutup;Fi [	@ I"(var == 2);Fi[[	@Ài<I"(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
var.!
(var.chr == " ");Fi[	@ÀiJI"°Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!;Fi[	@÷i;I"ä(var == 10)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var < 128)
(var + (var[var.chr] or 0));Fi[	@÷iMI"ÖCell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + var)
(var >= 128);Fi[	@·i9I"(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
var.!
(var.chr == " ");Fi[	@·iGI"°Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!;Fi[	@Ïi&I"~(var - 1)
self.Cell(var, var, var[(var..var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var == " "[0])
(var + 1);Fi[	@Ïi8I"ëout(sprintf("%.3f Tw", (@var * @var)))
self.Cell(var, var, var[(var..var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2)
(var + 1)
(@var > 0);Fi[	I"%Twitter::API::Arguments.new(var);FI"var.flatten.threaded_map;Fi[[	@ˇiI"objects_from_response(Twitter::Tweet, :get, "/1.1/favorites/list.json", var.options)
threaded_object_from_response(Twitter::Tweet, :post, "/1.1/favorites/destroy.json", var)
Twitter::API::Arguments.new(var)
Twitter::API::Arguments.new(var)
var.flatten.threaded_map;Fi[	@iI" var.flatten.threaded_map
object_from_response(Twitter::SavedSearch, :get, "/1.1/saved_searches/show/#{id}.json", var)
object_from_response(Twitter::SavedSearch, :post, "/1.1/saved_searches/create.json", var.merge(:query => (var)))
Twitter::API::Arguments.new(var)
var.flatten.threaded_map;Fi[	@iI"`Twitter::API::Arguments.new(var)
object_from_response(Twitter::Tweet, :post, "/1.1/statuses/update_with_media.json", var.merge("media[]" => (var), "status" => (var)))
object_from_response(Twitter::OEmbed, :get, "/1.1/statuses/oembed.json?id=#{id}", var)
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
private
Twitter::API::Arguments.new(var);Fi[	@iI"±Twitter::API::Arguments.new(var)
var.flatten.threaded_map
private
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
post("/1.1/statuses/retweet/#{id}.json", var)
var.dup;Fi[	@iI"Üvar[:body]
var[:body].merge!(:id => (var))
Twitter::Tweet.from_response(var)
Twitter::API::Arguments.new(var)
var.flatten.threaded_map;Fi[	I",data//twitter_proj/twitter/api/utils.rb;Ti	I"™require("twitter/cursor")
require("twitter/user")
private
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
Twitter::API::Arguments.new(var)
var.options[:user_id];Fi[	@iI"≤send(var.to_sym, var, var)[:body]
objects_from_array(var, var)
var.map
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
send(var.to_sym, var, var)
var.from_response(var);Fi[	I"binding;FI"binding;Fi[[	I"Edata//mongoid_proj/lib/mongoid/relations/bindings/embedded/in.rb;Ti	I"Rbase
metadata.inverse_metadata(target)
base.parentize(target)
binding
binding;Fi[	I"Gdata//mongoid_proj/lib/mongoid/relations/bindings/embedded/many.rb;TiI"(var.parentize(base)
binding
binding;Fi[	I"Fdata//mongoid_proj/lib/mongoid/relations/bindings/embedded/one.rb;TiI"+target.parentize(base)
binding
binding;Fi[	I"Gdata//mongoid_proj/lib/mongoid/relations/bindings/referenced/in.rb;Ti I"binding
binding;Fi [	I"Idata//mongoid_proj/lib/mongoid/relations/bindings/referenced/many.rb;Ti I"binding
binding;Fi [	I"Qdata//mongoid_proj/lib/mongoid/relations/bindings/referenced/many_to_many.rb;Ti I"binding
binding;Fi [	I"Hdata//mongoid_proj/lib/mongoid/relations/bindings/referenced/one.rb;Ti I"binding
binding;Fi [	I"out("endobj");FI"newobj;Fi[[	@ÀiÑI"Æout(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0");Fi[	@ÀièI"™(var["CMap"] == "GBK-EUC-H")
var["cw"].keys.sort.each
out((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]));Fi[	@÷iåI"Æout(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0");Fi[	@÷iñI"≠var["cw"].keys.sort.each
out((var + "] 231 325 500 631 [500] 326 389 500]"))
out(">>")
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]));Fi[	@·iÅI"Æout(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0");Fi[	@·iãI"Ø(var["CMap"] == "KSCms-UHC-HW-H")
var["cw"].keys.sort.each
out((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]));Fi[	@Ïi÷I"Jout("<<")
putinfo
out(">>")
out("endobj")
newobj
out("<<")
putcatalog;Fi[	@¥I"var.each;Fi[[	I"Qdata//activerecord_proj/active_record/associations/collection_association.rb;TiÅI"svar.each
var.any?
delete_records(var, var)
var.each
var.each
raise(NotImplementedError)
delete((target - var));Fi[	@Di@I"Åbuild_option(var, var, class_options)
var.last.is_a?(Hash)
var.pop
var.each
var.each
from_superclass(:group, "standard")
var.to_s;Fi[	@IiI"åvar.last.is_a?(Hash)
var.pop
var.fetch(:verbose, :white)
var.each
var.each
get_options_from_invocations(var, class_options)
invocations.each;Fi[	I"2data//compass_proj/compass/browser_support.rb;TiI"uextend(self)
var.each
var.each
SIMPLE_FUNCTIONS.has_key?(var.to_s)
SIMPLE_FUNCTIONS[var.to_s].include?(var.to_s);Fi[	I"Cdata//mongoid_proj/lib/mongoid/relations/embedded/batchable.rb;Ti/I";base.atomic_selector
var.map
var.map
var.each
var.each;Fi[	I"*data//redmine_proj/SVG/Graph/Graph.rb;Ti¸I"R(var <= var)
(var[0][var] < var)
(var + 1)
var.each
var.each
no_css
parse_css;Fi[	I"5data//rspec_proj/spec/example/example_methods.rb;TiI"ëalias_method(:to, :should)
alias_method(:to_not, :should_not)
var.extend(BlockAliases)
var.each
var.each
raise(var)
instance_variables.inject({});Fi[	I"require("formula");FI"extend(self);Fi[[	I"$data//homebrew_proj/cmd/edit.rb;Ti I"require("formula")
extend(self)
(HOMEBREW_REPOSITORY / ".git").directory?
raise("        Changes will be lost!\n        The first time you `brew update', all local changes will be lost, you should\n        thus `brew update' before you `brew edit'!\n".undent);Fi [	@ãi I"Urequire("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError);Fi [	I"'data//homebrew_proj/cmd/missing.rb;Ti I"Jrequire("formula")
extend(self)
HOMEBREW_CELLAR.subdirs.each
var.each;Fi [	I""data//homebrew_proj/cmd/sh.rb;TiI"^require("superenv")
require("formula")
extend(self)
superenv?
ENV.setup_build_environment;Fi[	@ùiI"`require("keg")
require("formula")
extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError);Fi[	@£i I"Urequire("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError);Fi [	I"(data//homebrew_proj/cmd/versions.rb;Ti I"Zrequire("formula")
extend(self)
which("git")
raise("Please `brew install git` first");Fi [	I"assert(var.i386?.!);FI"assert(var.x86_64?.!);Fi[[	@zi	I"º`/usr/bin/file -h '#{var}'`.chomp
Pathname.new("#{TEST_FOLDER}/mach/fat.dylib")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@zi*I"·assert_match(/Mach-O 64-bit dynamically linked shared library/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/a.out")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@zi5I"“assert_match(/Mach-O (64-bit )?executable/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/fat.bundle")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@ziVI"◊assert_match(/Mach-O 64-bit bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/tarballs/testball-0.1.tbz")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@zioI"¶(HOMEBREW_PREFIX / "foo_script")
var.write("#!/bin/sh")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@zi|I"∞(HOMEBREW_PREFIX / "foo_script")
var.write("#! /usr/bin/perl -w")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	@ziÑI"†(HOMEBREW_PREFIX / "foo_script")
var.write(" #!")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!);Fi[	I"var.nil?;FI"var.empty?;Fi[[	I"^data//activerecord_proj/active_record/connection_adapters/postgresql/schema_statements.rb;Ti(I"Equote_table_name(var)
select_value("              SELECT setval('#{quoted_sequence}', (SELECT COALESCE(MAX(#{quote_column_name(pk)})+(SELECT increment_by FROM #{quoted_sequence}), (SELECT min_value FROM #{quoted_sequence})) FROM #{quote_table_name(table)}), false)\n", "SCHEMA")
query("            SELECT attr.attname, seq.relname\n            FROM pg_class      seq,\n                 pg_attribute  attr,\n                 pg_depend     dep,\n                 pg_constraint cons\n            WHERE seq.oid           = dep.objid\n              AND seq.relkind       = 'S'\n              AND attr.attrelid     = dep.refobjid\n              AND attr.attnum       = dep.refobjsubid\n              AND attr.attrelid     = cons.conrelid\n              AND attr.attnum       = cons.conkey[1]\n              AND cons.contype      = 'p'\n              AND dep.refobjid      = '#{quote_table_name(table)}'::regclass\n", "SCHEMA")[0]
var.nil?
var.empty?
query("              SELECT attr.attname,\n                CASE\n                  WHEN split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2) ~ '.' THEN\n                    substr(split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2),\n                           strpos(split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2), '.')+1)\n                  ELSE split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2)\n                END\n              FROM pg_class       t\n              JOIN pg_attribute   attr ON (t.oid = attrelid)\n              JOIN pg_attrdef     def  ON (adrelid = attrelid AND adnum = attnum)\n              JOIN pg_constraint  cons ON (conrelid = adrelid AND adnum = conkey[1])\n              WHERE t.oid = '#{quote_table_name(table)}'::regclass\n                AND cons.contype = 'p'\n                AND pg_get_expr(def.adbin, def.adrelid) ~* 'nextval'\n", "SCHEMA")[0]
var.first;Fi[	I"Adata//diaspora_proj/controllers/tag_followings_controller.rb;TiI"’before_filter(:authenticate_user!)
respond_to(:json)
ActsAsTaggableOn::Tag.normalize(params["name"])
var.nil?
var.empty?
render(:nothing => (true), :status => 403)
ActsAsTaggableOn::Tag.find_or_create_by_name(var);Fi[	I"!data//haml_proj/haml/exec.rb;Ti6I"File.open(var, var)
var.message[/^no such file to load -- (.*)/, 1]
@var[:trace]
var.nil?
var.empty?
raise(var)
$stderr.puts("Required dependency #{dep} not found!\n    Run \"gem install #{dep}\" to get it.\n  Use --trace for backtrace.\n");Fi[	I"+data//homebrew_proj/extend/pathname.rb;TiPI"ºrequire("digest/sha2")
incremental_hash(Digest::SHA2)
alias_method(:sha256, :sha2)
var.nil?
var.empty?
raise(ChecksumMissingError)
Checksum.new(var.hash_type, send(var.hash_type).downcase);Fi[	I"!data//homebrew_proj/macos.rb;Ti6I"∫onoe("        Homebrew doesn't know what compiler versions ship with your version of\n        Xcode. Please `brew update` and if that doesn't help, file an issue with\n        the output of `brew --config`:\n          https://github.com/mxcl/homebrew/issues\n\n        Thanks!\n".undent)
STANDARD_COMPILERS[var].all?
mdfind(var).first
var.nil?
var.empty?
Pathname.new(var)
`/usr/bin/mdfind "kMDItemCFBundleIdentifier == '#{var}'"`.split("\n");Fi[	I"@data//mongoid_proj/lib/mongoid/relations/synchronization.rb;Ti
I"∑send(var.foreign_key_check)
synced[var].!.!
send(var.foreign_key)
var.nil?
var.empty?
var.criteria(var, self.class).pull(var.inverse_foreign_key, id)
changes.has_key?(var.foreign_key);Fi[	I"0data//paperclip_proj/paperclip/thumbnail.rb;Ti-I"¶(var << "-coalesce")
auto_orient
(var << "-auto-orient")
var.nil?
var.empty?
((var << "-resize") << "\"#{scale}\"")
(((var << "-crop") << "\"#{crop}\"") << "+repage");Fi[	I"var[var];FI"(var < 128);Fi[[	@ÀiI"k(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr]);Fi[	@Ài7I"é(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@Ài^I"ê(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@÷iI"k(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr]);Fi[	@·iI"k(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr]);Fi[	@·i4I"é(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@·i[I"ê(var < var)
var[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	I"(var == -1);FI"(var == var);Fi[[	@ÀiBI"â(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)));Fi[	@ÀikI"}(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var);Fi[	@÷iEI"[(var + 500)
(var + 1000)
(var > var)
(var == -1)
(var == var)
(var == var)
(var + var);Fi[	@÷irI"](var + 500)
(var + 1000)
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var);Fi[	@·i?I"â(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)));Fi[	@·ihI"}(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var);Fi[	@Ïi,I"g(var + 1)
(var + GetCharWidth(var, var))
(var > var)
(var == -1)
(var == var)
(var + 1)
(@var > 0);Fi[	I"var.length;FI"(var < var);Fi[[	@ÀiI"z(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@ÀiZI"â((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@÷iI"|(@var["type"] == "Type0")
GetSJISStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@÷i^I"â((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@·iI"z(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@·iWI"â((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@ÏiEI"((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var < var)
var[var]
(var == "\n"[0]);Fi[	I"assert(var.dylib?.!);FI"%assert(var.mach_o_executable?.!);Fi[[	@zi9I"±assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?);Fi[	@ziDI"±assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?);Fi[	@ziOI"Øassert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?);Fi[	@ziZI"≥assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!);Fi[	@zisI"∞assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?)
assert_equal([], var.archs);Fi[	@zi{I"∞assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?)
assert_equal([], var.archs);Fi[	@ziàI"≤assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert_equal([], var.archs);Fi[	I"var.any?;FI"(var + var);Fi[[	I"3data//cucumber_prok/cucumber/ast/background.rb;Ti&I"u@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.visit_exception(@var, :failed)
source_tags.map;Fi[	I"0data//cucumber_prok/cucumber/ast/feature.rb;Ti'I"X@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
(var + [@var.to_sexp]);Fi[	I"1data//cucumber_prok/cucumber/ast/scenario.rb;TiI"W@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.to_sexp
var.any?;Fi[	@Âi"I"Pvar.any?
(var + var)
@var.to_sexp
var.any?
(var + var)
private
@var.failed?;Fi[	I"9data//cucumber_prok/cucumber/ast/scenario_outline.rb;Ti'I"W@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.to_sexp
var.any?;Fi[	@Íi*I";var.any?
(var + var)
@var.to_sexp
var.any?
(var + var);Fi[	I"(var[var].chr == " ");FI"(var + 1);Fi[[	@ÀiHI"æ(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2);Fi[	@ÀiwI"œ(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	@÷iKI"∞(var + var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2);Fi[	@÷i~I"¡(var + var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	@·iEI"æ(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1)
(var == 2);Fi[	@·itI"œ(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	I"$var.options[:owner_screen_name];FI"8merge_owner!(var.options, (var.pop or screen_name));Fi[[	@iI"NTwitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
objects_from_response(Twitter::Tweet, :get, "/1.1/lists/statuses.json", var.options)
list_from_response_with_user(:post, "/1.1/lists/members/destroy.json", var);Fi[	@i*I"	Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var);Fi[	@i0I"Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
cursor_from_response(:users, Twitter::User, var, var, var.options, var)
Twitter::API::Arguments.new(var);Fi[	@i7I"Úmerge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
send(var.to_sym, var, var.options)
Twitter::API::Arguments.new(var);Fi[	@i>I"
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var);Fi[	@iEI"∑var.pop
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
var.id
merge_owner!(var, var.user);Fi[	I"var.shift;FI"(var.size == 0);Fi[[	@Ki&I"àvar.parse!
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.")
var.options;Fi[	@Zi2I"}var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@`i I"íparse_arguments!(var, var)
var.options
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Please specify at least one image to sprite.");Fi[	@fi!I"Ωvar.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Please specify an extension to unpack.")
raise(Compass::Error, "Too many arguments were specified.");Fi[	@liI"}var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@ri%I"}var.options
(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	I"(var - var);FI"(var == 0);Fi[[	I"(data//redmine_proj/SVG/Graph/Bar.rb;TiI"^@var[:fields]
max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	I"2data//redmine_proj/SVG/Graph/BarHorizontal.rb;TiI"Zprotected
max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	I")data//redmine_proj/SVG/Graph/Line.rb;TiI"](var > @var)
max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	I")data//redmine_proj/SVG/Graph/Plot.rb;Ti!I"hmin_x_value
(var < min_x_value)
min_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	@,i2I"hmin_y_value
(var < min_y_value)
min_y_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	I"-data//redmine_proj/SVG/Graph/Schedule.rb;Ti.I"hmin_x_value
(var < min_x_value)
min_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var);Fi[	I"@var.to_sexp;FI"var.any?;Fi[[	@ﬂi%I"t(var + [name])
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.visit_exception(@var, :failed);Fi[	@‚i&I"]name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
(var + [@var.to_sexp]);Fi[	@ÂiI"Sname
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.to_sexp;Fi[	@Âi!I"P@var.to_sexp
var.any?
(var + var)
@var.to_sexp
var.any?
(var + var)
private;Fi[	@Íi&I"Sname
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var)
@var.to_sexp;Fi[	@Íi)I"H@var.to_sexp
var.any?
(var + var)
@var.to_sexp
var.any?
(var + var);Fi[	I"var.first;FI"var.last;Fi[[	@~i+I"var.nil?
var.empty?
query("              SELECT attr.attname,\n                CASE\n                  WHEN split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2) ~ '.' THEN\n                    substr(split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2),\n                           strpos(split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2), '.')+1)\n                  ELSE split_part(pg_get_expr(def.adbin, def.adrelid), '''', 2)\n                END\n              FROM pg_class       t\n              JOIN pg_attribute   attr ON (t.oid = attrelid)\n              JOIN pg_attrdef     def  ON (adrelid = attrelid AND adnum = attnum)\n              JOIN pg_constraint  cons ON (conrelid = adrelid AND adnum = conkey[1])\n              WHERE t.oid = '#{quote_table_name(table)}'::regclass\n                AND cons.contype = 'p'\n                AND pg_get_expr(def.adbin, def.adrelid) ~* 'nextval'\n", "SCHEMA")[0]
var.first
var.last
exec_query("            SELECT attr.attname\n            FROM pg_attribute attr\n            INNER JOIN pg_constraint cons ON attr.attrelid = cons.conrelid AND attr.attnum = cons.conkey[1]\n            WHERE cons.contype = 'p'\n              AND cons.conrelid = '#{quote_table_name(table)}'::regclass\n", "SCHEMA").rows.first
var.first;Fi[	I"7data//mongoid_proj/lib/mongoid/extensions/range.rb;Ti
I"√var.nil?
::Range.new(var["min"], var["max"])
var.nil?
var.first
var.last
::Range.__send__(:include, Mongoid::Extensions::Range)
::Range.__send__(:extend, Mongoid::Extensions::Range::ClassMethods);Fi[	I"/data//nokogiri_proj/nokogiri/css/parser.rb;Ti&I" Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
var.first
var.last
var.first
var.last;Fi[	@Mi(I"tNode.new(:FUNCTION, [var.first.strip, var[1]].flatten)
var.first
var.last
var.first
var.last
var.first
var.last;Fi[	@Mi*I"`var.last
var.first
var.last
var.first
var.last
(var[0] == "even")
Node.new(:AN_PLUS_B, var);Fi[	I"Pdata//paperclip_proj/paperclip/matchers/validate_attachment_size_matcher.rb;TiI"]ValidateAttachmentSizeMatcher.new(var)
var.first
var.last
(@var.class == Class)
@var.new;Fi[	I"(var / 20.0);FI"((var + var) - var);Fi[[	@#iI"cmin_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0);Fi[	@&iI"cmin_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0);Fi[	@)iI"cmin_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0);Fi[	@,i#I"gmin_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_x_divisions
(var / 10.0);Fi[	@,i4I"gmin_y_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_y_divisions
(var / 10.0);Fi[	@1i0I"gmin_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_x_divisions
(var / 10.0);Fi[	I"var.to_s;FI"var.to_s;Fi[[	@ÜiI"Äattr_reader(:splitter)
attr_reader(:package)
attr_reader(:time)
var.to_s
var.to_s
procedure_instance_variables.each
block_given?;Fi[	I"Tdata//bundler_proj/bundler/vendor/thor/core_ext/hash_with_indifferent_access.rb;TiI"iHash.new(default).merge!(self)
protected
var.is_a?(Symbol)
var.to_s
var.to_s
var.empty?
self[$1].!.!;Fi[	I"3data//bundler_proj/bundler/vendor/thor/task.rb;Ti-I"wname
Regexp.escape(var.to_s)
var.message
var.to_s
var.to_s
var.to_s
var.methods.&([name.to_s, name.to_sym]).empty?;Fi[	@pi.I"íRegexp.escape(var.to_s)
var.message
var.to_s
var.to_s
var.to_s
var.methods.&([name.to_s, name.to_sym]).empty?
var.class.handle_no_task_error(name);Fi[	@áiI"u(self + var)
Pathname.new(var)
(self + File.basename(var))
var.to_s
var.to_s
File.symlink?(var)
File.exist?(var);Fi[	@áiI"wvar.nil?
(self + File.basename(var))
(self + File.basename(var))
var.to_s
var.to_s
mkpath
FileUtils.ln_s(var, var);Fi[	I"(var < 1);FI"var.round;Fi[[	@#iI"cscale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var);Fi[	@&iI"cscale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var);Fi[	@)i"I"cscale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var);Fi[	@,i(I"cscale_x_divisions
(var / 10.0)
scale_x_integers
(var < 1)
var.round
x_range
var.step(var, var);Fi[	@,i9I"cscale_y_divisions
(var / 10.0)
scale_y_integers
(var < 1)
var.round
y_range
var.step(var, var);Fi[	@1i5I"dscale_x_divisions
(var / 10.0)
scale_x_integers
(var < 1)
var.round
x_range
timescale_divisions;Fi[	@ΩI"(var / 20.0);Fi[[	@#iI"`max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions;Fi[	@&iI"`max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions;Fi[	@)iI"`max_value
min_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions;Fi[	@,i"I"n(var < min_x_value)
min_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_x_divisions;Fi[	@,i3I"n(var < min_y_value)
min_y_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_y_divisions;Fi[	@1i/I"n(var < min_x_value)
min_x_value
(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_x_divisions;Fi[	I"var.options[:owner_id];F@ˇi[[	@iI"Tobjects_from_response_with_user(Twitter::List, :get, "/1.1/lists/list.json", var)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
objects_from_response(Twitter::Tweet, :get, "/1.1/lists/statuses.json", var.options);Fi[	@i)I"private
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options);Fi[	@i/I"0object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
cursor_from_response(:users, Twitter::User, var, var, var.options, var);Fi[	@i6I"ÚTwitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
send(var.to_sym, var, var.options);Fi[	@i=I"
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options);Fi[	@iDI"ºTwitter::API::Arguments.new(var)
var.pop
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
var.id;Fi[	I"%var.respond_to?(:force_encoding);FI"%var.force_encoding("ASCII-8BIT");Fi[[	I";data//redmine_proj/redmine/scm/adapters/cvs_adapter.rb;TiI"‹scm_command_version
client_version_above?([1, 12])
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/m)
var[2].scan(/\d+/).collect(&:to_i);Fi[	@´iI"CvsRevisionHelper.new(var).prevRev
logger.debug("<cvs> entries '#{path}' with identifier '#{identifier}'")
scm_iconv(@var, "UTF-8", var)
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
Entries.new
((var << "-D") << time_to_cvstime_rlog(var));Fi[	@ïiI"ﬁdarcs_binary_version
client_version.empty?.!
darcs_binary_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i);Fi[	I";data//redmine_proj/redmine/scm/adapters/git_adapter.rb;TiI"‘scm_command_version
client_version.empty?.!
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i);Fi[	I"Adata//redmine_proj/redmine/scm/adapters/mercurial_adapter.rb;TiI"Œhgversion
client_version_above?([1, 2])
hgversion_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i);Fi[	@ûiI"Ÿsvn_binary_version
client_version_above?([1, 3])
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i);Fi[	I"ARGV.named.empty?;FI"#raise(FormulaUnspecifiedError);Fi[[	@ÖiI"èextend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
cd(HOMEBREW_REPOSITORY)
exec("cat", ARGV.formulae.first.path, *ARGV.options_only);Fi[	@ãiI"{require("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ARGV.include?("--deps")
ARGV.formulae.each;Fi[	@ëi	I"∫require("hardware")
require("blacklist")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ARGV.include?("--head")
raise("Specify `--HEAD` in uppercase to build from trunk.");Fi[	@öi	I"ùrequire("hardware")
require("keg")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ENV.extend(HomebrewEnvExtension)
ENV.setup_build_environment;Fi[	@£iI"|require("formula")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError)
Formula.select
ARGV.include?("--installed");Fi[	@eiI"»raise("Please `brew install git` first")
(HOMEBREW_REPOSITORY / ".git").directory?
raise("Please `brew update' first")
ARGV.named.empty?
raise(FormulaUnspecifiedError)
ARGV.formulae.all?
rev_list.each;Fi[	I"var.putc(var);FI"var.putc(var);Fi[[	@˚iÏI"ä(var < Utag3)
((var.&(Umask2) << 6).|(var.&(Umaskx)) <= Uchar1max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
(var < 3)
raise(Utf8Error);Fi[	@˚i¯I"ñ(var.&(Umask3) << 12).|((var.&(Umaskx) << 6)).|(var.&(Umaskx))
(var <= Uchar2max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var)
(var < 4);Fi[	@˚i˘I"m(var <= Uchar2max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var)
(var < 4)
raise(Utf8Error);Fi[	@˚iI"≥(var.&(Umask4) << 18).|((var.&(Umaskx) << 12)).|((var.&(Umaskx) << 6)).|(var.&(Umaskx))
(var <= Uchar3max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var)
var.putc(var);Fi[	@˚iI"q(var <= Uchar3max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var)
var.putc(var)
raise(Utf8Error);Fi[	@˚iI"qraise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var)
var.putc(var)
raise(Utf8Error)
var.write(Ustrerr);Fi[	I"with_temp_folder;FI"with_temp_folder;Fi[[	I"6data//homebrew_proj/test/test_pathname_install.rb;TiI"çFileUtils.mkdir_p(TEMP_FOLDER)
TEMP_FOLDER.cd
assert_raises(RuntimeError)
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder;Fi[	@ﬁiI"TEMP_FOLDER.cd
assert_raises(RuntimeError)
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder;Fi[	@ﬁiI"Åassert_raises(RuntimeError)
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder;Fi[	@ﬁiI"{with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder;Fi[	@ﬁiI"Çwith_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
FileUtils.rm_rf(TEMP_FOLDER);Fi[	@ﬁiI"vwith_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
with_temp_folder
FileUtils.rm_rf(TEMP_FOLDER);Fi[	I"assert(var.universal?.!);FI"assert(var.i386?.!);Fi[[	@ziI"Èassert(var.mach_o_bundle?.!)
assert_match(/Mach-O dynamically linked shared library/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/x86_64.dylib")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!);Fi[	@ziJI"Õassert(var.mach_o_bundle?)
assert_match(/Mach-O bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/x86_64.bundle")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!);Fi[	@ziUI"›assert(var.mach_o_bundle?)
assert_match(/Mach-O 64-bit bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/tarballs/testball-0.1.tbz")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	@zinI"π(HOMEBREW_PREFIX / "foo_script").unlink
(HOMEBREW_PREFIX / "foo_script")
var.write("#!/bin/sh")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	@zi{I"∆assert_match(/text executable/, file(var))
(HOMEBREW_PREFIX / "foo_script")
var.write("#! /usr/bin/perl -w")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	@ziÉI"∂assert_match(/text executable/, file(var))
(HOMEBREW_PREFIX / "foo_script")
var.write(" #!")
assert(var.universal?.!)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	I"assert_type(var, :Color);FI"assert_type(var, :Number);Fi[[	I"Cdata//compass_proj/compass/sass_extensions/functions/colors.rb;Ti I"£assert_type(var, :Color)
assert_type(var, :Number)
var.with(:lightness => (Compass::Util.restrict((var.lightness + var.value), (0..100))))
assert_type(var, :Color);Fi [	@ˇiI"assert_type(var, :Color)
assert_type(var, :Number)
var.with(:lightness => (Compass::Util.restrict((var.lightness + var.value), (0..100))))
assert_type(var, :Color)
assert_type(var, :Number)
var.with(:lightness => (scale_color_value(var.lightness, var.value)))
assert_type(var, :Color);Fi[	@ˇiI"assert_type(var, :Color)
assert_type(var, :Number)
var.with(:lightness => (scale_color_value(var.lightness, var.value)))
assert_type(var, :Color)
assert_type(var, :Number)
var.with(:saturation => (Compass::Util.restrict((var.saturation + var.value), (0..100))))
assert_type(var, :Color);Fi[	@ˇiI" assert_type(var, :Color)
assert_type(var, :Number)
var.with(:saturation => (Compass::Util.restrict((var.saturation + var.value), (0..100))))
assert_type(var, :Color)
assert_type(var, :Number)
var.with(:saturation => (scale_color_value(var.saturation, var.value)))
assert_type(var, :Color);Fi[	@ˇiI"„assert_type(var, :Color)
assert_type(var, :Number)
var.with(:saturation => (scale_color_value(var.saturation, var.value)))
assert_type(var, :Color)
assert_type(var, :Number)
Sass::Script::Color.new([0, 0, 0])
mix(var, var, var);Fi[	@ˇiI"æassert_type(var, :Number)
Sass::Script::Color.new([0, 0, 0])
mix(var, var, var)
assert_type(var, :Color)
assert_type(var, :Number)
Sass::Script::Color.new([255, 255, 255])
mix(var, var, var);Fi[	I"!Compass.projectize(var, var);FI"top_level.project_path;Fi[[	I"9data//compass_proj/compass/configuration/defaults.rb;Ti
I"¥(top_level.environment == :development)
top_level.project_path
top_level.sass_dir
Compass.projectize(var, var)
top_level.project_path
top_level.css_dir
Compass.projectize(var, var);Fi[	@iI"´Compass.projectize(var, var)
top_level.project_path
top_level.css_dir
Compass.projectize(var, var)
top_level.project_path
top_level.images_dir
Compass.projectize(var, var);Fi[	@iI"∏Compass.projectize(var, var)
top_level.project_path
top_level.images_dir
Compass.projectize(var, var)
top_level.project_path
top_level.generated_images_dir
Compass.projectize(var, var);Fi[	@iI"∞top_level.images_path
top_level.project_path
top_level.javascripts_dir
Compass.projectize(var, var)
top_level.project_path
top_level.extensions_dir
Compass.projectize(var, var);Fi[	@iI"±Compass.projectize(var, var)
top_level.project_path
top_level.extensions_dir
Compass.projectize(var, var)
top_level.project_path
top_level.fonts_dir
Compass.projectize(var, var);Fi[	@iI"¨Compass.projectize(var, var)
top_level.project_path
top_level.fonts_dir
Compass.projectize(var, var)
top_level.project_path
top_level.cache_dir
Compass.projectize(var, var);Fi[	I"@var[var];FI"@var[var];Fi[[	I"Ndata//activerecord_proj/active_record/connection_adapters/schema_cache.rb;TiI"g@var[var]
connection.table_exists?(var)
table_exists?(var)
@var[var]
@var[var]
@var[var]
@var[var];Fi[	@!iI"gconnection.table_exists?(var)
table_exists?(var)
@var[var]
@var[var]
@var[var]
@var[var]
@var[var];Fi[	@!iI"Ttable_exists?(var)
@var[var]
@var[var]
@var[var]
@var[var]
@var[var]
@var.clear;Fi[	@!iI"L@var[var]
@var[var]
@var[var]
@var[var]
@var[var]
@var.clear
@var.clear;Fi[	I"9data//cucumber_prok/cucumber/runtime/support_code.rb;TiI"òUndefined.===(var)
var.nested!
raise(var)
@var[var]
@var[var]
constantize("Cucumber::#{ext.capitalize}Support::#{ext.capitalize}Language")
var.new(@var);Fi[	I",data//paperclip_proj/paperclip/style.rb;Ti I"t[:processors, :geometry, :format, :whiny, :convert_options, :source_file_options].each
[:name, :convert_options, :whiny, :processors, :geometry, :format, :animated, :source_file_options].include?(var)
send(var)
@var[var]
@var[var]
[:name, :convert_options, :whiny, :processors, :geometry, :format, :animated, :source_file_options].include?(var)
send("#{key}=".intern, var);Fi[	I"TestBall.new;FI"var.stable.instance_eval;Fi[[	@Ÿi	I"ôrequire("test/testball")
assert_nothing_raised
assert_raises(ChecksumMismatchError)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new;Fi[	@ŸiI"}TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new;Fi[	@ŸiI"}TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new;Fi[	@ŸiI"}TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new;Fi[	@ŸiI"}TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new;Fi[	@ŸiI"uTestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var);Fi[	I"-require("compass/commands/project_base");FI"/require("compass/commands/update_project");Fi[[	@Ni I"Ñrequire("compass/commands/project_base")
require("compass/commands/update_project")
require("compass/grid_builder")
include(Actions);Fi [	@Ti I"require("compass/commands/project_base")
require("compass/commands/update_project")
register(:interactive)
require("sass/repl");Fi [	@Zi I"Örequire("compass/commands/project_base")
require("compass/commands/update_project")
register(:stats)
assert_project_directory_exists!;Fi [	@]i I"ârequire("compass/commands/project_base")
require("compass/commands/update_project")
register(:structure)
assert_project_directory_exists!;Fi [	@`i I"≤require("compass/commands/project_base")
require("compass/commands/update_project")
var.on("-f SPRITE_FILE")
var.on("--skip-overrides", "Skip the generation of sprite overrides");Fi [	@li I"àrequire("compass/commands/project_base")
require("compass/commands/update_project")
register(:validate)
assert_project_directory_exists!;Fi [	@¥I"var.empty?;Fi[[	@?irI"|options[:finder_sql]
reflection.klass.find_by_sql(custom_finder_sql)
scope.to_a
var.each
var.empty?
var.empty?
var.map!;Fi[	I"Bdata//activerecord_proj/active_record/attribute_assignment.rb;TiI"Üvar.blank?
var.stringify_keys
sanitize_for_mass_assignment(var)
var.each
var.empty?
assign_nested_parameter_attributes(var)
var.empty?;Fi[	@UiI"Praise(UnknownAttributeError, "unknown attribute: #{k}")
var.each
execute_callstack_for_multiparameter_attributes(extract_callstack_for_multiparameter_attributes(var))
var.each
var.empty?
raise(MultiparameterAssignmentErrors.new(var), "#{errors.size} error(s) on assignment of multiparameter attributes [#{error_descriptions}]")
var.each;Fi[	I"(data//backup_proj/backup/cleaner.rb;TiI"•var.empty?
(var << ("-" * 74))
(var << "            The temporary backup folder '#{Config.tmp_path}'\n            appears to contain the package files from the previous backup!\n            #{package_files.join("\n")}\n            These files will now be removed.\n")
var.each
var.empty?
Logger.warn(Errors::CleanerError.new("            Cleanup Warning\n            #{messages.join("\n")}\n            Please check the log for messages and/or your notifications\n            concerning this backup: '#{@model.label} (#{@model.trigger})'\n            The temporary files which had to be removed should not have existed.\n"))
Logger.message("Cleaning up the temporary files...");Fi[	@DibI"íclass_options.each
var.delete(nil)
print_options(var, var)
var.each
var.empty?
var.each
var.say((var ? ("#{group_name} options:") : ("Options:")));Fi[	I"/data//redmine_proj/redmine/unified_diff.rb;TiI"zvar[:type]
var[:style]
DiffTable.new(diff_type, diff_style)
var.each
var.empty?
(self << var)
attr_reader(:file_name);Fi[	I"&merge_list!(var.options, var.pop);FI"var.options[:owner_id];Fi[[	@iI"include(Twitter::API::Utils)
objects_from_response_with_user(Twitter::List, :get, "/1.1/lists/list.json", var)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	@i(I"list_from_response_with_users(:post, "/1.1/lists/members/destroy_all.json", var)
private
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	@i.I"merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	@i5I"cursor_from_response(:users, Twitter::User, var, var, var.options, var)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	@i<I"Úsend(var.to_sym, var, var.options)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	@iCI"object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var)
var.pop
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name));Fi[	I"require("twitter/tweet");FI"require("twitter/user");Fi
[
[	@ˇi	I"Ÿrequire("twitter/api/utils")
require("twitter/error/already_favorited")
require("twitter/error/forbidden")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var);Fi[	@iI"˝require("twitter/error/forbidden")
require("twitter/error/not_found")
require("twitter/list")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response_with_user(Twitter::List, :get, "/1.1/lists/list.json", var);Fi[	@(iI"√require("twitter/api/utils")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response(Twitter::Tweet, :get, "/1.1/statuses/mentions_timeline.json", var);Fi[	@i	I"˚require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/cursor")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
objects_from_response(Twitter::ActionFactory, :get, "/i/activity/about_me.json", var);Fi[	I""data//twitter_proj/twitter.rb;Ti"I"¡require("twitter/suggestion")
require("twitter/target_user")
require("twitter/trend")
require("twitter/tweet")
require("twitter/user")
include(Twitter::Configurable)
(@var.hash == options.hash);Fi[	@EI"var.options;Fi
[
[	@¨iI"ãCompass::Exec::CommandOptionParser.new(var)
var.extend(DefaultOptionsParser)
option_parser(var)
var.parse!
var.options
Proc.new
var.options;Fi[	@QiI"yvar.extend(HelpOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options
var.shift
var.options;Fi[	@TiI"jvar.extend(InteractiveOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@WiI"tvar.extend(Compass::Exec::GlobalOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options;Fi[	@∑iI"´var.extend(VersionOptionsParser)
option_parser([]).to_s
option_parser(var)
var.parse!
var.options
(var << "Compass #{::Compass.version[:string]}")
::Compass.version[:name];Fi[	I"private;FI"@var.nil?;Fi
[
[	I"#data//homebrew_proj/patches.rb;Ti I"i(@var + ".bz2")
FileUtils.mv(@var, @var)
@var.nil?.!
private
@var.nil?
Pathname.new(@var)
var.exist?;Fi[	@ÏiåI"Sself.Close
var.nil?
open(var, "wb")
private
@var.nil?
(@var == "")
1.upto(var);Fi[	I"6data//rspec_proj/spec/matchers/raise_exception.rb;TiI"ç@var.=~(@var.message)
(@var == @var.message)
@var.message
private
@var.nil?
caller.first(3).find
Matchers::RaiseException.new(var, var, &var);Fi[	I"1data//rspec_proj/spec/matchers/respond_to.rb;TiI"V@var.each
@var.empty?
private
@var.nil?
(@var == var.method(var).arity)
@var.nil?;Fi[	I"3data//rspec_proj/spec/matchers/throw_symbol.rb;TiI"~@var.nil?
(@var == @var)
(@var == @var).&((@var == @var))
private
@var.nil?
@var.nil?
Matchers::ThrowSymbol.new(var, var);Fi[	I"var.empty?;FI"var.empty?;Fi
[
[	@?isI"sreflection.klass.find_by_sql(custom_finder_sql)
scope.to_a
var.each
var.empty?
var.empty?
var.map!
(var + var);Fi[	@Zi	I"(var << "            The temporary backup folder still contains files!\n            '#{File.join(Config.tmp_path, @model.trigger)}'\n            These files will now be removed.\n")
FileUtils.rm_rf(File.join(Config.tmp_path, @var.trigger))
tmp_path_package_files
var.empty?
var.empty?
(var << ("-" * 74))
(var << "            The temporary backup folder '#{Config.tmp_path}'\n            appears to contain the package files from the previous backup!\n            #{package_files.join("\n")}\n            These files will now be removed.\n");Fi[	@ZiI"Ópackaging_folder_dirty?
(var << "            The temporary backup folder still contains files!\n            '#{File.join(Config.tmp_path, @model.trigger)}'\n            This folder may contain completed Archives and/or Database backups.\n")
tmp_path_package_files
var.empty?
var.empty?
(var << ("-" * 74))
(var << "            The temporary backup folder '#{Config.tmp_path}'\n            appears to contain the backup files which were to be stored:\n            #{package_files.join("\n")}\n");Fi[	I"+data//bundler_proj/bundler/settings.rb;Ti"I"…(var << "Set via #{key}: #{value.inspect}")
@var.key?(var)
(var << "Set for the current user (#{global_config_file}): #{@global_config[key].inspect}")
var.empty?
var.empty?
var.join(":")
self[:without];Fi[	I",data//mongoid_proj/lib/rails/mongoid.rb;TiI"textend(self)
var.empty?
var.empty?
Rails.application.railties.engines.map
Rails.application.paths["app/models"];Fi[	I"ENV["NO_RUBYGEMS"];FI"require("rubygems");Fi
[
[	I"?data//rspec_proj/spec/adapters/mock_frameworks/flexmock.rb;Ti I"fENV["NO_RUBYGEMS"]
require("rubygems")
require("flexmock/rspec")
include(FlexMock::MockContainer);Fi [	I"<data//rspec_proj/spec/adapters/mock_frameworks/mocha.rb;Ti I"_ENV["NO_RUBYGEMS"]
require("rubygems")
require("mocha/standalone")
require("mocha/object");Fi [	I"9data//rspec_proj/spec/adapters/mock_frameworks/rr.rb;Ti I"dENV["NO_RUBYGEMS"]
require("rubygems")
require("rr")
var.push(RR::Errors::BACKTRACE_IDENTIFIER);Fi [	I":data//rspec_proj/spec/runner/differs/load-diff-lcs.rb;TiI"Ñrequire("diff/lcs")
ENV["NO_RUBYGEMS"]
require("rubygems")
require("diff/lcs")
raise("You must gem install diff-lcs to use diffing");Fi[	I"2data//rspec_proj/spec/runner/heckle_runner.rb;TiI"ç(Spec::Ruby.version.to_f < 1.9)
ENV["NO_RUBYGEMS"]
require("rubygems")
require("heckle")
raise("You must gem install heckle to use --heckle");Fi[	I"(var.length == 1);FI"var.first;Fi
[
[	I"4data//nokogiri_proj/nokogiri/decorators/slop.rb;TiI"ixpath("#{prefix}#{name}[#{conds}]")
CSS::Parser.without_cache
var.empty?
(var.length == 1)
var.first;Fi[	@ZiI"|NodeSet.new(document)
extract_params(var)
var.map
(var.length == 1)
var.first
NodeSet.new(document)
extract_params(var);Fi[	@gi~I"âadd_states(var.first.values)
add_states(var)
var.each
(var.length == 1)
var.first
alias_method(:other_states, :state)
self.attribute(var);Fi[	@giìI"yadd_events(var.first.values)
add_events(var)
var.each
(var.length == 1)
var.first
alias_method(:on, :event)
var[:on];Fi[	@giöI"éraise(ArgumentError, "Must specify :on event")
var.dup
event(*Array(var.delete(:on)))
(var.length == 1)
var.first
var.last.is_a?(Hash)
var.pop;Fi[	I"var.reject;FI"var.empty?;Fi
[
[	@?iI"scope.scope_for_create.stringify_keys
var.flatten
var.each
var.reject
var.empty?
remove_records(var, var, var)
transaction;Fi[	I"&data//homebrew_proj/cmd/doctor.rb;TiI"œFile.exist?("/usr/local/MacGPG2/share/gnupg/VERSION")
["/Applications/start-gpg-agent.app", "/Library/Receipts/libiconv1.pkg", "/usr/local/MacGPG2"].any?
Dir["/usr/local/lib/*.dylib"].select
var.reject
var.empty?
"    Unbrewed dylibs were found in /usr/local/lib.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected dylibs:\n".undent
inject_file_list(var, var);Fi[	@ÿiI"@"    Unbrewed dylibs were found in /usr/local/lib.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected dylibs:\n".undent
inject_file_list(var, var)
Dir["/usr/local/lib/*.a"].select
var.reject
var.empty?
"    Unbrewed static libraries were found in /usr/local/lib.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected static libraries:\n".undent
inject_file_list(var, var);Fi[	@ÿi!I"["    Unbrewed static libraries were found in /usr/local/lib.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected static libraries:\n".undent
inject_file_list(var, var)
Dir["/usr/local/lib/pkgconfig/*.pc"].select
var.reject
var.empty?
"    Unbrewed .pc files were found in /usr/local/lib/pkgconfig.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected .pc files:\n".undent
inject_file_list(var, var);Fi[	@ÿi&I"C"    Unbrewed .pc files were found in /usr/local/lib/pkgconfig.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected .pc files:\n".undent
inject_file_list(var, var)
Dir["/usr/local/lib/*.la"].select
var.reject
var.empty?
"    Unbrewed .la files were found in /usr/local/lib.\n    If you didn't put them there on purpose they could cause problems when\n    building Homebrew formulae, and may need to be deleted.\n\n    Unexpected .la files:\n".undent
inject_file_list(var, var);Fi[	I""assert_equal(@var, @var.root);FI""assert_equal(@var, @var.root);Fi
[
[	I"Fdata//redmine_proj/plugins/acts_as_tree/test/acts_as_tree_test.rb;Ti8I"‹assert_equal([], @var.ancestors)
assert_equal([], @var.ancestors)
assert_equal(@var, TreeMixin.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root);Fi[	@Âi9I"Ÿassert_equal([], @var.ancestors)
assert_equal(@var, TreeMixin.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root);Fi[	@Âi:I"÷assert_equal(@var, TreeMixin.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root);Fi[	@Âi;I"Âassert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal([@var, @var, @var], TreeMixin.roots);Fi[	@Âi<I"Òassert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal(@var, @var.root)
assert_equal([@var, @var, @var], TreeMixin.roots)
assert_equal([@var, @var], @var.siblings);Fi[	@∑I"(var > 0);Fi
[
[	@Ài*I"Ü((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1);Fi[	@÷i*I"Ü((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1);Fi[	@·i'I"Ü((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1);Fi[	@ÏiI"ä((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)].chr == "\n")
(var - 1);Fi[	I"1data//SiriProxy_proj/siriproxy/connection.rb;TiUI"($LOG_LEVEL > 1)
puts("[Info - Forwarding object to #{self.other_connection.name}] #{object["class"]}")
var.to_plist(:plist_format => (CFPropertyList::List::FORMAT_BINARY))
var.length
(var > 0)
[(8589934592 + var).to_s(16).rjust(10, "0")].pack("H*")
(self.unzipped_output << (var + var));Fi[	@éI"var.nil?;Fi
[
[	I"Qdata//activerecord_proj/active_record/connection_adapters/postgresql/cast.rb;Ti#I"Ävar.nil?
Range.===(var)
[var.first, var.last].all?
private
var.nil?
(var == "")
("\"%s\"" % var.to_s.gsub(/(["\\])/, "\\\\\\1"));Fi[	I"%data//bundler_proj/bundler/ui.rb;TiI"~debug?
tell_me(var, nil, var)
STDERR.puts("#{msg}#{newline}")
private
var.nil?
@var.say(var, var)
@var.say(var, var, var);Fi[	@Ñi/I"iENV["TERM"].nil?
ENV["TERM"].empty?
STDOUT.tty?.!
private
var.nil?
@var[:unix_newlines]
(var == "w");Fi[	I" data//rescue_proj/resque.rb;TifI"tvar.unregister_worker
queues.inject(0)
redis.keys("*").map
private
var.nil?
clear_hooks(var)
(@var[var] << var);Fi[	@(iI"Óobjects_from_response(Twitter::Tweet, :get, "/1.1/statuses/home_timeline.json", var)
retweets_from_timeline(var)
objects_from_response(Twitter::Tweet, :get, "/1.1/statuses/retweets_of_me.json", var)
private
var.nil?
(var + var)
var.empty?;Fi[	@zI"var.nil?;Fi
[
[	I"6data//bundler_proj/bundler/similarity_detector.rb;TiI"ç(var.length > 1)
[var[(0..-2)].join(", "), var[-1]].join(" or ")
protected
var.nil?
var.nil?
(0..var.length).collect
([0] * (var.length - 1));Fi[	I"%data//cancan_proj/cancan/rule.rb;Ti
I"…var.kind_of?(Hash)
var.nil?.!
raise(Error, "You are not able to supply a block with a hash of conditions in #{action} #{subject} ability. Use either one.")
var.nil?
var.nil?
[var].flatten
[var].flatten;Fi[	I"8data//mongoid_proj/lib/mongoid/contextual/memory.rb;Ti'I"ëskip(criteria.options[:skip]).limit(criteria.options[:limit])
criteria.options[:sort]
in_place_sort(var)
var.nil?
var.nil?
var.nil?
(var <=> var);Fi[	@i(I"ncriteria.options[:sort]
in_place_sort(var)
var.nil?
var.nil?
var.nil?
(var <=> var)
var.keys.reverse.each;Fi[	I"4data//rspec_proj/spec/expectations/fail_with.rb;TiI"Çvar[1]
var[2]
differ.nil?
var.nil?
var.nil?
var.is_a?(String)
((var << "\n\n Diff:") << self.differ.diff_as_string(var.to_s, var));Fi[	I"var.first.is_a?(Hash);FI"var.shift;Fi
[
[	I":data//nokogiri_proj/nokogiri/xml/document_fragment.rb;TiI"ºvar.each
children.to_s
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_HTML);Fi[	@#iI"–var.insert(0, var)
children.to_html(*var)
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_XHTML);Fi[	@ZitI"~var.visit(self)
var.respond_to?(:pointer_id)
(pointer_id == var.pointer_id)
var.first.is_a?(Hash)
var.shift
var[0]
var[1];Fi[	@Zi}I"ôto_format(SaveOptions::DEFAULT_HTML, var)
serialize(var)
to_format(SaveOptions::DEFAULT_XHTML, var)
var.first.is_a?(Hash)
var.shift
var[:encoding]
var[0];Fi[	@]i8I"ø0.upto((length - 1))
each
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_HTML);Fi[	I"var.is_a?(String);FI"var.blank?;Fi
[
[	@¡iI"Xnumber?
(var == false)
(var == true)
var.is_a?(String)
var.blank?
var.nil?
encoded?;Fi[	@¡i/I"¢Base.human_attribute_name(@var)
type_cast(var)
self.class.string_to_binary(var)
var.is_a?(String)
var.blank?
fast_string_to_date(var)
fallback_string_to_date(var);Fi[	@¡i5I"ïfallback_string_to_date(var)
var.respond_to?(:to_date)
var.to_date
var.is_a?(String)
var.blank?
fast_string_to_time(var)
fallback_string_to_time(var);Fi[	@¡i9I"ávar.blank?
fast_string_to_time(var)
fallback_string_to_time(var)
var.is_a?(String)
var.blank?
fast_string_to_time(var)
Date._parse(var);Fi[	@¡i?I"ØDate._parse(var)
var[:hour].nil?
new_time(*var.values_at(:year, :mon, :mday, :hour, :min, :sec, :sec_fraction))
var.is_a?(String)
var.blank?
TRUE_VALUES.include?(var)
var.to_i;Fi[	@xI"var.parse_with(self);Fi
[
[	I"4data//nokogiri_proj/nokogiri/html/sax/parser.rb;TiI"çraise(ArgumentError)
(var.length > 0)
ParserContext.memory(var, var)
block_given?
var.parse_with(self)
raise(ArgumentError)
File.exists?(var);Fi[	@?iI"mFile.directory?(var)
raise(Errno::EISDIR)
ParserContext.file(var, var)
block_given?
var.parse_with(self);Fi[	I"3data//nokogiri_proj/nokogiri/xml/sax/parser.rb;TiI"öparse_memory(var, &var)
check_encoding(var)
ParserContext.io(var, ENCODINGS[var])
block_given?
var.parse_with(self)
raise(ArgumentError)
File.exists?(var);Fi[	@DiI"äFile.directory?(var)
raise(Errno::EISDIR)
ParserContext.file(var)
block_given?
var.parse_with(self)
ParserContext.memory(var)
block_given?;Fi[	@DiI"vblock_given?
var.parse_with(self)
ParserContext.memory(var)
block_given?
var.parse_with(self)
private
var.upcase!;Fi[	I"@var.name;FI"@var.qualified_name;Fi
[
[	I"9data//state_machine_proj/state_machine/transition.rb;TiI"}var.errors_for(var)
var.empty?
(var << " (Reason(s): #{errors})")
@var.name
@var.qualified_name
@var.name
@var.qualified_name;Fi[	@OiI"à(var << " (Reason(s): #{errors})")
@var.name
@var.qualified_name
@var.name
@var.qualified_name
attr_reader(:events)
attr_reader(:object);Fi[	@Oi$I"oreset
machine.attribute
machine.action
@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name;Fi[	@Oi'I"}@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name;Fi[	@Oi*I"ä@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name
@var.human_name(@var.class)
(from_name == to_name);Fi[	I" files_to_transfer_for(@var);FI"remote_path_for(var);Fi
[
[	@òiI"!private
Fog::Storage.new(:provider => (provider), :rackspace_username => (username), :rackspace_api_key => (api_key), :rackspace_auth_url => (auth_url), :rackspace_servicenet => (servicenet))
remote_path_for(@var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var);Fi[	@õiI"ULogger.message("Session data loaded from cache!")
Logger.warn(Errors::Storage::Dropbox::CacheError.wrap(var, "              Could not read session data from cache.\n              Cache data might be corrupt.\n"))
remote_path_for(@var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"));Fi[	@°iI"üprivate
remote_path_for(@var)
FileUtils.mkdir_p(var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"));Fi[	@§iI"ßsuper(var).sub(/^\//, "")
remote_path_for(@var)
directory_for(var, true)
files_to_transfer_for(@var)
remote_path_for(var)
directory_for(var)
transferred_files_for(var);Fi[	@™iI"ßsuper(var).sub(/^\//, "")
remote_path_for(@var)
connection.sync_clock
files_to_transfer_for(@var)
remote_path_for(var)
connection.sync_clock
transferred_files_for(var);Fi[	@4I"(var + [var]);Fi
[
[	@ﬂi#I"Uinit
name.empty?
(var + [name])
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?;Fi[	I"1data//cucumber_prok/cucumber/ast/examples.rb;TiI"q@var.skip_invoke!
@var.cells_rows[(1..-1)].each(&var)
name
@var.to_sexp
(var + [var])
(var + [@var.to_sexp]);Fi[	@‚i$I"H$1.strip
init
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?;Fi[	@ÂiI"d@var.each
@var.next_feature_element(self)
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?;Fi[	@Íi$I"¿var.visit_scenario_name(@var.language.keywords("scenario")[0], var.name, file_colon_line(var.line), source_indent(first_line_length))
init
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?;Fi[	I"(var.size == 1);FI"var.options;Fi
[
[	@Ki$I"lset_default_arguments(var)
var.options
var.parse!
(var.size == 1)
var.options
var.shift
(var.size == 0);Fi[	@Zi0I"lvar.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0);Fi[	@fiI"lvar.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0);Fi[	@liI"lvar.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0);Fi[	@ri#I"lvar.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift
(var.size == 0);Fi[	I""generated_methods.module_eval;FI""generated_methods.module_eval;Fi
[
[	I",data//mongoid_proj/lib/mongoid/dirty.rb;Ti*I"Ôcreate_dirty_default_change_check(var, var)
create_dirty_previous_value_accessor(var, var)
create_dirty_reset(var, var)
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval;Fi[	@ài+I"·create_dirty_previous_value_accessor(var, var)
create_dirty_reset(var, var)
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval;Fi[	@ài,I"–create_dirty_reset(var, var)
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval;Fi[	@ài-I"≥generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval;Fi[	@ài.I"ïgenerated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval
generated_methods.module_eval;Fi[	@ΩI"((@var - @var) - @var);Fi
[
[	@Ài&I"≠(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@÷i&I"Ø(@var["type"] == "Type0")
SJISMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@·i#I"≠(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@ÏiÌI"self.AddPage(@var)
(var > 0)
out(sprintf("%.3f Tw", (var * @var)))
(var == 0)
((@var - @var) - @var)
(var == 1)
(var == 1);Fi[	@ÏiI"|(var == 1)
(@var + var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@I"(var - var);Fi
[
[	I"*data//bundler_proj/bundler/runtime.rb;Ti*I"Vspecs.each
var.uniq!
var.flatten!
(var - var)
(var - var)
(var - var)
(var - var);Fi[	@£i+I"Wvar.uniq!
var.flatten!
(var - var)
(var - var)
(var - var)
(var - var)
(var - var);Fi[	@£i,I"Yvar.flatten!
(var - var)
(var - var)
(var - var)
(var - var)
(var - var)
(var - var);Fi[	@£i-I"g(var - var)
(var - var)
(var - var)
(var - var)
(var - var)
(var - var)
Bundler.settings[:dry_run];Fi[	@£i.I"d(var - var)
(var - var)
(var - var)
(var - var)
(var - var)
Bundler.settings[:dry_run]
var.each;Fi[	I"@var.puts;FI"@var.flush;Fi
[
[	I"5data//cucumber_prok/cucumber/formatter/pretty.rb;TiI"}@var.puts(var.indent(@var))
@var.flush
(@var == 1)
@var.puts
@var.flush
format_string(var, :tag).indent(@var)
@var.print(var);Fi[	@≤i"I"j@var.print(var)
@var.flush
@var.puts("#{keyword}: #{name}")
@var.puts
@var.flush
@var.puts
@var.flush;Fi[	@≤i$I"d@var.puts("#{keyword}: #{name}")
@var.puts
@var.flush
@var.puts
@var.flush
@var.puts
@var.flush;Fi[	@≤i&I"r@var.flush
@var.puts
@var.flush
@var.puts
@var.flush
print_feature_element_name(var, var, var, var)
@var.puts;Fi[	I"Edata//rspec_proj/spec/runner/formatter/progress_bar_formatter.rb;TiI"G@var.flush
@var.print(yellow("*"))
@var.flush
@var.puts
@var.flush;Fi[	I" (var << credentials_string);FI"shellout(var);Fi
[
[	@ûiI"ßvar.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
(var << credentials_string)
shellout(var)
(var.to_i > 0)
var.to_i;Fi[	@ûiI"m(var.to_i > 0)
var.to_i
Entries.new
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
logger;Fi[	@ûiI"êself.class.client_version_above?([1, 5, 0])
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0);Fi[	@ûi7I"∂(var << "#{identifier_to}:")
(var << "#{identifier_from}")
(var << " #{target(path)}@#{identifier_from}")
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0);Fi[	@ûi<I"}$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0);Fi[	@˛I"var.pop;Fi	[	[	@ˇiI"Èrequire("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop
merge_user!(var.options, var)
objects_from_response(Twitter::Tweet, :get, "/1.1/favorites/list.json", var.options);Fi[	@iAI"var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var)
var.pop
merge_list!(var.options, var.pop)
var.options[:owner_id];Fi[	@i
I"<require("twitter/suggestion")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop
object_from_response(Twitter::Suggestion, :get, "/1.1/users/suggestions/#{slug}.json", var.options)
objects_from_response(Twitter::Suggestion, :get, "/1.1/users/suggestions.json", var.options);Fi[	@i!I"threaded_user_objects_from_response(:post, "/1.1/blocks/destroy.json", var)
Twitter::API::Arguments.new(var)
var.options.delete(:method)
Twitter::API::Arguments.new(var)
var.pop
merge_user!(var.options, var)
object_from_response(Twitter::User, :get, "/1.1/users/show.json", var.options);Fi[	I"(var == var);FI"(var + (var ? (1) : (2)));Fi	[	[	@ÀiDI"ª(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@ÀisI"”(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@·iAI"ª(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@·ipI"”(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	I"&var.match(/\A(.*?)((\d+\.)+\d+)/);FI"'var[2].scan(/\d+/).collect(&:to_i);Fi	[	[	@ïiI"darcs_binary_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
self.class.client_version_above?([2, 0, 0])
revisions(nil, nil, nil, :limit => 1);Fi[	@≤iI"scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
var.blank?
Info.new(:root_url => (url), :lastrev => (lastrev("", nil)));Fi[	@µiI"”hgversion_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
template_path_for(client_version)
var.blank?;Fi[	@ûiI"“scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
(var << credentials_string)
shellout(var);Fi[	I""include(Backup::CLI::Helpers);FI",include(Backup::Configuration::Helpers);Fi	[	[	I"0data//backup_proj/backup/compressor/base.rb;Ti I"Winclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
log!
private;Fi [	I".data//backup_proj/backup/database/base.rb;Ti I"binclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
load_defaults!
prepare!;Fi [	I"/data//backup_proj/backup/encryptor/base.rb;Ti I"ainclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
load_defaults!
private;Fi [	@≥i I"vinclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
attr_accessor(:path)
attr_accessor(:mirror);Fi [	I"3attr_accessor(:document, :relation, :metadata);FI"var.send(var.name);Fi	[	[	I"Adata//mongoid_proj/lib/mongoid/relations/cascading/delete.rb;Ti I"hattr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.cascades.empty?;Fi [	I"Bdata//mongoid_proj/lib/mongoid/relations/cascading/destroy.rb;Ti I"jattr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.is_a?(Enumerable);Fi [	I"Bdata//mongoid_proj/lib/mongoid/relations/cascading/nullify.rb;Ti I"`attr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.nullify;Fi [	I"Cdata//mongoid_proj/lib/mongoid/relations/cascading/restrict.rb;Ti I"èattr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation.blank?
raise(Errors::DeleteRestriction.new(document, metadata.name));Fi [	@‘I"path.sub(/^\~\//, "");Fi	[	[	@ûiI"ìattr_accessor(:path)
attr_accessor(:passive_mode)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::FTP.const_defined?(:FTP_PORT);Fi[	@ßiI"Üattr_accessor(:path)
attr_accessor(:local)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
File.join(path, var.trigger);Fi[	@≠iI"¥attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::SSH.start(ip, username, :password => (password), :port => (port));Fi[	@∞iI"µattr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::SFTP.start(ip, username, :password => (password), :port => (port));Fi[	I"lambda;FI"constraints(var);Fi	[	[	I"-data//devise_proj/devise/rails/routes.rb;TiI"^var[:options]
var.map!(&:to_sym)
var.each
lambda
constraints(var)
lambda
constraints(var);Fi[	@	iI"Uvar.each
lambda
constraints(var)
lambda
constraints(var)
lambda
constraints(var);Fi[	@	i!I"]constraints(var)
lambda
constraints(var)
lambda
constraints(var)
lambda
constraints(var);Fi[	@	i#I"öconstraints(var)
lambda
constraints(var)
lambda
constraints(var)
protected
resource(:session, :only => ([]), :controller => (var[:sessions]), :path => "");Fi[	I"persistable?;FI"_assigning?.!;Fi	[	[	@Ii&I"®insertable?
collection.find(selector).update(var => ({ path => (var) }))
post_process_batch_insert(var)
persistable?
_assigning?.!
inserts_valid
var.first.is_a?(::Hash);Fi[	I">data//mongoid_proj/lib/mongoid/relations/embedded/many.rb;TiI"Yconcat(var)
var.first
append(var)
persistable?
_assigning?.!
var.save
_unscoped.each;Fi[	I"=data//mongoid_proj/lib/mongoid/relations/embedded/one.rb;TiI"oFactory.build(klass, var)
bind_one
characterize_one(target)
persistable?
_assigning?.!
target.save
private;Fi[	I"@data//mongoid_proj/lib/mongoid/relations/referenced/many.rb;TiI"[concat(var)
var.first
append(var)
persistable?
_assigning?.!
var.validated?.!
var.save;Fi[	I"_binding?.!;FI"_building?.!;Fi	[	[	I"<data//mongoid_proj/lib/mongoid/relations/embedded/in.rb;TiI"´base
metadata.inverse_metadata(var)
target.persisted?
_binding?.!
_building?.!
Builders::Embedded::In.new(var, var, var)
Builders::NestedAttributes::One.new(var, var, var);Fi[	@/	iI"ùprivate
Bindings::Embedded::One.new(base, target, metadata)
base.persisted?
_binding?.!
_building?.!
_assigning?.!
Builders::Embedded::One.new(var, var, var);Fi[	I">data//mongoid_proj/lib/mongoid/relations/referenced/in.rb;TiI"¨private
Bindings::Referenced::In.new(base, target, metadata)
target.persisted?
_binding?.!
_building?.!
Builders::Referenced::In.new(var, var, var)
var.where(:_id => (var));Fi[	I"?data//mongoid_proj/lib/mongoid/relations/referenced/one.rb;TiI"Ωprivate
Bindings::Referenced::One.new(base, target, metadata)
base.persisted?
_binding?.!
_building?.!
Builders::Referenced::One.new(var, var, var)
var.klass.where(var.foreign_key => (var));Fi[	@ I"(var == var);Fi	[	[	@ÀirI"∞((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@÷iyI"§((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + var)
(var + 1)
(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@·ioI"∞((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[	@ÏiXI"£((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + 1)
(var == var)
(var + 1)
self.Cell(var, var, var[var, (var - var)], 0, 2, "", 0, var);Fi[	I"remote_path_for(var);FI"transferred_files_for(var);Fi	[	[	@òiI"Fog::Storage.new(:provider => (provider), :rackspace_username => (username), :rackspace_api_key => (api_key), :rackspace_auth_url => (auth_url), :rackspace_servicenet => (servicenet))
remote_path_for(@var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var);Fi[	@õiI"?Logger.warn(Errors::Storage::Dropbox::CacheError.wrap(var, "              Could not read session data from cache.\n              Cache data might be corrupt.\n"))
remote_path_for(@var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
connection.file_delete(var);Fi[	@°iI"´remote_path_for(@var)
FileUtils.mkdir_p(var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
FileUtils.rm_r(var);Fi[	@≠iI"¡Net::SSH.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var)
connection
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
connection;Fi[	I"var.is_a?(Array);FI"var.collect;Fi	[	[	@?iI"¢load_target.find(*var)
first_or_last(:first, *var)
first_or_last(:last, *var)
var.is_a?(Array)
var.collect
create_record(var, &var)
create_record(var, true, &var);Fi[	@?iyI"”(var + var)
owner.persisted?
raise(ActiveRecord::RecordNotSaved, "You cannot call create unless the parent is saved")
var.is_a?(Array)
var.collect
raise(NotImplementedError)
scope.scope_for_create.stringify_keys;Fi[	@ªiI"}extend(ActiveSupport::Concern)
var.is_a?(Array)
var.collect
discriminate_class_for_record(var)
var.decorate_columns(var);Fi[	I"9data//activerecord_proj/active_record/validations.rb;Ti
I"I18n.t(:"#{@var.class.i18n_scope}.errors.messages.record_invalid", :errors => (var), :default => :"errors.messages.record_invalid")
extend(ActiveSupport::Concern)
include(ActiveModel::Validations)
var.is_a?(Array)
var.collect
perform_validations(var)
perform_validations(var);Fi[	I"@var.respond_to?(:call);FI"#@var.call(attachment.instance);Fi	[	[	@-iI"ñvar.is_a?(String)
[var, nil].flatten[(0..1)]
@var.blank?
@var.respond_to?(:call)
@var.call(attachment.instance)
attachment.processors
attachment.whiny;Fi[	@-iI"©attachment.processors
attachment.whiny
whiny.!.!
@var.respond_to?(:call)
@var.call(attachment.instance)
attachment.send(:extra_options_for, name)
@var.respond_to?(:call);Fi[	@-iI"Â@var.respond_to?(:call)
@var.call(attachment.instance)
attachment.send(:extra_options_for, name)
@var.respond_to?(:call)
@var.call(attachment.instance)
attachment.send(:extra_source_file_options_for, name)
@var.respond_to?(:call);Fi[	@-iI"@var.respond_to?(:call)
@var.call(attachment.instance)
attachment.send(:extra_source_file_options_for, name)
@var.respond_to?(:call)
@var.call(attachment.instance)
@var.each
[:processors, :geometry, :format, :whiny, :convert_options, :source_file_options].each;Fi[	I"/TreeMixin.create!(:parent_id => (@var.id));FI"/TreeMixin.create!(:parent_id => (@var.id));Fi	[	[	@ÂiI"has_one(:first_child, :class_name => "RecursivelyCascadedTreeMixin", :foreign_key => :parent_id)
setup_db
TreeMixin.create!
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!;Fi[	@ÂiI"øsetup_db
TreeMixin.create!
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!
TreeMixin.create!;Fi[	@ÂiNI"πteardown_db
setup_db
TreeMixin.create!
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!;Fi[	@ÂiOI"øsetup_db
TreeMixin.create!
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!(:parent_id => (@var.id))
TreeMixin.create!
TreeMixin.create!;Fi[	I"var.patches[0];FI"#assert_equal(:p1, var.patch_p);Fi	[	[	@ÂiI"attr_reader(:patch_filename)
Patches.new("http://example.com/patch.diff")
assert_equal(1, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(["http://example.com/patch1.diff", "http://example.com/patch2.diff"])
assert_equal(2, var.patches.length);Fi[	@ÂiI"assert_equal(:p1, var.patch_p)
Patches.new(["http://example.com/patch1.diff", "http://example.com/patch2.diff"])
assert_equal(2, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
var.patches[0]
assert_equal(:p1, var.patch_p);Fi[	@ÂiI"◊assert_equal(2, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
var.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(:p0 => "http://example.com/patch.diff")
assert_equal(1, var.patches.length);Fi[	@ÂiI"Ÿassert_equal(:p0, var.patch_p)
Patches.new(:p1 => "http://example.com/patch.diff")
assert_equal(1, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(var)
assert_equal(2, var.patches.length);Fi[	I"1(var + (var ? (var[var.chr]) : (1000) or 0));FI"(var > var);Fi	[	[	@Ài@I"x(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var);Fi[	@ÀiiI"w(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var);Fi[	@·i=I"x(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var);Fi[	@·ifI"w(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var);Fi[	I"(attr_accessor(:username, :password);FI"attr_accessor(:ip, :port);Fi	[	[	@ûiI"Çrequire("net/ftp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:passive_mode);Fi[	@ßiI"©Backup::Dependency.load("net-ssh")
include(Backup::CLI::Helpers)
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:local);Fi[	@≠iI"•Backup::Dependency.load("net-ssh")
Backup::Dependency.load("net-scp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?;Fi[	@∞iI"¶Backup::Dependency.load("net-ssh")
Backup::Dependency.load("net-sftp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?;Fi[	@ô	I"attr_accessor(:path);Fi	[	[	@ûiI"èrequire("net/ftp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:passive_mode)
block_given?;Fi[	@ßiI"∂Backup::Dependency.load("net-ssh")
include(Backup::CLI::Helpers)
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
attr_accessor(:local)
block_given?;Fi[	@≠iI"πBackup::Dependency.load("net-ssh")
Backup::Dependency.load("net-scp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var);Fi[	@∞iI"∫Backup::Dependency.load("net-ssh")
Backup::Dependency.load("net-sftp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var);Fi[	I"path.sub(/^\~\//, "");FI"private;Fi	[	[	@ûiI"¶attr_accessor(:passive_mode)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::FTP.const_defined?(:FTP_PORT)
Net::FTP.send(:remove_const, :FTP_PORT);Fi[	@ßiI"∏attr_accessor(:local)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
File.join(path, var.trigger)
Net::SSH.start(ip, username, :password => (password), :port => (port));Fi[	@≠iI"∞attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::SSH.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var);Fi[	@∞iI"±attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "")
private
Net::SFTP.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var);Fi[	I"!assert_equal(1, var.version);FI"-assert_equal(1, var.versions(true).size);Fi	[	[	I"Hdata//redmine_proj/plugins/acts_as_versioned/test/versioned_test.rb;TiOI"‹assert_equal(1, var.version)
Page.class_eval
Page.create!(:title => "title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "new title")
assert_equal(1, var.version);Fi[	@ø	iRI" assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "new title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "a title")
assert_equal(2, var.version);Fi[	@ø	i[I"ÕPage.version_condition
Proc.new
Page.create!(:title => "title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "a title")
assert_equal(1, var.version);Fi[	@ø	i^I"˛assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "a title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "b title")
assert_equal(2, var.version);Fi[	I"(var << var);FI"Time.at(var).to_a;Fi	[	[	@1i<I"ltimescale_divisions
$1.to_i
(var < var)
(var << var)
Time.at(var).to_a
(var[4] > 12)
(var[4] / 12).to_i;Fi[	@1iCI"É(var[4] % 12)
Time.local(*var).to_i
(var < var)
(var << var)
Time.at(var).to_a
Time.local(*var).to_i
((((7 * 24) * 60) * 60) * var);Fi[	I"/data//redmine_proj/SVG/Graph/TimeSeries.rb;TiI"ltimescale_divisions
$1.to_i
(var < var)
(var << var)
Time.at(var).to_a
(var[4] > 12)
(var[4] / 12).to_i;Fi[	@–	i$I"É(var[4] % 12)
Time.local(*var).to_i
(var < var)
(var << var)
Time.at(var).to_a
Time.local(*var).to_i
((((7 * 24) * 60) * 60) * var);Fi[	@I"!assert(var.mach_o_bundle?.!);Fi	[	[	@ziI"˘assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert_match(/Mach-O dynamically linked shared library/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/x86_64.dylib");Fi[	@zi%I"˘assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert_match(/Mach-O 64-bit dynamically linked shared library/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/a.out");Fi[	@zi0I"Íassert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert_match(/Mach-O (64-bit )?executable/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/fat.bundle");Fi[	@zi\I"Ùassert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!)
assert((var.arch == :dunno))
assert_no_match(/Mach-O (64-bit )?dynamically linked shared library/, file(var));Fi[	I"$?.exitstatus.!=(0);FI"(var.to_i > 0);Fi	[	[	@ûi!I"rvar.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0);Fi[	@ûi.I"ë(var << " --limit #{options[:limit].to_i}")
(var << (" " + target(var)))
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var.to_i > 0);Fi[	@ûi9I"†(var << " #{target(path)}@#{identifier_from}")
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string);Fi[	@ûi>I"var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string);Fi[	I"require("forwardable");FI"extend(Forwardable);Fi	[	[	I"+data//bundler_proj/bundler/spec_set.rb;TiI"ãrequire("tsort")
require("forwardable")
extend(Forwardable)
include(TSort, Enumerable)
def_delegators(:@specs, :<<, :length, :add, :remove);Fi[	I"Ddata//compass_proj/compass/sass_extensions/sprites/image_row.rb;Ti I"Ürequire("forwardable")
extend(Forwardable)
attr_reader(:images, :max_width)
def_delegators(:@images, :last, :delete, :empty?, :length);Fi [	I"Edata//compass_proj/compass/sass_extensions/sprites/row_fitter.rb;Ti I"frequire("forwardable")
extend(Forwardable)
attr_reader(:images, :rows)
def_delegators(:rows, :[]);Fi [	I"Fdata//cucumber_prok/cucumber/runtime/for_programming_languages.rb;Ti I"—require("forwardable")
extend(Forwardable)
def_delegators(:@user_interface, :embed, :ask, :puts, :features_paths, :step_match)
def_delegators(:@support_code, :invoke_steps, :invoke, :load_programming_language);Fi [	I"var[:data];FI"var[:data].kind_of?(Array);Fi	[	[	@LiI"órespond_to?(:set_defaults)
set_defaults
init_with(var)
var[:data]
var[:data].kind_of?(Array)
(@var << var)
raise("No data provided by #{conf.inspect}");Fi[	@,iI" attr_accessor(:show_data_points)
attr_accessor(:min_x_value)
attr_accessor(:min_y_value)
var[:data]
var[:data].kind_of?(Array)
raise("No data provided by #{conf.inspect}")
((var[:data].length % 2) == 0);Fi[	@1iI"Ãattr_accessor(:scale_x_divisions)
attr_accessor(:scale_x_integers)
attr_accessor(:bar_gap)
var[:data]
var[:data].kind_of?(Array)
raise("No data provided by #{conf.inspect}")
((var[:data].length % 3) == 0);Fi[	@–	i
I"“attr_accessor(:x_label_format)
attr_accessor(:timescale_divisions)
attr_accessor(:popup_format)
var[:data]
var[:data].kind_of?(Array)
raise("No data provided by #{@data.inspect}")
((var[:data].length % 2) == 0);Fi[	I",assert(Category.left_and_rights_valid?);FI"categories(:child_2);Fi	[	[	I"Rdata//redmine_proj/plugins/awesome_nested_set/test/awesome_nested_set_test.rb;TiˇI"0categories(:top_level).descendants.each
[:child_1, :child_2, :child_2_1, :child_3].each
assert(categories(:top_level).is_or_is_ancestor_of?(categories(:top_level_2)).!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!);Fi[	@
iI"Ácategories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!);Fi[	@
iI"Ëcategories(:top_level_2)[:rgt]
categories(:top_level_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:lft]
categories(:child_2).save(false);Fi[	@
iI"‚categories(:top_level)[:lft]
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:rgt]
categories(:child_2).save(false);Fi[	@†I"var.nil?;Fi	[	[	I"!data//haml_proj/haml/util.rb;Ti*I"o(":" + inspect_obj(var.to_s))
var.is_a?(String)
var.inspect
var.empty?
var.nil?
@var.include?(var)
var.pop;Fi[	I"(data//homebrew_proj/cmd/--config.rb;TiI"kHOMEBREW_REPOSITORY.cd
var.empty?
HOMEBREW_REPOSITORY.cd
var.empty?
var.nil?
var.realpath
(var == var);Fi[	I")data//homebrew_proj/extend/string.rb;TiI"¿var.to_s
(self[0, var.length] == var)
chomp
var.empty?
var.nil?
opoo("inreplace: replacement of '#{before}' with '#{after}' failed")
gsub!(Regexp.new("^#{flag}[ \t]*=[ \t]*(.*)$"), var, false);Fi[	I";data//rspec_proj/spec/example/example_group_factory.rb;Ti	I"Ædefault(ExampleGroup)
example_group_creation_listeners.each
::Spec::Example::SharedExampleGroup.register(*var, &var)
var.empty?
var.nil?
raise(ArgumentError)
add_options(var);Fi[	I"require("twitter/base");FI"!require("twitter/creatable");Fi	[	[	I"0data//twitter_proj/twitter/action/follow.rb;Ti I"ãrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position, :target_objects);Fi [	I";data//twitter_proj/twitter/action/list_member_added.rb;Ti I"require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position);Fi [	I"1data//twitter_proj/twitter/action/mention.rb;Ti I"require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position);Fi [	I"/data//twitter_proj/twitter/action/tweet.rb;Ti I"require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position);Fi [	I"3say("- #{diff.old_element.chomp}", :red, true);FI"5say("+ #{diff.new_element.chomp}", :green, true);Fi	[	[	I":data//bundler_proj/bundler/vendor/thor/shell/color.rb;TiI"˛var.to_s.split("\n")
Diff::LCS.sdiff(var, var).each
var.action
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true);Fi[	@8
iI"var.action
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("  #{diff.old_element.chomp}", nil, true)
@var.nil?;Fi[	I"9data//bundler_proj/bundler/vendor/thor/shell/html.rb;TiI"˛var.to_s.split("\n")
Diff::LCS.sdiff(var, var).each
var.action
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true);Fi[	@=
iI"var.action
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("- #{diff.old_element.chomp}", :red, true)
say("+ #{diff.new_element.chomp}", :green, true)
say("  #{diff.old_element.chomp}", nil, true)
@var.nil?;Fi[	@%
I" include(Twitter::Creatable);Fi	[	[	@(
iI"•require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position, :target_objects)
Array(@var[:sources]).map;Fi[	@+
iI"îrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map;Fi[	@.
iI"îrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map;Fi[	@1
iI"îrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map;Fi[	I"%categories(:child_2).save(false);FI".assert(Category.left_and_rights_valid?.!);Fi	[	[	@
iI"assert(categories(:top_level).is_or_is_ancestor_of?(categories(:top_level_2)).!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2);Fi[	@
iI"Úassert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:top_level_2);Fi[	@
iI"·assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:lft]
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2);Fi[	@
iI"ƒassert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:rgt]
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
Category.create
Category.create;Fi[	@
I"(var.size == 1);Fi	[	[	@Zi/I"ooption_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift;Fi[	@fiI"ooption_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift;Fi[	@liI"ooption_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift;Fi[	@ri"I"ooption_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size == 1)
var.options
var.shift;Fi[	I"	name;FI"@var.to_sexp;Fi	[	[	@miI"ävar.visit_outline_table(@var)
@var.skip_invoke!
@var.cells_rows[(1..-1)].each(&var)
name
@var.to_sexp
(var + [var])
(var + [@var.to_sexp]);Fi[	@‚i#I"\language.keywords("feature")
$1.strip
init
name
@var.to_sexp
(var + [var])
@var.to_sexp;Fi[	@ÂiI"g@var.status
@var.each
@var.next_feature_element(self)
name
@var.to_sexp
(var + [var])
@var.to_sexp;Fi[	@Íi#I"¡@var.each
var.visit_scenario_name(@var.language.keywords("scenario")[0], var.name, file_colon_line(var.line), source_indent(first_line_length))
init
name
@var.to_sexp
(var + [var])
@var.to_sexp;Fi[	@†I"var.any?;Fi	[	[	@giùI"|(var.length == 1)
var.first
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:before, var, &var)
var.last.is_a?(Hash);Fi[	@gi°I"Ñvar.any?
add_callback(:before, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:after, var, &var)
var.last.is_a?(Hash);Fi[	@gi•I"Ñvar.any?
add_callback(:after, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
add_callback(:around, var, &var)
var.last.is_a?(Hash);Fi[	@gi©I"†var.any?
add_callback(:around, var, &var)
var.last.is_a?(Hash)
var.pop
var.any?
assert_valid_keys(var, :on, :do, :if, :unless)
add_callback(:failure, var, &var);Fi[	I"var.each_pair;FI"var.each_pair;Fi	[	[	@…i I"<var.each_pair
var.each_pair
var.each_pair
var.each_pair;Fi [	@…iI"Jvar.each_pair
var.each_pair
var.each_pair
var.each_pair
var.each_pair;Fi[	@…iI"Svar.each_pair
var.each_pair
var.each_pair
var.each_pair
var.each_pair
var.each;Fi[	@…iI"[var.each_pair
var.each_pair
var.each_pair
var.each_pair
var.each_pair
var.each
private;Fi[	I"%Array(@var[:target_objects]).map;FI"Array(@var[:targets]).map;Fi	[	[	@+
i
I"öinclude(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map
Array(@var[:target_objects]).map
Array(@var[:targets]).map;Fi[	@.
iI"åattr_reader(:max_position, :min_position)
Array(@var[:sources]).map
sources.first
Array(@var[:target_objects]).map
Array(@var[:targets]).map;Fi[	I"/data//twitter_proj/twitter/action/reply.rb;TiI"_require("twitter/action/tweet")
Array(@var[:target_objects]).map
Array(@var[:targets]).map;Fi[	I"1data//twitter_proj/twitter/action/retweet.rb;TiI"_require("twitter/action/tweet")
Array(@var[:target_objects]).map
Array(@var[:targets]).map;Fi[	I")var.extend(StringInreplaceExtension);FI"(var.change_make_var!("FLAG", "def");Fi	[	[	I"/data//homebrew_proj/test/test_inreplace.rb;TiI"—require("testing_env")
require("extend/string")
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension);Fi[	@ô
i
I"var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension);Fi[	@ô
iI"var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("FLAG=def\nmv file_a file_b", var)
var.extend(StringInreplaceExtension);Fi[	@ô
iI"&var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "\\1 def")
assert_equal("OTHER=def\nFLAG=abc def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension);Fi[	@N
I",assert(Category.left_and_rights_valid?);Fi	[	[	@
iI"Âassert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false);Fi[	@
iI"Áassert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:top_level_2)
categories(:top_level_2)[:rgt];Fi[	@
iI"‡categories(:top_level_2)
categories(:top_level_2)[:rgt]
categories(:top_level_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:lft];Fi[	@
iI"÷categories(:child_2)
categories(:top_level)[:lft]
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
assert(Category.left_and_rights_valid?)
categories(:child_2)
categories(:top_level)[:rgt];Fi[	I"=assert_equal(GitDownloadStrategy, var.download_strategy);FI"<assert_instance_of(GitDownloadStrategy, var.downloader);Fi	[	[	@ﬂi\I"6assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
ARGV.delete("--HEAD")
ExplicitVersionSpecTestBall.new;Fi[	@ﬂi|I"Fassert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new;Fi[	@ﬂiàI"Fassert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new;Fi[	@ﬂiîI"Fassert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
ExplicitStrategySpecTestBall.new;Fi[	I"Bassert_equal("https://github.com/mxcl/homebrew.git", var.url);F@≠
i	[	[	@ﬂi[I"'SpecTestBall.new
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
ARGV.delete("--HEAD");Fi[	@ﬂi{I"Massert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head);Fi[	@ﬂiáI"Massert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head);Fi[	@ﬂiìI"Massert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head);Fi[	I",assert_equal(var.head, var.active_spec);FI".assert_version_equal("HEAD", var.version);Fi	[	[	@ﬂiYI"ARGV.delete("--devel")
ARGV.push("--HEAD")
SpecTestBall.new
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy);Fi[	@ﬂi}I"Òassert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url);Fi[	@ﬂiÑI"Òassert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url);Fi[	@ﬂiêI"Òassert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url);Fi[	@‚I"(var << var);Fi	[	[	@1i;I"mtimescale_divisions
timescale_divisions
$1.to_i
(var < var)
(var << var)
Time.at(var).to_a
(var[4] > 12);Fi[	@1iBI"|(var[4] / 12).to_i
(var[4] % 12)
Time.local(*var).to_i
(var < var)
(var << var)
Time.at(var).to_a
Time.local(*var).to_i;Fi[	@–	iI"mtimescale_divisions
timescale_divisions
$1.to_i
(var < var)
(var << var)
Time.at(var).to_a
(var[4] > 12);Fi[	@–	i#I"|(var[4] / 12).to_i
(var[4] % 12)
Time.local(*var).to_i
(var < var)
(var << var)
Time.at(var).to_a
Time.local(*var).to_i;Fi[	I"%@var.store_association(var, var);FI"#assert_retrieve(var, nil, var);Fi	[	[	I"Sdata//redmine_proj/plugins/open_id_authentication/test/mem_cache_store_test.rb;TiI"…OpenIdAuthentication::MemCacheStore.new
gen_assoc(0)
assert_retrieve(var)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, nil, var)
@var.store_association(var, var);Fi[	@ﬂ
iI"˙@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, nil, var)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_remove(var, (var.handle + "x"), false)
assert_remove((var + "x"), var.handle, false);Fi[	@ﬂ
iI"ﬂassert_remove(var, var.handle, false)
@var.store_association(var, var)
gen_assoc(1)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var);Fi[	@ﬂ
iI"Èassert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
gen_assoc(2, 100)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var);Fi[	@˛I"&merge_user!(var.options, var.pop);Fi	[	[	@i3I"var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
cursor_from_response(:users, Twitter::User, var, var, var.options, var)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id];Fi[	@i:I"Úvar.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
send(var.to_sym, var, var.options)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
merge_list!(var.options, var.pop)
var.options[:owner_id];Fi[	@iI"›object_from_response(Twitter::User, :post, "/1.1/account/update_profile_colors.json", var)
object_from_response(Twitter::User, :post, "/1.1/account/update_profile_image.json", var.merge(:image => (var)))
cursor_from_response(:users, Twitter::User, :get, "/1.1/blocks/list.json", var, :blocking)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
cursor_from_response(:ids, nil, :get, "/1.1/blocks/ids.json", var.options, :blocked_ids)
merge_default_cursor!(var);Fi[	@iI"var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
objects_from_response(Twitter::User, var, var, var.options)
Twitter::API::Arguments.new(var)
merge_user!(var.options, var.pop)
objects_from_response(var, var, var, var.options)
send(var.to_sym, var, var)[:body];Fi[	@‹
I"*assert_retrieve(var, var.handle, var);Fi	[	[	@ﬂ
iI"À@var.store_association(var, var)
gen_assoc(1)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
gen_assoc(2, 100);Fi[	@ﬂ
iI"Èassert_retrieve(var, var.handle, var)
gen_assoc(2, 100)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var);Fi[	@ﬂ
i!I"assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_remove(var, var.handle, true)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, var);Fi[	@ﬂ
i'I"assert_retrieve(var, var.handle, var)
assert_remove(var, var.handle, false)
assert_remove(var, var.handle, true)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil);Fi[	I")AddCIDFonts(var, var, var, var, var);FI"32.upto(126);Fi	[	[	@ÀiI"#AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, var, var, var)
AddCIDFonts(var, var, var, var, var);Fi[	@ÀiI"∆AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0");Fi[	@÷iI"AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0");Fi[	@·iI"AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0");Fi[	I"@var["cw"];FI"(var == 0);Fi	[	[	@Ài%I"∞((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@÷i%I"≤((var * @var) / 1000)
(@var["type"] == "Type0")
SJISMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@·i"I"∞((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@ÏiI"{(@var + var)
(var == 1)
(@var + var)
@var["cw"]
(var == 0)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	I"Set.new;FI"var.each;Fi	[	[	@»iI"nprivate
_groups.values.to_set.flatten
var.empty?
Set.new
var.each
Hash.new
@var.current_dependencies.each;Fi[	@ÂiI"èassert_equal(:p1, var.patch_p)
Patches.new(var)
assert_equal(2, var.patches.length)
Set.new
var.each
assert_equal(2, var.size)
Patches.new(var);Fi[	@Âi$I"~assert_equal(2, var.size)
Patches.new(var)
assert_equal(4, var.patches.length)
Set.new
var.each
assert_equal(4, var.size);Fi[	I"%data//jekyll_proj/jekyll/site.rb;TiII"gself.posts.each
self.pages.each
self.static_files.each
Set.new
var.each
var.merge(var)
(var - var);Fi[	I"CompilerSelector.new(var);FI"$assert(var.fails_with?(:clang));Fi	[	[	@‹iI"var.select_compiler
assert_equal(case MacOS.clang_build_version; when (0..210) then; :gcc; else; :clang; end, ENV.compiler)
TestAllCompilerFailures.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc));Fi[	@‹iI"›var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler)
TestMixedCompilerFailures.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm).!)
assert(var.fails_with?(:gcc));Fi[	@‹i-I"'var.select_compiler
assert_equal(:clang, ENV.compiler)
TestEvenMoreMixedCompilerFailures.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm))
assert(case MacOS.gcc_42_build_version; when nil then; var.fails_with?(:gcc); else; var.fails_with?(:gcc).!; end);Fi[	@‹i4I"var.select_compiler
assert_equal(case MacOS.clang_build_version; when (0..210) then; :gcc; else; :clang; end, ENV.compiler)
TestBlockWithoutBuildCompilerFailure.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm).!)
assert(var.fails_with?(:gcc).!);Fi[	@
I"((@var - @var) - @var);Fi	[	[	@ÀiVI"ö(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@÷iZI"ú(var == 2)
(@var["type"] == "Type0")
SJISWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@·iSI"ö(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	@ÏiAI"≤var.index("B").nil?.!
(var + "B")
self.Cell(var, var, var[(var..var)], var, 2, var, var)
@var["cw"]
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "");Fi[	I"(var.size == 0);FI"@raise(Compass::Error, "Too many arguments were specified.");Fi	[	[	@Ki'I"â(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.")
var.options
var.options;Fi[	@Zi3I"v(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@liI"v(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	@ri&I"v(var.size == 1)
var.options
var.shift
(var.size == 0)
raise(Compass::Error, "Too many arguments were specified.");Fi[	I"assert_nothing_raised;FI"assert_nothing_raised;Fi	[	[	@ø	iI"assert_equal("LockedPageRevision", LockedPage.versioned_class_name)
assert_equal(Page::Version, Page.versioned_class)
assert_equal(LockedPage::LockedPageRevision, LockedPage.versioned_class)
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised;Fi[	@ø	iI"‚assert_equal(Page::Version, Page.versioned_class)
assert_equal(LockedPage::LockedPageRevision, LockedPage.versioned_class)
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised
pages(:welcome);Fi[	@ø	i I"Œassert_equal(LockedPage::LockedPageRevision, LockedPage.versioned_class)
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised
assert_nothing_raised
pages(:welcome)
assert_equal(24, var.version);Fi[	@
i I"	assert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?)
assert_nothing_raised
assert_nothing_raised
Note.create!(:body => "A", :notable_id => 2, :notable_type => "Category")
Note.create!(:body => "B", :notable_id => 2, :notable_type => "Category");Fi[	@®@„i	[	[	@ïiI"ıclient_version.empty?.!
darcs_binary_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
self.class.client_version_above?([2, 0, 0]);Fi[	@≤iI"Àclient_version.empty?.!
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
var.blank?;Fi[	@µiI"Êclient_version_above?([1, 2])
hgversion_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
template_path_for(client_version);Fi[	@ûiI"‚client_version_above?([1, 3])
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/)
var[2].scan(/\d+/).collect(&:to_i)
(var << credentials_string);Fi[	@éI"(self.class.to_s.sub("Backup::", "");Fi	[	[	@ÛiI"Ëinclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
log!
private
self.class.to_s.sub("Backup::", "")
Logger.message((("Using #{compressor_name} for compression.\n" + "  Command: '#{@cmd}'\n") + "  Ext: '#{@ext}'"));Fi[	@˘iI"¬include(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
load_defaults!
private
self.class.to_s.sub("Backup::", "")
Logger.message("Using #{encryptor_name} to encrypt the archive.");Fi[	I".data//backup_proj/backup/notifier/base.rb;TiI"öLogger.has_warnings?
log!
notify!(var)
private
self.class.to_s.sub("Backup::", "")
Logger.message("#{notifier_name} started notifying about the process.");Fi[	@≥iI"_block_given?
instance_eval(&var)
(@var << var)
private
self.class.to_s.sub("Backup::", "");Fi[	@œI"require("dependencies");Fi	[	[	I"2data//homebrew_proj/test/test_dependencies.rb;Ti I"wrequire("testing_env")
require("dependencies")
Dependencies.new
assert_same(@var, (@var << Dependency.new("foo")));Fi [	I"0data//homebrew_proj/test/test_dependency.rb;Ti I"ñrequire("testing_env")
require("dependencies")
Struct.new(:tags).new(@var).extend(Dependable)
assert_equal(["--foo", "--bar"].sort, @var.options.sort);Fi [	I":data//homebrew_proj/test/test_dependency_collector.rb;Ti I"Srequire("testing_env")
require("dependencies")
require("extend/set")
deps.find;Fi [	I"1data//homebrew_proj/test/test_requirement.rb;Ti I"jrequire("testing_env")
require("dependencies")
Requirement.new("bar")
assert_equal(["bar"], var.tags);Fi [	I"(@var + var);FI"((@var - @var) - @var);Fi	[	[	@ÀinI"~(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@÷iuI"{(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + var);Fi[	@·ikI"~(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	@ÏiTI"}(var > var)
(var == -1)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1);Fi[	I"(var < 128);FI"(var.chr == "\n");Fi	[	[	@Ài8I"åvar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1);Fi[	@Ài_I"évar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1);Fi[	@·i5I"åvar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1);Fi[	@·i\I"évar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1);Fi[	I"(@var + 1);FI"(@var + 1);Fi	[	[	I"3data//cucumber_prok/cucumber/formatter/html.rb;TiYI"\(@var << "</tr>")
var.exception
@var.tr
(@var + 1)
(@var + 1)
move_progress
(@var == 0);Fi[	@_i*I"j(var[0, 1] == "+")
diff_for_added_line
var[(1..-1)]
(@var + 1)
(@var + 1)
(var[0, 1] == "-")
Diff.new;Fi[	@_i0I"VDiff.new
var[(1..-1)]
(self << var)
(@var + 1)
(@var + 1)
write_offsets
var[0, 1];Fi[	@_i8I"\var[(1..-1)]
var[(1..-1)]
(self << var)
(@var + 1)
(@var + 1)
(@var > 0)
(@var == @var);Fi[	I"%puts("The offending files are:");FI"puts(var);Fi	[	[	I"-data//homebrew_proj/formula_installer.rb;Ti£I"puts("For Java software, it is typically better for the formula to")
puts("install to \"libexec\" and then symlink or wrap binaries into \"bin\".")
puts("See \"activemq\", \"jruby\", etc. for examples.")
puts("The offending files are:")
puts(var)
f.lib.directory?
f.lib.children.select;Fi[	@†i™I" var.empty?
opoo("Non-libraries were installed to \"lib\".")
puts("Installing non-libraries to \"lib\" is bad practice.")
puts("The offending files are:")
puts(var)
f.bin.directory?
f.bin.children.select;Fi[	@†i±I"–var.empty?
opoo("Non-executables were installed to \"bin\".")
puts("Installing non-executables to \"bin\" is bad practice.")
puts("The offending files are:")
puts(var)
f.sbin.directory?
f.sbin.children.select;Fi[	@†i∏I"»var.empty?
opoo("Non-executables were installed to \"sbin\".")
puts("Installing non-executables to \"sbin\" is bad practice.")
puts("The offending files are:")
puts(var)
check_jars
check_non_libraries;Fi[	@éI"var.to_s;Fi	[	[	I"Xdata//activerecord_proj/active_record/connection_adapters/abstract/schema_dumper.rb;TiI"Wvar.null
var.has_default?
default_string(var.default)
private
var.to_s
var.inspect;Fi[	I"%data//homebrew_proj/metafiles.rb;Ti	I"Åinclude?(var)
[".DS_Store", "INSTALL_RECEIPT.json"].include?(var)
include?(var).!
private
var.to_s
var.downcase
Pathname.new(var);Fi[	I"<data//mongoid_proj/lib/mongoid/attributes/processing.rb;TiI"^with_mass_assignment(var, var)
private
var.to_s
relations.has_key?(var)
pending_relations;Fi[	I":data//mongoid_proj/lib/mongoid/matchers/strategies.rb;TiI"óMatchers::Or.new(var, var)
Matchers::And.new(var, var)
Default.new(extract_attribute(var, var))
private
var.to_s
var.split(".").inject(var.as_document);Fi[	@RI"require("keg");Fi	[	[	@ài I"Nrequire("formula")
require("keg")
require("bottles")
require("cmd/prune");Fi [	I"#data//homebrew_proj/cmd/irb.rb;Ti I"Krequire("formula")
require("keg")
require("irb")
Formula.factory(self);Fi [	I"(data//homebrew_proj/cmd/outdated.rb;Ti I"Brequire("formula")
require("keg")
extend(self)
outdated_brews;Fi [	@†iI"^require("exceptions")
require("formula")
require("keg")
require("tab")
require("bottles");Fi[	I"(@var > @var);FI"(@var + var);Fi	[	[	@ÀimI"{(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@÷itI"{(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@·ijI"{(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	@ÏiSI"ç(var + GetCharWidth(var, var))
(var > var)
(var == -1)
(@var > @var)
(@var + var)
((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var);Fi[	I"
var.!;FI"(var.chr == " ");Fi	[	[	@Ài>I"s(var + 1)
(var + 1)
(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var);Fi[	@ÀigI"ï((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var);Fi[	@·i;I"s(var + 1)
(var + 1)
(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var);Fi[	@·idI"ï((@var - @var) - @var)
(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var);Fi[	@I"var.options;Fi	[	[	@NiI"é(var.size == 0)
raise(OptionParser::ParseError, "Please specify the grid dimensions.")
var.options
var.shift
var.options
var.shift
var.options;Fi[	@NiI"ávar.options
var.shift
var.options
var.shift
var.options
assert_project_directory_exists!
Compass.add_configuration(var, "command_line");Fi[	@QiI"êoption_parser(var)
var.parse!
var.options
var.shift
var.options
Compass::Commands.command_exists?(options[:help_command])
options[:help_command];Fi[	@]iI"P(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.options;Fi[	@ΩI"(var == -1);Fi	[	[	@Ïi\I"πalias_method(:add_page, :AddPage)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f G", (var / 255.0))
sprintf("%.3f %.3f %.3f RG", (var / 255.0), (var / 255.0), (var / 255.0));Fi[	@ÏidI"°out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f g", (var / 255.0))
sprintf("%.3f %.3f %.3f rg", (var / 255.0), (var / 255.0), (var / 255.0));Fi[	@ÏimI"°out(@var)
(var == 0)
(var == 0)
(var == 0)
(var == -1)
sprintf("%.3f g", (var / 255.0))
sprintf("%.3f %.3f %.3f rg", (var / 255.0), (var / 255.0), (var / 255.0));Fi[	@_iGI"Ñ(var >= -(var - var))
(var[var] == var[var])
(var - 1)
(var == 0)
(var == -1)
attr_accessor(:nb_line_left)
attr_accessor(:line_left);Fi[	I"(var.chr == " ");F@å	i	[	[	@Ài?I"u(var + 1)
(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1);Fi[	@ÀihI"ä(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1);Fi[	@·i<I"u(var + 1)
(var == 2)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1);Fi[	@·ieI"ä(((var - (2 * @var)) * 1000) / @var)
(var + 1)
var.!
(var.chr == " ")
(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1);Fi[	I"(var + [var]);FI"@var.to_sexp;Fi	[	[	@ﬂi$I"\name.empty?
(var + [name])
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var);Fi[	@‚i%I"Kinit
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var);Fi[	@ÂiI"f@var.next_feature_element(self)
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var);Fi[	@Íi%I"Kinit
name
@var.to_sexp
(var + [var])
@var.to_sexp
var.any?
(var + var);Fi[	I"(var + "T");FI"(var < var);Fi	[	[	@Ài3I"yvar.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@÷i3I"yvar.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@·i0I"yvar.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String)
var[var].ord;Fi[	@ÏiI"lvar.index("R").nil?
(var + "R")
var.index("T").nil?.!
(var + "T")
(var < var)
var[var]
(var == "\n"[0]);Fi[	I"@var.empty?;FI"var.visit_comment(@var);Fi	[	[	@ﬂiI"Ã@var.dup(var)
Cucumber.wants_to_quit
init
@var.empty?
var.visit_comment(@var)
var.visit_background_name(@var, name, file_colon_line(@var), source_indent(first_line_length))
with_visitor(hook_context, var);Fi[	@mi
I"∏attr_writer(:outline_table)
attr_reader(:gherkin_statement)
Cucumber.wants_to_quit
@var.empty?
var.visit_comment(@var)
var.visit_examples_name(@var, name)
var.visit_outline_table(@var);Fi[	@‚iI"é(@var << var)
Cucumber.wants_to_quit
init
@var.empty?
var.visit_comment(@var)
var.visit_tags(@var)
var.visit_feature_name(@var, indented_name);Fi[	@ÍiI"Á@var.extend(ExamplesArray)
(@var.feature_elements << self)
Cucumber.wants_to_quit
@var.empty?
var.visit_comment(@var)
var.visit_tags(@var)
var.visit_scenario_name(@var, name, file_colon_line(@var), source_indent(first_line_length));Fi[	@I"@var.each;Fi	[	[	I"-data//bundler_proj/bundler/dependency.rb;TiI"vvar["env"]
var.key?("require")
Array((var["require"] or []))
@var.empty?
@var.each
current_env?
current_platform?;Fi[	@ìiaI"fset_scenario_color(var)
(@var + 1)
(@var << var)
@var.empty?
@var.each
empty_messages
@var.empty?;Fi[	@*i"I"Åload_files!(var)
unknown_programming_language?
load_programming_language("rb")
@var.empty?
@var.each
matches(var, var)
var.empty?;Fi[	I"-data//whenever_proj/whenever/job_list.rb;TiI"Tvar.blank?
var.split("&")
var.each
@var.empty?
@var.each
(var << "\n")
var.join;Fi[	@´I"broadcast(var, var);Fi	[	[	@ØiI"rbroadcast(var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var);Fi[	@ØiI"ãbroadcast(var)
broadcast(var, var, var, var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var, var, var, var);Fi[	@ØiI"©broadcast(var)
broadcast(var, var, var, var, var, var, var, var)
broadcast(var, var, var, var, var, var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var);Fi[	@ØiI"}broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(*var)
broadcast(var, var, var);Fi[	I"out("/ItalicAngle 0");FI"out("/Ascent 800");Fi[[	@ÀiïI"©out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800");Fi[	@÷iúI"©out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800");Fi[	@·iëI"©out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800");Fi[	I"failed(var, var, false);FI"status!(:failed);Fi[[	I"8data//cucumber_prok/cucumber/ast/step_invocation.rb;TiI"áfailed(var, var, false)
status!(:undefined)
var.table
failed(var, var, false)
status!(:failed)
failed(var, var, false)
status!(:failed);Fi[	@HiI"ávar.table
failed(var, var, false)
status!(:failed)
failed(var, var, false)
status!(:failed)
var.step_match(@var)
failed(var, var, true);Fi[	@Hi%I"¢failed(var, var, true)
status!(:undefined)
NoStepMatch.new(@var, @var)
failed(var, var, false)
status!(:failed)
NoStepMatch.new(@var, @var)
var.step_visited(self);Fi[	I"%require("cucumber/formatter/io");FI"*require("gherkin/formatter/argument");Fi[[	I"Hdata//cucumber_prok/cucumber/formatter/gherkin_formatter_adapter.rb;Ti I"}require("cucumber/formatter/io")
require("gherkin/formatter/argument")
@var.uri(var.file)
@var.feature(var.gherkin_statement);Fi [	I"6data//cucumber_prok/cucumber/formatter/gpretty.rb;TiI"∏require("cucumber/formatter/gherkin_formatter_adapter")
require("cucumber/formatter/io")
require("gherkin/formatter/argument")
require("gherkin/formatter/pretty_formatter")
include(Io);Fi[	I"3data//cucumber_prok/cucumber/formatter/json.rb;TiI"∂require("cucumber/formatter/gherkin_formatter_adapter")
require("cucumber/formatter/io")
require("gherkin/formatter/argument")
require("gherkin/formatter/json_formatter")
include(Io);Fi[	I"@var.flush;FI"@var.puts;Fi[[	@≤i#I"d@var.flush
@var.puts("#{keyword}: #{name}")
@var.puts
@var.flush
@var.puts
@var.flush
@var.puts;Fi[	@≤i%I"r@var.puts
@var.flush
@var.puts
@var.flush
@var.puts
@var.flush
print_feature_element_name(var, var, var, var);Fi[	@ªiI"^@var.print(green("."))
@var.flush
@var.print(yellow("*"))
@var.flush
@var.puts
@var.flush;Fi[	I"	each;FI"	each;Fi[[	I"$data//homebrew_proj/cmd/deps.rb;Ti
I"?extend(self)
ARGV.include?("--all")
Formula.each
each
each;Fi[	@]i.I"\xpath(*var).first
css(*var).first
find_all
each
each
Hash.===(var)
first.attribute(var);Fi[	I"Ddata//state_machine_proj/state_machine/transition_collection.rb;Ti2I"]{ :transaction => (false), :actions => (false) }.merge(var)
private
(var == 0)
each
each;Fi[	I"@var.select;FI"@var.select;Fi[[	I"4data//cucumber_prok/cucumber/runtime/results.rb;TiI"svar.object_id
@var.has_key?(var)
scenarios.push(var)
@var.select
@var.select
@var.wip?
scenarios(:passed).any?;Fi[	I"1data//redmine_proj/redmine/access_control.rb;Ti
I"ipermissions.detect
permission(var)
var.actions
@var.select
@var.select
@var.select
var.is_a?(Symbol);Fi[	@yiI"fpermission(var)
var.actions
@var.select
@var.select
@var.select
var.is_a?(Symbol)
permission(var);Fi[	I"constraints(var);FI"lambda;Fi[[	@	iI"Wvar.map!(&:to_sym)
var.each
lambda
constraints(var)
lambda
constraints(var)
lambda;Fi[	@	i I"Slambda
constraints(var)
lambda
constraints(var)
lambda
constraints(var)
lambda;Fi[	@	i"I"Vlambda
constraints(var)
lambda
constraints(var)
lambda
constraints(var)
protected;Fi[	I"respond_to;FI"private;Fi[[	I"8data//diaspora_proj/controllers/likes_controller.rb;TiI"Ærespond_to
target.likes.includes(:author => :profile)
@var.map(&:author)
respond_to
private
params[:post_id]
current_user.find_visible_shareable_by_id(Post, params[:post_id]);Fi[	I"9data//diaspora_proj/controllers/photos_controller.rb;Ti#I"ûcurrent_user.update_post(var, params[:photo])
flash.now
I18n.t("photos.update.notice")
respond_to
private
request.params[:qqfile].is_a?(String).!
var[:qqfile];Fi[	I";data//diaspora_proj/controllers/profiles_controller.rb;TiI"∑I18n.t("profiles.update.updated")
flash
I18n.t("profiles.update.failed")
respond_to
private
@var[:tag_string].nil?
(@var[:tag_string] == I18n.t("profiles.edit.your_tags_placeholder"));Fi[	I"@var.destroy;FI"
flash;Fi[[	I":data//diaspora_proj/controllers/aspects_controller.rb;TiI"Æ(params[:remote] == "true")
respond_to
current_user.aspects.where(:id => (params[:id])).first
@var.destroy
flash
I18n.t("aspects.destroy.success", :name => (@var.name))
flash;Fi[	I"Ldata//diaspora_proj/controllers/conversation_visibilities_controller.rb;TiI"¯before_filter(:authenticate_user!)
ConversationVisibility.where(:person_id => (current_user.person.id), :conversation_id => (params[:conversation_id])).first
@var.destroy
flash
I18n.t("conversations.destroy.success")
redirect_to(conversations_path);Fi[	I";data//diaspora_proj/controllers/services_controller.rb;Ti#I"≠t("services.failure.error")
redirect_to(services_url)
current_user.services.find(params[:id])
@var.destroy
flash
I18n.t("services.destroy.success")
redirect_to(services_url);Fi[	I"Cucumber.wants_to_quit;FI"	init;Fi[[	@ﬂiI"|init
@var.step_invocations(true).dup(var)
@var.dup(var)
Cucumber.wants_to_quit
init
@var.empty?
var.visit_comment(@var);Fi[	@‚iI"f@var.init
@var.each
(@var << var)
Cucumber.wants_to_quit
init
@var.empty?
var.visit_comment(@var);Fi[	I"6data//cucumber_prok/cucumber/ast/outline_table.rb;TiI"áinit
create_step_invocations_for_example_rows!(@var)
init
Cucumber.wants_to_quit
init
cells_rows.each_with_index
@var.accept_hook?(var);Fi[	I"var.instance_eval;FI""var.active_spec.instance_eval;Fi[[	@÷iI"{nostdout
require("cmd/cleanup")
TestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval;Fi[	@÷iI"ãvar.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval;Fi[	@÷i"I"åvar.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval
var.active_spec.instance_eval
nostdout
assert(var.installed?);Fi[	I"include(FeatureElement);FI"include(Names);Fi[[	@ﬂiI"ûrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
attr_reader(:feature_elements)
attach_steps(@var);Fi[	@ÂiI"órequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
attr_reader(:line)
StepCollection.new(var);Fi[	@ÍiI"àrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
Cucumber.wants_to_quit
each;Fi[	I""require("cucumber/ast/names");FI"include(FeatureElement);Fi[[	@ﬂiI"ãrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
attr_reader(:feature_elements);Fi[	@ÂiI"require("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
attr_reader(:line);Fi[	@ÍiI"Érequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names)
Cucumber.wants_to_quit;Fi[	@∫I"raise(KegUnspecifiedError);Fi[[	@îiI"àrequire("ostruct")
extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
Process.uid.zero?
File.stat(HOMEBREW_BREW_FILE).uid.zero?.!;Fi[	@ùiI"}require("keg")
require("formula")
extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
ARGV.force?.!
ARGV.kegs.each;Fi[	@†iI"Mextend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
ARGV.kegs.each;Fi[	I",require("cucumber/ast/feature_element");F@¡i[[	@ﬂi I"qrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names);Fi [	@Âi I"qrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names);Fi [	@Íi I"qrequire("cucumber/ast/feature_element")
require("cucumber/ast/names")
include(FeatureElement)
include(Names);Fi [	I"convert_sprite_name(var);FI"verify_map(var);Fi[[	I"Ddata//compass_proj/compass/sass_extensions/functions/sprites.rb;TiI"ôvar.extend(VariableReader)
Compass::SassExtensions::Sprites::SpriteMap.from_uri(var, self, var)
Sass::Script::Functions.declare(:sprite_map, [:glob], :var_kwargs => (true))
convert_sprite_name(var)
verify_map(var)
var.is_a?(Sass::Script::String)
raise(Sass::SyntaxError, "The second argument to sprite() must be a sprite name. See http://beta.compass-style.org/help/tutorials/spriting/ for more information.");Fi[	@·i%I"ÛSass::Script::String.new(var.file)
missing_image!(var, var)
Sass::Script::Functions.declare(:sprite_file, [:map, :sprite])
convert_sprite_name(var)
verify_map(var)
verify_sprite(var)
Sass::Script::Bool.new(var.image_for(var.value).parent.nil?);Fi[	@·i*I"˛verify_sprite(var)
Sass::Script::Bool.new(var.image_for(var.value).parent.nil?)
Sass::Script::Functions.declare(:sprite_does_not_have_parent, [:map, :sprite])
convert_sprite_name(var)
verify_map(var)
verify_sprite(var)
VALID_SELECTORS.include?(var.value);Fi[	I"require("keg");FI"extend(self);Fi[[	@¿iI"Brequire("formula")
require("keg")
extend(self)
outdated_brews;Fi[	I"%data//homebrew_proj/cmd/prune.rb;Ti I"Vrequire("keg")
extend(self)
Keg::PRUNEABLE_DIRECTORIES.each
var.sort.reverse_each;Fi [	@öiI"{require("extend/ENV")
require("hardware")
require("keg")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError);Fi[	I"require("blacklist");FI"extend(self);Fi[[	I"&data//homebrew_proj/cmd/create.rb;TiI"ûrequire("formula")
require("blacklist")
extend(self)
ARGV.include?("--macports")
exec_browser("http://www.macports.org/ports.php?by=name&substr=#{ARGV.next}");Fi[	@ëiI"Érequire("formula_installer")
require("hardware")
require("blacklist")
extend(self)
ARGV.named.empty?
raise(FormulaUnspecifiedError);Fi[	I"&data//homebrew_proj/cmd/search.rb;TiI"ûrequire("formula")
require("blacklist")
extend(self)
ARGV.include?("--macports")
exec_browser("http://www.macports.org/ports.php?by=name&substr=#{ARGV.next}");Fi[	I"which("git");FI"HOMEBREW_REPOSITORY.cd;Fi[[	@ÿi™I"î(var == "input")
(var == "true")
"    Suspicious Git newline settings found.\n\n    The detected Git newline settings can cause checkout problems:\n      core.autocrlf = #{autocrlf}\n      core.safecrlf = #{safecrlf}\n\n    If you are not routinely dealing with Windows-based projects,\n    consider removing these settings.\n".undent
which("git")
HOMEBREW_REPOSITORY.cd
which("git")
check_for_git_origin;Fi[	@ÿi«I"tHomebrew.missing_deps(Homebrew.installed_brews).each
(var.length > 0)
"    Some installed formula are missing dependencies.\n    You should `brew install` the missing dependencies:\n\n        brew install #{(s.to_a.sort * " ")}\n\n    Run `brew missing` for more details.\n".undent
which("git")
HOMEBREW_REPOSITORY.cd
(MacOS.version == :leopard)
ENV["GIT_SSL_NO_VERIFY"].!;Fi[	@ÿi⁄I"≥"    python is symlinked to python#{$1}\n    This will confuse build scripts and in general lead to subtle breakage.\n".undent
File.exist?((ENV["HOME"] + "/.pydistutils.cfg"))
"    A .pydistutils.cfg file was found in $HOME, which may cause Python\n    builds to fail. See:\n      http://bugs.python.org/issue6138\n      http://bugs.python.org/issue4655\n".undent
which("git")
HOMEBREW_REPOSITORY.cd
HOMEBREW_CELLAR.exist?
var.empty?.!;Fi[	I"Process.uid.zero?;FI".File.stat(HOMEBREW_BREW_FILE).uid.zero?.!;Fi[[	@ëiI"˘raise("Specify `--HEAD` in uppercase to build from trunk.")
ARGV.force?
ARGV.named.each
Process.uid.zero?
File.stat(HOMEBREW_BREW_FILE).uid.zero?.!
raise("Cowardly refusing to `sudo brew install'\n#{SUDO_BAD_ERRMSG}")
install_formulae(ARGV.formulae);Fi[	@îi	I"«extend(self)
ARGV.named.empty?
raise(KegUnspecifiedError)
Process.uid.zero?
File.stat(HOMEBREW_BREW_FILE).uid.zero?.!
raise("Cowardly refusing to `sudo brew link'\n#{SUDO_BAD_ERRMSG}")
OpenStruct.new;Fi[	I"'data//homebrew_proj/cmd/upgrade.rb;TiI"ørequire("cmd/install")
(self > 1)
extend(self)
Process.uid.zero?
File.stat(HOMEBREW_BREW_FILE).uid.zero?.!
abort("Cowardly refusing to `sudo brew upgrade'")
Homebrew.perform_preinstall_checks;Fi[	I"var.install;FI"var.caveats;Fi[[	@ëi/I"wperform_preinstall_checks
var.each
FormulaInstaller.new(var)
var.install
var.caveats
var.finish
ofail(var.message);Fi[	@i I"pvar.used_options.empty?
oh1("Upgrading #{f.name}")
var.unlink
var.install
var.caveats
var.finish
ofail(var);Fi[	@†i;I"üFormulaInstaller.new(var, var)
oh1("Installing #{f} dependency: #{Tty.green}#{dep}#{Tty.reset}")
var.unlink
var.install
var.caveats
var.finish
var.installed?.!;Fi[	I"var.caveats;FI"var.finish;Fi[[	@ëi0I"]var.each
FormulaInstaller.new(var)
var.install
var.caveats
var.finish
ofail(var.message);Fi[	@i!I"aoh1("Upgrading #{f.name}")
var.unlink
var.install
var.caveats
var.finish
ofail(var)
var.dump;Fi[	@†i<I"âoh1("Installing #{f} dependency: #{Tty.green}#{dep}#{Tty.reset}")
var.unlink
var.install
var.caveats
var.finish
var.installed?.!
var.link;Fi[	I"Array.new(*var);FI"@var.each(*var, &var);Fi[[	@¬iI"[include(Enumerable)
Array.new(*var)
@var.each(*var, &var)
var.is_a?(Compiler)
var.name;Fi[	@¬iI"|@var.any?
(@var << var)
include(Enumerable)
Array.new(*var)
@var.each(*var, &var)
var.is_a?(Compiler)
Compiler.new(var);Fi[	I"(data//homebrew_proj/dependencies.rb;Ti"I"†TeXInstalled.new(var)
raise("Unsupported special dependency #{spec}")
include(Enumerable)
Array.new(*var)
@var.each(*var, &var)
@var.include?(var)
(@var << var);Fi[	I"ARGV.debug?;FI"ohai(var, var.backtrace);Fi[[	@†iwI"˜onoe("The `brew link` step did not complete successfully")
puts("The formula built, but is not symlinked into #{HOMEBREW_PREFIX}")
puts("You can try again using `brew link #{f.name}'")
ARGV.debug?
ohai(var, var.backtrace)
ignore_interrupts
f.plist;Fi[	@†i~I"’onoe("Failed to fix install names")
puts("The formula built, but you may encounter issues using it or linking other")
puts("formula against it.")
ARGV.debug?
ohai(var, var.backtrace)
ARGV.verbose?
ohai("Cleaning");Fi[	@†iåI"›Cleaner.new(f)
opoo("The cleaning step did not complete successfully")
puts("Still, the installation was successful, so we will link it into your prefix")
ARGV.debug?
ohai(var, var.backtrace)
f.fetch
var.local_bottle_path;Fi[	I"(var - 1);FI"(var == 1);Fi[[	@Ài-I"yvar.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?;Fi[	@÷i-I"yvar.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?;Fi[	@·i*I"yvar.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?;Fi[	I"locate("clang");FI"locate("clang");Fi[[	@äi'I"rlocate("llvm-gcc")
locate("llvm-gcc")
$1.to_i
locate("clang")
locate("clang")
locate("clang")
locate("clang");Fi[	@äi(I"glocate("llvm-gcc")
$1.to_i
locate("clang")
locate("clang")
locate("clang")
locate("clang")
$1.to_i;Fi[	@äi)I"j$1.to_i
locate("clang")
locate("clang")
locate("clang")
locate("clang")
$1.to_i
["port", "fink"].each;Fi[	@¸I"assert_type(var, :Number);Fi[[	I"Adata//compass_proj/compass/sass_extensions/functions/math.rb;TiI"¸Sass::Script::Functions.declare(:tan, [:number])
Sass::Script::Number.new(Math::E)
Sass::Script::Functions.declare(:e, [])
assert_type(var, :Number)
assert_type(var, :Number)
var.unitless?
raise(Sass::SyntaxError, "base to logarithm must be unitless.");Fi[	@TiI"numeric_transformation(var)
Sass::Script::Functions.declare(:sqrt, [:number])
Sass::Script::Functions.declare(:square_root, [:number])
assert_type(var, :Number)
assert_type(var, :Number)
var.unitless?
raise(Sass::SyntaxError, "exponent to pow must be unitless.");Fi[	@·i5I"
var.generate
generated_image_url(Sass::Script::String.new("#{map.path}-s#{map.uniqueness_hash}.png"))
Sass::Script::Functions.declare(:sprite_url, [:map])
assert_type(var, :Number)
assert_type(var, :Number)
convert_sprite_name(var)
verify_map(var, "sprite-position");Fi[	I"var.is_a?(SystemExit);FI"raise(var);Fi[[	I"6data//compass_proj/compass/exec/sub_command_ui.rb;Ti	I"≠require("compass/exec/project_options_parser")
attr_accessor(:args)
perform!
var.is_a?(SystemExit)
raise(var)
var.is_a?(::Compass::Error)
var.is_a?(OptionParser::ParseError);Fi[	I"1data//compass_proj/compass/exec/switch_ui.rb;TiI"ñattr_accessor(:args, :options, :opts)
parse!
perform!
var.is_a?(SystemExit)
raise(var)
var.is_a?(::Compass::Error)
var.is_a?(OptionParser::ParseError);Fi[	@ÑiI"{require("pp")
parse
@var[:trace]
var.is_a?(SystemExit)
raise(var)
(var.class == RuntimeError)
$stderr.print("#{e.class}: ");Fi[	I"var[1];FI"var[2];Fi[[	@
iPI"xvar.pos
var.scan(/.*?-\*-\s*/n)
var.scan(/([^\s'":;]+)\s*:\s*("(?:\\.|[^"])*"|[^"\s;]+?)[\s;]*-\*-/n)
var[1]
var[2];Fi[	I">data//paperclip_proj/paperclip/geometry_parser_factory.rb;Ti	I"ïGeometry.new(:height => (@var), :width => (@var), :modifier => (@var), :orientation => (@var))
private
@var.match(FORMAT)
var[1]
var[2]
var[3]
var[4];Fi[	@iI"Array.===(var).&((var.length == 3))
::Spec.warn("\n*****************************************************************\nDEPRECATION WARNING: you are using deprecated behaviour that will\nbe removed from a future version of RSpec.\n\n* Support for matchers that return arrays from failure message\nmethods is deprecated.\n* Instead, the matcher should return a string, and expose methods\nfor the expected() and actual() values.\n*****************************************************************\n")
var[0]
var[1]
var[2]
differ.nil?
var.nil?;Fi[	@0I"var.instance_eval;Fi[[	@÷iI"|require("cleaner")
nostdout
require("cmd/cleanup")
TestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new;Fi[	@÷iI"ÜTestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new;Fi[	@÷i!I"ÇTestBall.new
var.instance_eval
var.active_spec.instance_eval
TestBall.new
var.instance_eval
var.active_spec.instance_eval
nostdout;Fi[	I"File.directory?(var.first);FI"var.options;Fi[[	@HiI"vparse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.empty?;Fi[	@]iI"wparse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.options;Fi[	@ii6I"vparse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift
var.empty?;Fi[	@1I"good_checksum(var);Fi[[	@Ÿi
I"ôassert_nothing_raised
assert_raises(ChecksumMismatchError)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval;Fi[	@ŸiI"âvar.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval;Fi[	@ŸiI"âvar.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval;Fi[	@1I"bad_checksum(var);Fi[[	@ŸiI"âvar.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval;Fi[	@ŸiI"âvar.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var)
TestBall.new
var.stable.instance_eval;Fi[	@ŸiI"hvar.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var);Fi[	I"good_checksum(var);FI"TestBall.new;Fi[[	@ŸiI"ïassert_raises(ChecksumMismatchError)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var);Fi[	@ŸiI"Çbad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var);Fi[	@ŸiI"Çbad_checksum(var)
TestBall.new
var.stable.instance_eval
good_checksum(var)
TestBall.new
var.stable.instance_eval
bad_checksum(var);Fi[	@#I"&assert(var.fails_with?(:clang).!);Fi[[	@‹i
I"Ù["HOMEBREW_USE_CLANG", "HOMEBREW_USE_LLVM", "HOMEBREW_USE_GCC"].each
ENV.send(MacOS.default_compiler)
TestLLVMFailure.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang).!)
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc).!);Fi[	@‹iI"0var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler)
TestNoCompilerFailures.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang).!)
assert(var.fails_with?(:llvm).!)
assert(case MacOS.gcc_42_build_version; when nil then; var.fails_with?(:gcc); else; var.fails_with?(:gcc).!; end);Fi[	@‹i&I"–var.select_compiler
assert_equal(:llvm, ENV.compiler)
TestMoreMixedCompilerFailures.new
CompilerSelector.new(var)
assert(var.fails_with?(:clang).!)
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc));Fi[	I"(var.size > 0);F@{i[[	@HiI"vvar.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift;Fi[	@]iI"vvar.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift;Fi[	@ii5I"vvar.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options
var.shift;Fi[	I"var.select_compiler;FI"7assert_equal(MacOS.default_compiler, ENV.compiler);Fi[[	@‹iI"ÿassert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc))
var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler)
TestNoCompilerFailures.new
CompilerSelector.new(var);Fi[	@‹iI"3assert(var.fails_with?(:clang).!)
assert(var.fails_with?(:llvm).!)
assert(case MacOS.gcc_42_build_version; when nil then; var.fails_with?(:gcc); else; var.fails_with?(:gcc).!; end)
var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler)
TestMixedCompilerFailures.new
CompilerSelector.new(var);Fi[	@‹i8I"ßassert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm).!)
assert(var.fails_with?(:gcc).!)
var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler);Fi[	I""assert(var.fails_with?(:gcc));FI"var.select_compiler;Fi[[	@‹iI"ÿCompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc))
var.select_compiler
assert_equal(MacOS.default_compiler, ENV.compiler)
TestNoCompilerFailures.new;Fi[	@‹i"I"–CompilerSelector.new(var)
assert(var.fails_with?(:clang))
assert(var.fails_with?(:llvm).!)
assert(var.fails_with?(:gcc))
var.select_compiler
assert_equal(:llvm, ENV.compiler)
TestMoreMixedCompilerFailures.new;Fi[	@‹i)I"’CompilerSelector.new(var)
assert(var.fails_with?(:clang).!)
assert(var.fails_with?(:llvm))
assert(var.fails_with?(:gcc))
var.select_compiler
assert_equal(:clang, ENV.compiler)
TestEvenMoreMixedCompilerFailures.new;Fi[	I""assert_nil(var.head.checksum);FI"Bassert_equal("https://github.com/mxcl/homebrew.git", var.url);Fi[[	@ﬂiI"4assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader);Fi[	@ﬂiÜI"4assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader);Fi[	@ﬂiíI"4assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader);Fi[	I"*Sass::Plugin.options[:cache_location];FI"+File.join(working_path, ".sass-cache");Fi[[	@HiI"7var.clean!
Compass::SpriteImporter.find_all_sprite_map_files(Compass.configuration.generated_images_path).each
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser);Fi[	@ii*I"ˆoptions[:sass_files]
options[:sass_files].map
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var)
var.extend(Compass::Exec::GlobalOptionsParser);Fi[	I"+data//compass_proj/compass/compiler.rb;TiI"˝Compass.configuration.environment
Sass::Plugin::StalenessChecker.new(sass_options)
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
var.fetch(:exclude_partials, true)
self.options[:sass_files];Fi[	@≈
I""assert_nil(var.head.checksum);Fi[[	@ﬂi~I"assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy);Fi[	@ﬂiÖI"assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy);Fi[	@ﬂiëI"assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy);Fi[	I"%Compass.configuration.cache_path;F@—i[[	@HiI"new_compiler_instance
var.clean!
Compass::SpriteImporter.find_all_sprite_map_files(Compass.configuration.generated_images_path).each
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var);Fi[	@ii)I"[Compass::Compiler.new(working_path, Compass.configuration.sass_path, Compass.configuration.css_path, @var.merge(:cache_store => (@var)).merge(var))
options[:sass_files]
options[:sass_files].map
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
Compass::Exec::CommandOptionParser.new(var);Fi[	@ŸiI"ˇself.sass_options[:compass]
Compass.configuration.environment
Sass::Plugin::StalenessChecker.new(sass_options)
Compass.configuration.cache_path
Sass::Plugin.options[:cache_location]
File.join(working_path, ".sass-cache")
var.fetch(:exclude_partials, true);Fi[	I"%assert_project_directory_exists!;FI"new_compiler_instance;Fi[[	@HiI"˚require("compass/commands/project_base")
require("compass/compiler")
register(:clean)
assert_project_directory_exists!
new_compiler_instance
var.clean!
Compass::SpriteImporter.find_all_sprite_map_files(Compass.configuration.generated_images_path).each;Fi[	@]iI"&require("compass/commands/project_base")
require("compass/commands/update_project")
register(:structure)
assert_project_directory_exists!
new_compiler_instance
(options[:sass_files] or sorted_sass_files).each
puts((((((var > 0) ? ("|  ") : ("   ")) * var) + "+- ") + Compass.deprojectize(var)));Fi[	@iiI"¿var.on("--no-debug-info", "Turns off sass's debuging information")
register(:compile)
dry_run?
assert_project_directory_exists!
new_compiler_instance
check_for_sass_files!(var)
var.new_config?;Fi[	@Æ
I"3assert_instance_of(HeadSoftwareSpec, var.head);Fi[[	@ﬂi}I"5assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head);Fi[	@ﬂiâI"5assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head);Fi[	@ﬂiïI"7assert_nil(var.head.checksum)
assert_equal("https://github.com/mxcl/homebrew.git", var.url)
assert_equal(GitDownloadStrategy, var.download_strategy)
assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
ExplicitStrategySpecTestBall.new
assert_not_nil(var.stable);Fi[	I"assert_nil(var.bottle);FI"assert_nil(var.devel);Fi[[	@ﬂi{I"«HeadOnlySpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version);Fi[	@ﬂiÇI"œIncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version);Fi[	@ﬂiéI"œIncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version);Fi[	I"assert_not_nil(var.head);FI"assert_nil(var.stable);Fi[[	@ﬂiyI"™AncientBottleSpecTestBall.new
assert_nil(var.bottle)
HeadOnlySpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel);Fi[	@ﬂiÄI"‰assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel);Fi[	@ﬂiåI"‰assert_instance_of(GitDownloadStrategy, var.downloader)
assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel);Fi[	I"assert_nil(var.stable);FI"assert_nil(var.bottle);Fi[[	@ﬂizI"¥assert_nil(var.bottle)
HeadOnlySpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec);Fi[	@ﬂiÅI"‘assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec);Fi[	@ﬂiçI"‘assert_instance_of(HeadSoftwareSpec, var.head)
IncompleteStableSpecTestBall.new
assert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec);Fi[	I"assert_nil(var.devel);FI",assert_equal(var.head, var.active_spec);Fi[[	@ﬂi|I"Ãassert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum);Fi[	@ﬂiÉI"Ãassert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum);Fi[	@ﬂièI"Ãassert_not_nil(var.head)
assert_nil(var.stable)
assert_nil(var.bottle)
assert_nil(var.devel)
assert_equal(var.head, var.active_spec)
assert_version_equal("HEAD", var.version)
assert_nil(var.head.checksum);Fi[	I"shutup;FI"shutup;Fi[[	@ËiI"drequire("testing_env")
require("test/testball")
File.open(var, "r")
shutup
shutup
shutup
shutup;Fi[	@Ëi	I"Mrequire("test/testball")
File.open(var, "r")
shutup
shutup
shutup
shutup;Fi[	@Ëi
I"4File.open(var, "r")
shutup
shutup
shutup
shutup;Fi[	I"self.respond_to?(:options);FI"self.options;Fi[[	I"*data//compass_proj/compass/actions.rb;TiI"~attr_writer(:logger)
::Compass::Logger.new
self.respond_to?(:options)
self.options
File.new(var, "rb").read
File.new(var).read;Fi[	@7iI"ôFile.new(var, "rb").read
File.new(var).read
write_file(var, var, var, var)
self.respond_to?(:options)
self.options
File.exists?(var)
File.directory?(var);Fi[	@7iI"ülog_action(:directory, separate("#{basename(dir)}/"), var)
var[:dry_run]
FileUtils.mkdir_p(var)
self.respond_to?(:options)
self.options
var[:dry_run]
var[:erb];Fi[	@ñ
I"8assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var);Fi[[	@ô
iI"ırequire("testing_env")
require("extend/string")
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def");Fi[	@ô
iI"var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def");Fi[	@ô
iI"var.change_make_var!("FLAG", "\\1 def")
assert_equal("OTHER=def\nFLAG=abc def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.remove_make_var!("FLAG");Fi[	@>I")var.extend(StringInreplaceExtension);Fi[[	@ô
i	I"require("extend/string")
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var);Fi[	@ô
iI")assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("FLAG=def\nmv file_a file_b", var);Fi[	@ô
iI""assert_equal("OTHER=def\nFLAG=abc def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.change_make_var!("FLAG", "def")
assert_equal("OTHER=def\nFLAG=def\nFLAG2=abc", var)
var.extend(StringInreplaceExtension)
var.remove_make_var!("FLAG")
assert_equal("OTHER=def\nFLAG2 = def", var);Fi[	I"assert(var.universal?);FI"assert(var.i386?.!);Fi[[	@ziI"ærequire("testing_env")
`/usr/bin/file -h '#{var}'`.chomp
Pathname.new("#{TEST_FOLDER}/mach/fat.dylib")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	@zi)I"Èassert(var.mach_o_bundle?.!)
assert_match(/Mach-O 64-bit dynamically linked shared library/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/a.out")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	@zi4I"⁄assert(var.mach_o_bundle?.!)
assert_match(/Mach-O (64-bit )?executable/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/fat.bundle")
assert(var.universal?)
assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!);Fi[	I"var[:channel][:host];FI"2logger.info("[#{host} :: #{stream}] #{text}");Fi[[	I"?data//capistrano_proj/capistrano/recipes/deploy/scm/git.rb;Ti5I"Ùyield(var).to_s.strip
raise("Unable to resolve revision for '#{revision}' on repository '#{repository}'.")
variable(:git)
var[:channel][:host]
logger.info("[#{host} :: #{stream}] #{text}")
variable(:scm_password)
Capistrano::CLI.password_prompt;Fi[	I"Edata//capistrano_proj/capistrano/recipes/deploy/scm/mercurial.rb;TiI"2scm(:diff, "--rev #{from}", (var ? ("--rev #{to}") : (nil)))
scm(:log, verbose, ("--rev #{from}" + (var ? (":#{to}") : (""))))
scm(:log, verbose, "-r #{changeset}", "--template \"{node|short}\"")
var[:channel][:host]
logger.info("[#{host} :: #{stream}] #{text}")
variable(:scm_username)
variable(:scm_user);Fi[	I"Fdata//capistrano_proj/capistrano/recipes/deploy/scm/subversion.rb;TiI"hraise("tried to run `#{command}' and got unexpected result #{result.inspect}")
[(var["Last Changed Rev"] or 0).to_i, (var["Revision"] or 0).to_i].max
(var.to_i + 1)
var[:channel][:host]
logger.info("[#{host} :: #{stream}] #{text}")
raise(Capistrano::Error, "subversion can't update because directory '#{$1}' was replaced. Please add it to svn:ignore.")
private;Fi[	I"(var.size > 1);FI"concat(var);Fi[[	@,	iI"require("mongoid/relations/embedded/batchable")
include(Batchable)
var.flatten
(var.size > 1)
concat(var)
var.first
append(var);Fi[	@2	iI"¢delegate(:count, :to => :criteria)
delegate(:first, :in_memory, :last, :reset, :uniq, :to => :target)
var.flatten
(var.size > 1)
concat(var)
var.first
append(var);Fi[	I"Hdata//mongoid_proj/lib/mongoid/relations/referenced/many_to_many.rb;TiI"Avar.flatten
(var.size > 1)
concat(var)
var.first
append(var);Fi[	@
I"(var.size > 0);Fi[[	@HiI"option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options;Fi[	@]iI"option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options;Fi[	@ii4I"option_parser(var)
var.parse!
parse_arguments!(var, var)
var.options
(var.size > 0)
File.directory?(var.first)
var.options;Fi[	@xI"assert(var.dylib?);Fi[[	@ziI"®assert(var.i386?.!)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@ziI"¶assert(var.i386?)
assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	@zi"I"¶assert(var.i386?.!)
assert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!);Fi[	I"(var < 10);FI"(var / 2);Fi[[	@#iI"öfield_width
((@var.to_f - ((font_size * 2) * top_font)) / (get_y_labels.max - get_y_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var)
(stack == :side);Fi[	@&iI"ùfield_height
((@var.to_f - ((font_size * 2) * right_font)) / (get_x_labels.max - get_x_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var)
(stack == :side);Fi[	@1i!I"dfield_height
field_width
bar_gap
(var < 10)
(var / 2)
(var - var)
((var / 2) + (font_size / 2));Fi[	I"assert(var.dylib?);F@i[[	@ziI"µassert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert((var.arch == :universal));Fi[	@ziI"±assert(var.x86_64?.!)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!);Fi[	@zi#I"Øassert(var.x86_64?)
assert(var.ppc7400?.!)
assert(var.ppc64?.!)
assert(var.dylib?)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?.!);Fi[	I"(@var == var);FI"(@var == var);Fi[[	I"Ddata//bundler_proj/bundler/vendor/thor/core_ext/ordered_hash.rb;TiI"W@var[var]
var.prev
var.next
(@var == var)
(@var == var)
var.value
@var.delete(var);Fi[	@ÏiƒI"fvar.gsub!("U", "")
(var == "IB")
(var == 0)
(@var == var)
(@var == var)
(@var == var)
(var + var);Fi[	@Ïi≈I"f(var == "IB")
(var == 0)
(@var == var)
(@var == var)
(@var == var)
(var + var)
@var.has_key?(var);Fi[	I"var[0];FI"var[1];Fi[[	I"=data//cucumber_prok/cucumber/wire_support/wire_packet.rb;TiI"UJSON.parse(var.strip)
var[0]
var[1]
new(var, var)
attr_reader(:message, :params);Fi[	@ZivI"r(pointer_id == var.pointer_id)
var.first.is_a?(Hash)
var.shift
var[0]
var[1]
var[:encoding]
document.encoding;Fi[	@i
I"¢raise(ArgumentError, ("Failure message is nil. Does your matcher define the " + "appropriate failure_message_for_* method to return a string?"))
Array.===(var).&((var.length == 3))
::Spec.warn("\n*****************************************************************\nDEPRECATION WARNING: you are using deprecated behaviour that will\nbe removed from a future version of RSpec.\n\n* Support for matchers that return arrays from failure message\nmethods is deprecated.\n* Instead, the matcher should return a string, and expose methods\nfor the expected() and actual() values.\n*****************************************************************\n")
var[0]
var[1]
var[2]
differ.nil?;Fi[	@I"assert(var.mach_o_bundle?);Fi[[	@zi;I"Áassert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O (64-bit )?bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/i386.bundle");Fi[	@ziFI"ﬂassert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/mach/x86_64.bundle");Fi[	@ziQI"Ìassert(var.ppc64?.!)
assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert(var.mach_o_bundle?)
assert_match(/Mach-O 64-bit bundle/, file(var))
Pathname.new("#{TEST_FOLDER}/tarballs/testball-0.1.tbz");Fi[	I"&(platform == Gem::Platform::RUBY);FI"platform.nil?;Fi[[	I"5data//bundler_proj/bundler/lazy_specification.rb;Ti
I"∆include(MatchPlatform)
attr_reader(:name, :version, :dependencies, :platform)
attr_accessor(:source)
(platform == Gem::Platform::RUBY)
platform.nil?
(identifier == var.identifier)
(@var == var.name);Fi[	@∫iI"Î(identifier == var.identifier)
(@var == var.name)
var.requirement.satisfied_by?(Gem::Version.new(@var))
(platform == Gem::Platform::RUBY)
platform.nil?
source.specs.search(Gem::Dependency.new(name, version)).last
@var.respond_to?(*var);Fi[	I"7data//bundler_proj/bundler/remote_specification.rb;TiI"πattr_reader(:name, :version, :platform)
attr_accessor(:source)
_remote_specification.platform
(platform == Gem::Platform::RUBY)
platform.nil?
private
@var.fetch_spec([@var, @var, @var]);Fi[	I"transferred_files_for(var);FI"#Logger.message(var.join("\n"));Fi[[	@õiI"—remote_path_for(@var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
connection.file_delete(var)
File.join(Config.cache_path, (api_key + api_secret));Fi[	@°iI"≤FileUtils.mkdir_p(var)
files_to_transfer_for(@var)
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
FileUtils.rm_r(var)
(self == @var.storages.last);Fi[	@≠iI"Öremote_path_for(@var)
connection
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"))
connection
var.empty?;Fi[	I" assert_equal([], var.archs);FI"!assert((var.arch == :dunno));Fi[[	@zivI"◊assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?)
assert_equal([], var.archs)
assert((var.arch == :dunno))
assert_match(/text executable/, file(var))
(HOMEBREW_PREFIX / "foo_script");Fi[	@zi~I"◊assert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?)
assert_equal([], var.archs)
assert((var.arch == :dunno))
assert_match(/text executable/, file(var))
(HOMEBREW_PREFIX / "foo_script");Fi[	@ziãI"ªassert(var.dylib?.!)
assert(var.mach_o_executable?.!)
assert(var.text_executable?.!)
assert_equal([], var.archs)
assert((var.arch == :dunno))
assert_no_match(/text executable/, file(var));Fi[	I"(assert_equal(1, var.patches.length);FI"var.patches[0];Fi[[	@ÂiI"attr_reader(:patch_p)
attr_reader(:patch_filename)
Patches.new("http://example.com/patch.diff")
assert_equal(1, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(["http://example.com/patch1.diff", "http://example.com/patch2.diff"]);Fi[	@ÂiI"Ávar.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(:p0 => "http://example.com/patch.diff")
assert_equal(1, var.patches.length)
var.patches[0]
assert_equal(:p0, var.patch_p)
Patches.new(:p1 => "http://example.com/patch.diff");Fi[	@ÂiI"ƒvar.patches[0]
assert_equal(:p0, var.patch_p)
Patches.new(:p1 => "http://example.com/patch.diff")
assert_equal(1, var.patches.length)
var.patches[0]
assert_equal(:p1, var.patch_p)
Patches.new(var);Fi[	I"attr_accessor(:path);FI"block_given?;Fi[[	@§iI"ãBackup::Dependency.load("fog")
attr_accessor(:storage_token, :storage_secret)
attr_accessor(:path)
block_given?
instance_eval(&var)
private;Fi[	@≠i	I"¨Backup::Dependency.load("net-scp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "");Fi[	@∞i	I"≠Backup::Dependency.load("net-sftp")
attr_accessor(:username, :password)
attr_accessor(:ip, :port)
attr_accessor(:path)
block_given?
instance_eval(&var)
path.sub(/^\~\//, "");Fi[	@ƒI"@var.each_pair;Fi[[	@Ài|I"†var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0");Fi[	@÷iÑI"†var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0");Fi[	@·i~I"†var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0");Fi[	I"(var + 2);FI"((var * @var) / 1000);Fi[[	@Ài!I"î(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var);Fi[	@÷i!I"ç(var + 500)
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
SJISMultiCell(var, var, var, var, var, var, var);Fi[	@·iI"î(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var);Fi[	I"(var > 0);FI"(var[(var - 1)] == "\n");Fi[[	@Ài+I"(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1);Fi[	@÷i+I"(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1);Fi[	@·i(I"(((var - (2 * @var)) * 1000) / @var)
var.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1);Fi[	I"remote_path_for(@var);FI"connection;Fi[[	@ûiI"πNet::FTP.send(:remove_const, :FTP_PORT)
Net::FTP.send(:const_set, :FTP_PORT, port)
Net::FTP.open(ip, username, password)
remote_path_for(@var)
connection
remote_path_for(var)
connection;Fi[	@≠iI"µpath.sub(/^\~\//, "")
private
Net::SSH.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var)
connection
remote_path_for(var)
transferred_files_for(var);Fi[	@∞iI"¶path.sub(/^\~\//, "")
private
Net::SFTP.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var)
connection
remote_path_for(var)
connection;Fi[	I"raise(Utf8Error);FI"var.putc(var);Fi[[	@˚iÎI"äraise(Utf8Error)
(var < Utag3)
((var.&(Umask2) << 6).|(var.&(Umaskx)) <= Uchar1max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
(var < 3);Fi[	@˚i˜I"ö(var < Utag4)
(var.&(Umask3) << 12).|((var.&(Umaskx) << 6)).|(var.&(Umaskx))
(var <= Uchar2max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var);Fi[	@˚iI"≥(var < Utag5)
(var.&(Umask4) << 18).|((var.&(Umaskx) << 12)).|((var.&(Umaskx) << 6)).|(var.&(Umaskx))
(var <= Uchar3max)
raise(Utf8Error)
var.putc(var)
var.putc(var)
var.putc(var);Fi[	I"load_defaults!;FI"block_given?;Fi[[	@iI"nattr_accessor(:command)
attr_accessor(:extension)
load_defaults!
block_given?
instance_eval(&var)
set_cmd;Fi[	@}iI"Xattr_accessor(:best)
attr_accessor(:fast)
load_defaults!
block_given?
instance_eval(&var)
Backup::Logger.warn(((("[DEPRECATION WARNING]\n" + "  Compressor::Lzma is being deprecated as of backup v.3.0.24\n") + "  and will soon be removed. Please see the Compressors wiki page at\n") + "  https://github.com/meskyanichi/backup/wiki/Compressors"));Fi[	@ÄiI"uattr_accessor(:best)
attr_accessor(:fast)
attr_accessor(:processors)
load_defaults!
block_given?
instance_eval(&var)
Backup::Logger.warn(((("[DEPRECATION WARNING]\n" + "  Compressor::Pbzip2 is being deprecated as of backup v.3.0.24\n") + "  and will soon be removed. Please see the Compressors wiki page at\n") + "  https://github.com/meskyanichi/backup/wiki/Compressors"));Fi[	I"(var < Utagx);FI"(Utag2 <= var);Fi[[	@˚iÊI"n(var < 2)
raise(Utf8Error)
var[(var + 1)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag3);Fi[	@˚iÒI"n(var < 3)
raise(Utf8Error)
var[(var + 2)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag4);Fi[	@˚i˛I"n(var < 4)
raise(Utf8Error)
var[(var + 3)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag5);Fi[	I"(Utag2 <= var);FI"raise(Utf8Error);Fi[[	@˚iÁI"îraise(Utf8Error)
var[(var + 1)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag3)
((var.&(Umask2) << 6).|(var.&(Umaskx)) <= Uchar1max);Fi[	@˚iÚI"ûraise(Utf8Error)
var[(var + 2)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag4)
(var.&(Umask3) << 12).|((var.&(Umaskx) << 6)).|(var.&(Umaskx));Fi[	@˚iˇI"∑raise(Utf8Error)
var[(var + 3)].ord
(var < Utagx)
(Utag2 <= var)
raise(Utf8Error)
(var < Utag5)
(var.&(Umask4) << 18).|((var.&(Umaskx) << 12)).|((var.&(Umaskx) << 6)).|(var.&(Umaskx));Fi[	I"(@var > 0);FI"out("0 Tw");Fi[[	@Ïi I"V(var < var)
var[var]
(var == "\n"[0])
(@var > 0)
out("0 Tw")
(var == 0)
(var - 1);Fi[	@Ïi/I"É(var == -1)
(var == var)
(var + 1)
(@var > 0)
out("0 Tw")
self.Cell(var, var, var[(var..(var - 1))], var, 2, var, var)
(var == "J");Fi[	@Ïi;I"Z(var + 1)
(var == 2)
(var + 1)
(@var > 0)
out("0 Tw")
var.!=(0)
var.index("B").nil?.!;Fi[	I"	log!;FI"private;Fi[[	@ÛiI"Ëinclude(Backup::CLI::Helpers)
include(Backup::Configuration::Helpers)
log!
private
self.class.to_s.sub("Backup::", "")
Logger.message((("Using #{compressor_name} for compression.\n" + "  Command: '#{@cmd}'\n") + "  Ext: '#{@ext}'"));Fi[	@ˆi	I"ºinclude(Backup::Configuration::Helpers)
load_defaults!
prepare!
log!
private
File.join(Config.tmp_path, @var.trigger, "databases", self.class.name.split("::").last)
FileUtils.mkdir_p(@var);Fi[	@ÉiI"kattr_accessor(:salt)
block_given?
instance_eval(&var)
log!
private
(var << "-base64")
(var << "-salt");Fi[	I"1class_option(:timestamps, :type => :boolean);FI"aclass_option(:parent, :type => :string, :desc => "The parent class for the generated model");Fi[[	I"Tdata//activerecord_proj/rails/generators/active_record/model/model_generator.rb;Ti	I"Ãargument(:attributes, :type => :array, :default => ([]), :banner => "field[:type][:index] field[:type][:index]")
check_class_collision
class_option(:migration, :type => :boolean)
class_option(:timestamps, :type => :boolean)
class_option(:parent, :type => :string, :desc => "The parent class for the generated model")
class_option(:indexes, :type => :boolean, :default => (true), :desc => "Add indexes for references and belongs_to columns")
options[:migration];Fi[	I"Mdata//mongoid_proj/lib/rails/generators/mongoid/model/model_generator.rb;Ti	I"Èdesc("Creates a Mongoid model")
argument(:attributes, :type => :array, :default => ([]), :banner => "field:type field:type")
check_class_collision
class_option(:timestamps, :type => :boolean)
class_option(:parent, :type => :string, :desc => "The parent class for the generated model")
class_option(:versioning, :type => :boolean, :default => (false), :desc => "Enable mongoid versioning")
class_option(:collection, :type => :string, :desc => "The collection for storing model's documents");Fi[	I"Ydata//redmine_proj/generators/redmine_plugin_model/redmine_plugin_model_generator.rb;Ti	I"argument(:model, :type => :string)
argument(:attributes, :type => :array, :default => ([]), :banner => "field[:type][:index] field[:type][:index]")
class_option(:migration, :type => :boolean)
class_option(:timestamps, :type => :boolean)
class_option(:parent, :type => :string, :desc => "The parent class for the generated model")
class_option(:indexes, :type => :boolean, :default => (true), :desc => "Add indexes for references and belongs_to columns")
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name);Fi[	I"base.persisted?;FI"_binding?.!;Fi[[	@,	iFI"åbind_one(var)
target.respond_to?(var)
klass.send(:with_scope, criteria)
base.persisted?
_binding?.!
_unscoped.each_with_index
metadata.order;Fi[	@/	iI"~target.save
private
Bindings::Embedded::One.new(base, target, metadata)
base.persisted?
_binding?.!
_building?.!
_assigning?.!;Fi[	@A	iI"∞One.new(base, var, metadata)
private
Bindings::Referenced::One.new(base, target, metadata)
base.persisted?
_binding?.!
_building?.!
Builders::Referenced::One.new(var, var, var);Fi[	I"query?;FI"object;Fi[[	I"Gdata//mongoid_proj/lib/mongoid/relations/builders/referenced/in.rb;Ti I"1query?
object
var.constantize
metadata.klass;Fi [	I"Idata//mongoid_proj/lib/mongoid/relations/builders/referenced/many.rb;Ti I"hquery?
object
object.is_a?(Array)
metadata.criteria(Conversions.flag(object, metadata), base.class);Fi [	I"Hdata//mongoid_proj/lib/mongoid/relations/builders/referenced/one.rb;Ti I"tquery?
object
base.new_record?
metadata.criteria(Conversions.flag(object, metadata), base.class).from_map_or_db;Fi [	I"Thread.current;FI"Thread.current;Fi[[	I"/data//mongoid_proj/lib/mongoid/threaded.rb;Ti	I"ãextend(self)
stack(var).push(true)
Thread.current["[mongoid]:db-override"]
Thread.current
Thread.current
stack(var).empty?.!
stack(var).pop;Fi[	@ui#I"æThread.current["[mongoid][selections]"]
var.delete(var).!.!
Thread.current["[mongoid]:session-override"]
Thread.current
Thread.current
Thread.current["[mongoid]:timeless"].!.!
Thread.current;Fi[	@ui*I"îtimeless.!
autosaves_for(var.class).include?(var.id)
validations_for(var.class).include?(var.id)
Thread.current
Thread.current
autosaves
validations;Fi[	I"var.send(var.name);FI"relation;Fi[[	@	iI"wattr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.cascades.empty?
relation.clear;Fi[	@	iI"{attr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.is_a?(Enumerable)
relation.entries;Fi[	@	iI"`attr_accessor(:document, :relation, :metadata)
var.send(var.name)
relation
relation.nullify;Fi[	I"alter_table(var);FI"alter_table(var);Fi[[	I"Qdata//activerecord_proj/active_record/connection_adapters/sqlite3_adapter.rb;TiWI"êvar.to_sym.!=(:primary_key)
supports_add_column?
valid_alter_table_options(var, var)
alter_table(var)
alter_table(var)
alter_table(var)
var.nil?;Fi[	@äiXI"supports_add_column?
valid_alter_table_options(var, var)
alter_table(var)
alter_table(var)
alter_table(var)
var.nil?
exec_query("UPDATE #{quote_table_name(table_name)} SET #{quote_column_name(column_name)}=#{quote(default)} WHERE #{quote_column_name(column_name)} IS NULL");Fi[	@äi\I"&alter_table(var)
var.nil?
exec_query("UPDATE #{quote_table_name(table_name)} SET #{quote_column_name(column_name)}=#{quote(default)} WHERE #{quote_column_name(column_name)} IS NULL")
alter_table(var)
alter_table(var)
columns(var).detect
alter_table(var, :rename => ({ var.to_s => (var.to_s) }));Fi[	I"init(var, var, var);FI"unbind_one;Fi[[	@9	i I"<init(var, var, var)
unbind_one
persistable?
base.delete;Fi [	@>	iI"Minclude(Evolvable)
init(var, var, var)
unbind_one
target.save
unbind_one;Fi[	@A	i I":init(var, var, var)
unbind_one
target.save
unbind_one;Fi [	I"@var.key?(var);FI"@var[var];Fi[[	@!iI"ßattr_reader(:primary_keys, :tables, :version)
attr_accessor(:connection)
prepare_default_proc
@var.key?(var)
@var[var]
connection.table_exists?(var)
table_exists?(var);Fi[	@™iI"Mvar.map
all.each
key_for(var)
@var.key?(var)
@var[var]
ENV[var]
ENV[var];Fi[	@™iI"U@var[var]
ENV[var]
ENV[var]
@var.key?(var)
@var[var]
key_for(var)
@var.key?(var);Fi[	I"7Builders::NestedAttributes::One.new(var, var, var);FI"*Mongoid::Atomic::Paths::Root.new(var);Fi[[	@9	iI"õ_binding?.!
_building?.!
Builders::Embedded::In.new(var, var, var)
Builders::NestedAttributes::One.new(var, var, var)
Mongoid::Atomic::Paths::Root.new(var);Fi[	@>	iI"óvar.klass
var.foreign_key
var.any_in("_id" => (var.uniq)).each
Builders::NestedAttributes::One.new(var, var, var)
Mongoid::Atomic::Paths::Root.new(var);Fi[	@A	iI"ºvar.inverse_of_field
var.any_in(var.inverse_of_field => ([var.name, nil]))
eager_load_ids(var, var)
Builders::NestedAttributes::One.new(var, var, var)
Mongoid::Atomic::Paths::Root.new(var);Fi[	I"concat(var);FI"var.first;Fi[[	@,	i	I"ainclude(Batchable)
var.flatten
(var.size > 1)
concat(var)
var.first
append(var)
persistable?;Fi[	@2	i	I"ådelegate(:first, :in_memory, :last, :reset, :uniq, :to => :target)
var.flatten
(var.size > 1)
concat(var)
var.first
append(var)
persistable?;Fi[	@oiI"fvar.flatten
(var.size > 1)
concat(var)
var.first
append(var)
base.add_to_set(foreign_key, var.id);Fi[	I"append(var);FI"&var.apply_post_processed_defaults;Fi[[	@,	iI"®batch_insert(var)
var.is_a?(Class)
Factory.build((var or metadata.klass), var, var)
append(var)
var.apply_post_processed_defaults
block_given?
var.run_callbacks(:build);Fi[	@2	iI"ßpersist_delayed(var, var)
var.is_a?(Class)
Factory.build((var or klass), var, var)
append(var)
var.apply_post_processed_defaults
block_given?
var.run_callbacks(:build);Fi[	@oiI"∫var.is_a?(Class)
Factory.build((var or klass), var, var)
base.send(foreign_key).push(var.id)
append(var)
var.apply_post_processed_defaults
unsynced(var, inverse_foreign_key)
block_given?;Fi[	I"characterize_one(var);FI"bind_one(var);Fi[[	@,	iBI"ñtarget.delete_one(var)
_unscoped.delete_one(var)
reindex
characterize_one(var)
bind_one(var)
target.respond_to?(var)
klass.send(:with_scope, criteria);Fi[	@2	i1I"∏private
execute_callback(:before_add, var)
target.push(var)
characterize_one(var)
bind_one(var)
execute_callback(:after_add, var)
Bindings::Referenced::Many.new(base, target, metadata);Fi[	@oi/I"æprivate
execute_callback(:before_add, var)
target.push(var)
characterize_one(var)
bind_one(var)
execute_callback(:after_add, var)
Bindings::Referenced::ManyToMany.new(base, target, metadata);Fi[	I";Node.new(:FUNCTION, [var.first.strip, var[1]].flatten);FI";Node.new(:FUNCTION, [var.first.strip, var[1]].flatten);Fi[[	@Mi"I"jNode.new(:ELEMENT_NAME, [[var.first, var.last].compact.join(":")])
Node.new(:ELEMENT_NAME, [var.first])
Node.new(:FUNCTION, [var.first.strip])
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten);Fi[	@Mi#I"1Node.new(:ELEMENT_NAME, [var.first])
Node.new(:FUNCTION, [var.first.strip])
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
var.first;Fi[	@Mi$I"Node.new(:FUNCTION, [var.first.strip])
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
Node.new(:FUNCTION, [var.first.strip, var[1]].flatten)
var.first
var.last;Fi[	I"Node.new(:AN_PLUS_B, var);FI"@raise(Racc::ParseError, "parse error on IDENT '#{val[1]}'");Fi[[	@Mi1I"≤(var[0] == "odd")
Node.new(:AN_PLUS_B, var)
(var[1] == "n")
Node.new(:AN_PLUS_B, var)
raise(Racc::ParseError, "parse error on IDENT '#{val[1]}'")
(var[0] == "n")
var.unshift("1");Fi[	@Mi8I"ØNode.new(:AN_PLUS_B, var)
(var[0] == "-n")
var.unshift("-1")
Node.new(:AN_PLUS_B, var)
raise(Racc::ParseError, "parse error on IDENT '#{val[1]}'")
(var[1] == "n")
(var << "+");Fi[	@Mi=I"√(var[1] == "n")
(var << "+")
(var << "0")
Node.new(:AN_PLUS_B, var)
raise(Racc::ParseError, "parse error on IDENT '#{val[1]}'")
Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:PSEUDO_CLASS, [var[1]]);Fi[	I"Node.new(:COMBINATOR, var);FI"Node.new(:COMBINATOR, var);Fi[[	@MiAI"Îraise(Racc::ParseError, "parse error on IDENT '#{val[1]}'")
Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var);Fi[	@MiBI"¬Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:ID, var);Fi[	@MiCI"™Node.new(:PSEUDO_CLASS, [var[1]])
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:COMBINATOR, var)
Node.new(:ID, var)
var.first;Fi[	I"undef_method(:namespace);FI")undef_method(:namespace_definitions);Fi[[	I"7data//nokogiri_proj/nokogiri/xml/attribute_decl.rb;TiI"∏undef_method(:attribute_nodes)
undef_method(:attributes)
undef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	I",data//nokogiri_proj/nokogiri/xml/dtd.rb;TiI"¥undef_method(:attribute_nodes)
undef_method(:values)
undef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	I"5data//nokogiri_proj/nokogiri/xml/element_decl.rb;Ti I"mundef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi [	@ÏI"method_defined?(:line);Fi[[	@Ôi	I"ôundef_method(:attributes)
undef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	@Úi	I"•undef_method(:values)
undef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line)
attributes.keys;Fi[	@ıiI"mundef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	I"method_defined?(:line);FI"undef_method(:line);Fi[[	@Ôi
I"undef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	@Úi
I"üundef_method(:content)
undef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line)
attributes.keys
attributes.each;Fi[	@ıiI"mundef_method(:namespace)
undef_method(:namespace_definitions)
method_defined?(:line)
undef_method(:line);Fi[	I"Nokogiri.jruby?;FI"var.first.is_a?(Hash);Fi[[	@#iI"öXML::Document.parse("<root>#{tags}</root>").xpath("/root/node()")
var.each
children.to_s
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!;Fi[	@#iI"œNode::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_HTML)
var.insert(0, var)
children.to_html(*var)
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!;Fi[	@]i7I"eeach
0.upto((length - 1))
each
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!;Fi[	I"coerce(var);FI"var.is_a?(XML::NodeSet);Fi[[	@ZiI"vcss(*var).first
get(var.to_s)
set(var.to_s, var.to_s)
coerce(var)
var.is_a?(XML::NodeSet)
var.each
add_child(var);Fi[	@Zi4I"uadd_previous_sibling_node(var)
unlink
var.replace(var)
coerce(var)
var.is_a?(XML::NodeSet)
var.each
replace(var);Fi[	@ZiöI"private
(var == :next)
(var == :next)
coerce(var)
var.is_a?(XML::NodeSet)
text?
Nokogiri::XML::Node.new("dummy", document);Fi[	I"var.is_a?(XML::NodeSet);FI"var.each;Fi[[	@ZiI"}get(var.to_s)
set(var.to_s, var.to_s)
coerce(var)
var.is_a?(XML::NodeSet)
var.each
add_child(var)
parent.is_a?(XML::Document);Fi[	@Zi-I"Éadd_next_sibling(var)
coerce(var)
children.unlink
var.is_a?(XML::NodeSet)
var.each
text?
Nokogiri::XML::Node.new("dummy", document);Fi[	@Zi5I"junlink
var.replace(var)
coerce(var)
var.is_a?(XML::NodeSet)
var.each
replace(var)
attribute_nodes.map;Fi[	I"Fixnum.===(var);FI")Nokogiri::XML::ParseOptions.new(var);Fi[[	@ZiAI"•document.html?
var::DocumentFragment.new(document, var, self)
document.html?
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
var.respond_to?(:read);Fi[	@ZiíI"§var.is_a?(Nokogiri::XML::Node)
(document == var.document)
compare(var)
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
process_xincludes(var.to_i);Fi[	I"(data//nokogiri_proj/nokogiri/xml.rb;Ti I"–require("nokogiri/xml/schema")
require("nokogiri/xml/relax_ng")
Nokogiri::XML::Document.parse(var, var, var, var, &var)
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
var.respond_to?(:read);Fi[	@*I"block_given?;Fi[[	@ZiBI"üvar::DocumentFragment.new(document, var, self)
document.html?
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
var.respond_to?(:read)
var.read;Fi[	@ZiìI"™(document == var.document)
compare(var)
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
process_xincludes(var.to_i)
document.canonicalize(var, var, var);Fi[	@1i!I"Ÿrequire("nokogiri/xml/relax_ng")
Nokogiri::XML::Document.parse(var, var, var, var, &var)
Fixnum.===(var)
Nokogiri::XML::ParseOptions.new(var)
block_given?
var.respond_to?(:read)
Reader.from_io(var, var, var, var.to_i);Fi[	@ I"(var + 1000);Fi[[	@ÀiI"i(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000);Fi[	@÷iI"a(var >= 161)
(var <= 223)
(var + 500)
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000);Fi[	@·iI"i(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000);Fi[	I"6[Hash, String, Symbol].include?(var.last.class).!;FI"var.pop;Fi[[	@]iI"àeach_with_index
first.before(var)
last.after(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop;Fi[	@]iI"åNodeSet.new(document)
var.each
document.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop;Fi[	@]iI"àNodeSet.new(document)
each
document.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop;Fi[	I"(var < var.length);FI"var[var];Fi[[	I"Ydata//activerecord_proj/active_record/connection_adapters/postgresql/array_parser.rb;Ti	I"îrequire("pg_array_parser")
include(PgArrayParser)
parse_data(var, 0)
(var < var.length)
var[var]
parse_array_contents(var, var, (var + 1))
(var + 1);Fi[	@˚inI"Çvar.dup
var.class.method_defined?(:force_encoding)
var.force_encoding("UTF-8")
(var < var.length)
var[var]
(var == "\\")
(var + 1);Fi[	@˚i√I"ÄStringIO.new
var.putc("\"")
var.class.method_defined?(:encoding)
(var < var.length)
var[var]
var.print("\\\"")
var.print("\\\\");Fi[	I"should(var.description);FI",self.name.gsub(/Test$/, "").constantize;Fi[[	I"&data//paperclip_proj/paperclip.rb;Ti	I"Àinclude(Matchers)
self.name.gsub(/Test$/, "").constantize
have_attached_file(var)
should(var.description)
self.name.gsub(/Test$/, "").constantize
validate_attachment_presence(var)
should(var.description);Fi[	@_iI"œshould(var.description)
self.name.gsub(/Test$/, "").constantize
validate_attachment_presence(var)
should(var.description)
self.name.gsub(/Test$/, "").constantize
[var[:valid]].flatten
[var[:invalid]].flatten;Fi[	@_iI"Ã[var[:valid]].flatten
[var[:invalid]].flatten
validate_attachment_content_type(var).allowing(var).rejecting(var)
should(var.description)
self.name.gsub(/Test$/, "").constantize
var[:greater_than]
var[:in];Fi[	I"Aattr_reader(:plugin_path, :plugin_name, :plugin_pretty_name);FI"file_name.underscore;Fi[[	I"Mdata//redmine_proj/generators/redmine_plugin/redmine_plugin_generator.rb;TiI"∆source_root(File.expand_path("../templates", "(string)"))
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
empty_directory("#{plugin_path}/app");Fi[	I"cdata//redmine_proj/generators/redmine_plugin_controller/redmine_plugin_controller_generator.rb;TiI"2source_root(File.expand_path("../templates", "(string)"))
argument(:controller, :type => :string)
argument(:actions, :type => :array, :default => ([]), :banner => "ACTION ACTION ...")
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
controller.camelize;Fi[	@WiI"{class_option(:timestamps, :type => :boolean)
class_option(:parent, :type => :string, :desc => "The parent class for the generated model")
class_option(:indexes, :type => :boolean, :default => (true), :desc => "Add indexes for references and belongs_to columns")
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
model.camelize;Fi[	I"file_name.underscore;FI"plugin_name.titleize;Fi[[	@jiI"¯source_root(File.expand_path("../templates", "(string)"))
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
empty_directory("#{plugin_path}/app")
empty_directory("#{plugin_path}/app/controllers");Fi[	@mi	I"Targument(:controller, :type => :string)
argument(:actions, :type => :array, :default => ([]), :banner => "ACTION ACTION ...")
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
controller.camelize
template("controller.rb.erb", "#{plugin_path}/app/controllers/#{controller}_controller.rb");Fi[	@WiI"\class_option(:parent, :type => :string, :desc => "The parent class for the generated model")
class_option(:indexes, :type => :boolean, :default => (true), :desc => "Add indexes for references and belongs_to columns")
attr_reader(:plugin_path, :plugin_name, :plugin_pretty_name)
file_name.underscore
plugin_name.titleize
model.camelize
@var.tableize;Fi[	@=I"(var == 1);Fi[[	@ÏiÔI"xout(sprintf("%.3f Tw", (var * @var)))
(var == 0)
((@var - @var) - @var)
(var == 1)
(var == 1)
(var == 1)
(var == 1);Fi[	@ÏiI"º(var == 0)
((@var - @var) - @var)
(var == 1)
(var == 1)
(var == 1)
(var == 1)
sprintf("%.2f %.2f %.2f %.2f re %s ", (@var * @var), ((@var - @var) * @var), (var * @var), (-var * @var), var);Fi[	@ÏiÒI"√((@var - @var) - @var)
(var == 1)
(var == 1)
(var == 1)
(var == 1)
sprintf("%.2f %.2f %.2f %.2f re %s ", (@var * @var), ((@var - @var) * @var), (var * @var), (-var * @var), var)
var.is_a?(String);Fi[	@=I"(var == 0);Fi[[	@ÀiPI"ãvar.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2);Fi[	@÷iTI"ãvar.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2);Fi[	@·iMI"ãvar.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2);Fi[	I"assert(var.new_record?.!);FI"'assert_equal(1, var.versions.size);Fi[[	@ø	iI"{fixtures(:pages, :page_versions, :locked_pages, :locked_pages_revisions, :authors, :landmarks, :landmark_versions)
set_fixture_class(:page_versions => (Page::Version))
Page.create!(:title => "first title", :body => "first body")
assert(var.new_record?.!)
assert_equal(1, var.versions.size)
assert_equal(1, var.version)
assert_instance_of(Page.versioned_class, var.versions.first);Fi[	@ø	i+I"locked_pages(:welcome)
assert(var.revert_to!(locked_pages(:thinking)).!)
LockedPage.create!(:title => "first title")
assert(var.new_record?.!)
assert_equal(1, var.versions.size)
assert_instance_of(LockedPage.versioned_class, var.versions.first)
locked_pages(:welcome);Fi[	@ø	i;I"aassert_equal("Welcome to the weblg", var.title)
assert_equal("LockedPage", var.versions.first.version_type)
SpecialLockedPage.create!(:title => "first title")
assert(var.new_record?.!)
assert_equal(1, var.versions.size)
assert_instance_of(LockedPage.versioned_class, var.versions.first)
assert_equal("SpecialLockedPage", var.versions.first.version_type);Fi[	@=I"var.to_s.index("L").nil?;Fi[[	@Ài.I"z(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R");Fi[	@÷i.I"z(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R");Fi[	@·i+I"z(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R");Fi[	I"$Page.create!(:title => "title");FI"!assert_equal(1, var.version);Fi[[	@ø	iII"ºvar.save
assert_equal(2, var.versions.size)
assert_raises(ActiveRecord::StaleObjectError)
Page.create!(:title => "title")
assert_equal(1, var.version)
var.save
assert_equal(1, var.version);Fi[	@ø	iNI"»var.save
assert_equal(1, var.version)
Page.class_eval
Page.create!(:title => "title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "new title");Fi[	@ø	iZI"¿Page.class_eval
Page.version_condition
Proc.new
Page.create!(:title => "title")
assert_equal(1, var.version)
assert_equal(1, var.versions(true).size)
var.update_attributes(:title => "a title");Fi[	I"categories(:child_2_1);FI"categories(:child_3);Fi[[	@
iEI"πcategories(:child_3)
assert_equal(var, var.siblings)
categories(:child_1)
categories(:child_2_1)
categories(:child_3)
categories(:top_level_2)
assert(categories(:top_level).leaves, var);Fi[	@
iRI" categories(:top_level)
categories(:child_1)
categories(:child_2)
categories(:child_2_1)
categories(:child_3)
assert_equal(var, var.self_and_descendants)
assert_equal(var, var.self_and_descendants.count);Fi[	@
ibI"¶categories(:top_level)
categories(:child_1)
categories(:child_2)
categories(:child_2_1)
categories(:child_3)
assert_equal(var, var.descendants)
categories(:top_level);Fi[	I"var.move_to_child_of(var);FI"var.move_to_child_of(var);Fi[[	@
iÿI"„Category.create(:name => "Root1")
Category.create(:name => "Root2")
Category.create(:name => "Root3")
var.move_to_child_of(var)
var.move_to_child_of(var)
Category.roots.last.to_text
Category.update_all("lft = null, rgt = null");Fi[	@
i·I"ÊCategory.create(:name => "Node-1")
Category.create(:name => "Node-2")
Category.create(:name => "Node-3")
var.move_to_child_of(var)
var.move_to_child_of(var)
Category.roots.last.to_text
Category.update_all("lft = null, rgt = null");Fi[	@
i*I"INote.create!(:body => "A", :notable_id => 3, :notable_type => "Category")
Note.create!(:body => "B", :notable_id => 3, :notable_type => "Category")
Note.create!(:body => "C", :notable_id => 3, :notable_type => "Category")
var.move_to_child_of(var)
var.move_to_child_of(var)
Note.update_all("lft = null, rgt = null")
Note.rebuild!;Fi[	@µI"assert(Category.valid?);Fi[[	@
iI"ìCategory.create
Category.create
Category.create
var.move_to_child_of(var)
assert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?);Fi[	@
iI"•Category.create
var.move_to_child_of(var)
assert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?);Fi[	@
iI"ßassert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?)
var.move_to_child_of(var)
assert(Category.valid?)
assert_nothing_raised
assert_nothing_raised;Fi[	I"Scoped.root;FI"var.children.first;Fi[[	@
isI"Jassert(categories(:child_2_1).is_ancestor_of?(categories(:child_2)).!)
assert(categories(:child_1).is_ancestor_of?(categories(:child_2)).!)
assert(categories(:child_1).is_ancestor_of?(categories(:child_1)).!)
Scoped.root
var.children.first
assert(var.is_or_is_ancestor_of?(var))
var.update_attribute(:organization_id, "different");Fi[	@
iI"Rassert(categories(:child_2).is_descendant_of?(categories(:child_2_1)).!)
assert(categories(:child_2).is_descendant_of?(categories(:child_1)).!)
assert(categories(:child_1).is_descendant_of?(categories(:child_1)).!)
Scoped.root
var.children.first
assert(var.is_or_is_descendant_of?(var))
var.update_attribute(:organization_id, "different");Fi[	@
iÑI"˜assert(var.is_or_is_descendant_of?(var))
var.update_attribute(:organization_id, "different")
assert(var.is_or_is_descendant_of?(var).!)
Scoped.root
var.children.first
assert(var.same_scope?(var))
var.update_attribute(:organization_id, "different");Fi[	I"2Category.update_all("lft = null, rgt = null");FI"Category.rebuild!;Fi[[	@
i€I"·var.move_to_child_of(var)
var.move_to_child_of(var)
Category.roots.last.to_text
Category.update_all("lft = null, rgt = null")
Category.rebuild!
assert_equal(Category.roots.last.to_text, var)
Category.create(:name => "Node-1");Fi[	@
i‰I"÷var.move_to_child_of(var)
var.move_to_child_of(var)
Category.roots.last.to_text
Category.update_all("lft = null, rgt = null")
Category.rebuild!
assert_equal(Category.roots.last.to_text, var)
assert(Category.valid?);Fi[	@
iˆI"»assert(Category.valid?.!)
assert(Category.valid?)
Category.root.to_text
Category.update_all("lft = null, rgt = null")
Category.rebuild!
assert(Category.valid?)
assert_equal(var, Category.root.to_text);Fi[	I"assert(Category.valid?.!);FI"assert(Category.valid?);Fi[[	@
iÈI"÷assert_equal(Category.roots.last.to_text, var)
assert(Category.valid?)
Category.update_all("lft = null")
assert(Category.valid?.!)
assert(Category.valid?)
Category.update_all("rgt = null")
assert(Category.valid?.!);Fi[	@
iÏI"∆assert(Category.valid?.!)
assert(Category.valid?)
Category.update_all("rgt = null")
assert(Category.valid?.!)
assert(Category.valid?)
Category.delete(categories(:child_2).id)
assert(Category.valid?);Fi[	@
iÛI"ƒassert(Category.valid?)
categories(:top_level_2)
categories(:top_level_2).save
assert(Category.valid?.!)
assert(Category.valid?)
Category.root.to_text
Category.update_all("lft = null, rgt = null");Fi[	I"@var.nil?;FI"(@var == "");Fi[[	I"0data//cucumber_prok/cucumber/ast/comment.rb;Ti I"N@var.nil?
(@var == "")
Cucumber.wants_to_quit
@var.strip.split("\n").each;Fi [	@Íi	I"[(@var == "")
Cucumber.wants_to_quit
@var.strip.split("\n").each
@var.nil?
(@var == "");Fi[	@ÏiçI"Vvar.nil?
open(var, "wb")
private
@var.nil?
(@var == "")
1.upto(var)
(@var == "P");Fi[	I"var.reject!;FI"var.reject!;Fi[[	I"6data//cucumber_prok/cucumber/cli/configuration.rb;Ti'I"mrequire_dirs
@var[:require]
remove_excluded_files_from(var)
var.reject!
var.reject!
var.reject!
var.sort;Fi[	@ıi(I"y@var[:require]
remove_excluded_files_from(var)
var.reject!
var.reject!
var.reject!
var.sort
all_files_to_load.reject;Fi[	I"1data//homebrew_proj/keg_fix_install_names.rb;TiI"~var.dylib?
var.shift
var.compact!
var.reject!
var.reject!
Pathname.new(var).relative_path_from(self)
HOMEBREW_PREFIX.join(var);Fi[	I"var.user;FI"var.password;Fi[[	I"Zdata//activerecord_proj/active_record/connection_adapters/connection_specification.rb;TiI"iURI.parse(var)
var.scheme
(var == "postgres")
var.user
var.password
var.port
var.path.sub(/^\//, "");Fi[	I"*data//bundler_proj/bundler/fetcher.rb;Ti>I"ƒraise(HTTPError, "Network error while fetching #{uri}")
Bundler.ui.debug("HTTP Redirection")
URI.parse(var["location"])
var.user
var.password
fetch(var, (var + 1))
Bundler.ui.debug("HTTP Success");Fi[	@iPI"íBundler.rubygems.fetch_all_remote_specs
raise(HTTPError, "Could not reach #{strip_user_pass_from_uri(@remote_uri)}")
var.dup
var.user
var.password;Fi[	I"Category.create;FI"Category.create;Fi[[	@
iI"ßcategories(:top_level)[:rgt]
categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
Category.create
Category.create
Category.create
Category.create;Fi[	@
iI"§categories(:child_2).save(false)
assert(Category.left_and_rights_valid?.!)
Category.create
Category.create
Category.create
Category.create
var.move_to_child_of(var);Fi[	@
iI"õassert(Category.left_and_rights_valid?.!)
Category.create
Category.create
Category.create
Category.create
var.move_to_child_of(var)
assert(Category.valid?);Fi[	I"$1.to_i;FI"$2.to_i;Fi[[	@¡i[I"ömicroseconds(var)
new_time(*var.values_at(:year, :mon, :mday, :hour, :min, :sec, :sec_fraction))
private
$1.to_i
$2.to_i
$4.to_i
(extract_scale(var) == 0);Fi[	@NiI"“puts("Dimensions should be specified like: 30+10x20")
puts("where 30 is the column width, 10 is the gutter width, and 20 is the (optional) height.")
logger.yellow
$1.to_i
$2.to_i
$3.to_i
options[:grid_filename];Fi[	I"3data//mongoid_proj/lib/support/ruby_version.rb;TiI"Nputs(var)
Rails.logger.info(var)
raise
$1.to_i
$2.to_i
$3.to_i
(var <= 1);Fi[	I"(var == false);FI"document.post_persist;Fi[[	I"<data//mongoid_proj/lib/mongoid/persistence/insertion.rb;TiI"ãvalidating?
document.invalid?(:create)
document.run_callbacks(:save)
(var == false)
document.post_persist
validating?
document.errors.clear;Fi[	I"?data//mongoid_proj/lib/mongoid/persistence/modification.rb;Ti	I"°document.invalid?(:update)
document.process_flagged_destroys
document.run_callbacks(:save)
(var == false)
document.post_persist
validating?
document.errors.clear;Fi[	I"<data//mongoid_proj/lib/mongoid/persistence/upsertion.rb;TiI"pvalidating?
document.invalid?(:upsert)
document.run_callbacks(:upsert)
(var == false)
document.post_persist;Fi[	@Û
I"*assert_retrieve(var, var.handle, var);Fi[[	@ﬂ
iI"Àgen_assoc(1)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
gen_assoc(2, 100)
@var.store_association(var, var);Fi[	@ﬂ
iI"Ëgen_assoc(2, 100)
@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_remove(var, var.handle, true);Fi[	@ﬂ
iI"ı@var.store_association(var, var)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, var)
assert_remove(var, var.handle, true)
assert_retrieve(var, nil, var);Fi[	I"*assert_retrieve(var, var.handle, nil);FI"*assert_retrieve(var, var.handle, nil);Fi[[	@ﬂ
i)I" assert_remove(var, var.handle, true)
assert_retrieve(var, nil, var)
assert_retrieve(var, var.handle, var)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil)
assert_remove(var, var.handle, false)
assert_remove(var, var.handle, true);Fi[	@ﬂ
i/I"assert_remove(var, var.handle, true)
assert_remove(var, var.handle, false)
assert_retrieve(var, nil, nil)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil)
assert_remove(var, var.handle, false);Fi[	@ﬂ
i0I"assert_remove(var, var.handle, false)
assert_retrieve(var, nil, nil)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil)
assert_retrieve(var, var.handle, nil)
assert_remove(var, var.handle, false)
assert_remove(var, var.handle, false);Fi[	I"'Core::RFPDF::COLOR_PALETTE[:black];FI"'Core::RFPDF::COLOR_PALETTE[:white];Fi[[	I"7data//redmine_proj/plugins/rfpdf/lib/core/rfpdf.rb;TiI"…{ :black => ([0, 0, 0]), :white => ([255, 255, 255]) }.freeze
Core::RFPDF::COLOR_PALETTE[:black]
Core::RFPDF::COLOR_PALETTE[:white]
SetLineWidth(var[:border_width])
set_draw_color_a(var[:border_color]);Fi[	@Bi"I"’SetRightMargin(var)
Write((var[:font_size] + 4), var)
SetMargins(0, 0, 0)
Core::RFPDF::COLOR_PALETTE[:black]
Core::RFPDF::COLOR_PALETTE[:white]
SetLineWidth(var[:border_width])
set_draw_color_a(var[:border_color]);Fi[	@Bi+I"±(var[:fill] == 1)
(var + "F")
Rect(var, var, var, var, var)
Core::RFPDF::COLOR_PALETTE[:black]
Core::RFPDF::COLOR_PALETTE[:white]
default_font
Core::RFPDF::COLOR_PALETTE[:black];Fi[	I"9set_text_color_a(var[:font_color], var[:colorspace]);FI";SetFont(var[:font], var[:font_style], var[:font_size]);Fi[[	@BiI"ÊLine(var, var, var, var)
Core::RFPDF::COLOR_PALETTE[:black]
default_font
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
Write((var[:font_size] + 4), var);Fi[	@BiI"‡Write((var[:font_size] + 4), var)
default_font
Core::RFPDF::COLOR_PALETTE[:black]
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
SetLeftMargin(var);Fi[	@BiTI"ÙCell(var, var, var, 0, 0, var[:align])
Core::RFPDF::COLOR_PALETTE[:black]
default_font
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
Write((var[:font_size] + 2), var);Fi[	@JI"SetXY(var, var);Fi[[	@BiI"⁄Core::RFPDF::COLOR_PALETTE[:black]
default_font
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
Write((var[:font_size] + 4), var)
default_font;Fi[	@BiI"“default_font
Core::RFPDF::COLOR_PALETTE[:black]
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
SetLeftMargin(var)
SetRightMargin(var);Fi[	@BiUI"ÚCore::RFPDF::COLOR_PALETTE[:black]
default_font
set_text_color_a(var[:font_color], var[:colorspace])
SetFont(var[:font], var[:font_style], var[:font_size])
SetXY(var, var)
Write((var[:font_size] + 2), var)
SetDrawColor(var[0], var[1], var[2]);Fi[	I" (var.downcase + var.upcase);FI"@var[var].nil?;Fi[[	@Ài I"k(var.downcase + var.upcase)
@var[var].nil?
Error("Font already added: family style")
(@var.length + 1);Fi [	@÷i I"o(var.downcase + var.upcase)
@var[var].nil?
Error("CID font already added: family style")
(@var.length + 1);Fi [	@·i I"k(var.downcase + var.upcase)
@var[var].nil?
Error("Font already added: family style")
(@var.length + 1);Fi [	I",AddCIDFont(var, "", var, var, var, var);FI"9AddCIDFont(var, "B", (var + ",Bold"), var, var, var);Fi[[	@Ài
I"Error("Font already added: family style")
(@var.length + 1)
var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var);Fi[	@÷i	I"@var[var].nil?
Error("CID font already added: family style")
(@var.length + 1)
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var);Fi[	@·i
I"Error("Font already added: family style")
(@var.length + 1)
var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var);Fi[	@gI";AddCIDFont(var, "I", (var + ",Italic"), var, var, var);Fi[[	@ÀiI"(@var.length + 1)
var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var);Fi[	@÷i
I"4Error("CID font already added: family style")
(@var.length + 1)
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var);Fi[	@·iI"(@var.length + 1)
var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var);Fi[	@pI"@AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var);Fi[[	@ÀiI"var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126);Fi[	@÷iI"(@var.length + 1)
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126);Fi[	@·iI"var.gsub(" ", "")
AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126);Fi[	@y@˛
i[[	@ÀiI"&AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, var, var, var);Fi[	@÷iI"%AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var);Fi[	@·iI"%AddCIDFont(var, "", var, var, var, var)
AddCIDFont(var, "B", (var + ",Bold"), var, var, var)
AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var);Fi[	I"?execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}");FI";execute("RELEASE SAVEPOINT #{current_savepoint_name}");Fi[[	I"Xdata//activerecord_proj/active_record/connection_adapters/abstract_mysql_adapter.rb;Ti6I"€execute("COMMIT")
execute("ROLLBACK")
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}")
var.limit
var.offset;Fi[	I"`data//activerecord_proj/active_record/connection_adapters/postgresql/database_statements.rb;Ti3I"˜ActiveSupport::Deprecation.warn(var)
(@var.transaction_status == PGconn::PQTRANS_IDLE)
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}");Fi[	@äiFI"@var.last_insert_row_id
exec_query(var, var).rows
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}")
log("begin transaction", nil)
log("commit transaction", nil);Fi[	I"32.upto(126);FI"(AddCIDFonts(var, var, cw, var, var);Fi[[	@ÀiI"∑32.upto(126)
AddCIDFonts(var, var, var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var);Fi[	@÷iI"˙AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetSJISStringWidth(var);Fi[	@·iI"¯AddCIDFont(var, "I", (var + ",Italic"), var, var, var)
AddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var);Fi[	@óI"(@var["type"] == "Type0");Fi[[	@ÀiI"µAddCIDFonts(var, var, var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"];Fi[	@÷iI"ŒAddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetSJISStringWidth(var)
@var["cw"];Fi[	@·iI"ÃAddCIDFont(var, "BI", (var + ",BoldItalic"), var, var, var)
AddCIDFonts(var, var, var, var, var)
32.upto(126)
AddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"];Fi[	@
I"var.length;Fi[[	@ÀiI"åAddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String);Fi[	@÷iI"éAddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetSJISStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String);Fi[	@·iI"åAddCIDFonts(var, var, cw, var, var)
(@var["type"] == "Type0")
GetMBStringWidth(var)
@var["cw"]
var.length
(var < var)
var[var].is_a?(String);Fi[	I"3execute("SAVEPOINT #{current_savepoint_name}");F@äi[[	@éi5I"Âbegin_db_transaction
execute("COMMIT")
execute("ROLLBACK")
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}")
var.limit;Fi[	@ëi2I"execute("ROLLBACK")
ActiveSupport::Deprecation.warn(var)
(@var.transaction_status == PGconn::PQTRANS_IDLE)
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}");Fi[	@äiEI"(var + " WHERE 1=1")
@var.last_insert_row_id
exec_query(var, var).rows
execute("SAVEPOINT #{current_savepoint_name}")
execute("ROLLBACK TO SAVEPOINT #{current_savepoint_name}")
execute("RELEASE SAVEPOINT #{current_savepoint_name}")
log("begin transaction", nil);Fi[	I"var.id;FI"documents_for(var.class);Fi[[	I"3data//mongoid_proj/lib/mongoid/identity_map.rb;TiI"ävar.id
documents_for(var.class).delete(var.id)
Mongoid.using_identity_map?
var.id
documents_for(var.class)
var.id
documents_for(var.class);Fi[	@øiI"{Mongoid.using_identity_map?
var.id
documents_for(var.class)
var.id
documents_for(var.class)
var.id
documents_for(var.class);Fi[	@øiI"ydocuments_for(var.class)
var.id
documents_for(var.class)
var.id
documents_for(var.class)
private
var.collection_name;Fi[	I"var.name;FI"var.to_s;Fi[[	I"7data//bundler_proj/bundler/rubygems_integration.rb;Ti	I"uGem::Command.build_args
Gem.loaded_specs[var]
Gem.loaded_specs
var.name
var.to_s
Gem.platforms
Gem.configuration;Fi[	I"<data//state_machine_proj/state_machine/helper_module.rb;TiI"B@var.owner_class
var.name
var.name.empty?.!
var.name
var.to_s;Fi[	@gisI".owner_class_ancestor_has_method?(var, var)
var.name
var.name.empty?.!
var.name
var.to_s
warn("#{(scope == :class) ? ("Class") : ("Instance")} method \"#{method}\" is already defined in #{ancestor_name}, use generic helper instead or set StateMachine::Machine.ignore_method_conflicts = true.")
self.name;Fi[	@ÉI"var[var.chr];Fi[[	@ÀiI"ivar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1);Fi[	@÷iI"ivar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1);Fi[	@·iI"ivar[var].is_a?(String)
var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1);Fi[	I"@var.delete(var);FI"@var.delete(var);Fi[[	@!iI"i@var.clear
@var.clear
@var.clear
@var.delete(var)
@var.delete(var)
@var.delete(var)
@var.delete(var);Fi[	@!iI"Ä@var.clear
@var.clear
@var.delete(var)
@var.delete(var)
@var.delete(var)
@var.delete(var)
ActiveRecord::Migrator.current_version;Fi[	@!iI"ä@var.clear
@var.delete(var)
@var.delete(var)
@var.delete(var)
@var.delete(var)
ActiveRecord::Migrator.current_version
prepare_default_proc;Fi[	I"var[var.chr];FI"(var + var[var.chr]);Fi[[	@ÀiI"_var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000);Fi[	@÷iI"_var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var >= 161);Fi[	@·iI"_var[var].ord
var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000);Fi[	I"(var + var[var.chr]);FI"(var + 1);Fi[[	@ÀiI"\var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2);Fi[	@÷iI"_var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var >= 161)
(var <= 223);Fi[	@·iI"\var[var]
(var < 128)
var[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2);Fi[	I"(var + 1000);FI"(var + 2);Fi[[	@Ài I"wvar[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0");Fi[	@÷i I"n(var <= 223)
(var + 500)
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0");Fi[	@·iI"wvar[var.chr]
(var + var[var.chr])
(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0");Fi[	I"((var * @var) / 1000);FI"(@var["type"] == "Type0");Fi[[	@Ài"I"ä(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"];Fi[	@÷i"I"å(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
SJISMultiCell(var, var, var, var, var, var, var)
@var["cw"];Fi[	@·iI"ä(var + 1)
(var + 1000)
(var + 2)
((var * @var) / 1000)
(@var["type"] == "Type0")
MBMultiCell(var, var, var, var, var, var, var)
@var["cw"];Fi[	I"connection;FI"remote_path_for(var);Fi[[	@ûiI"õNet::FTP.send(:const_set, :FTP_PORT, port)
Net::FTP.open(ip, username, password)
remote_path_for(@var)
connection
remote_path_for(var)
connection
Array.new;Fi[	@≠iI"æprivate
Net::SSH.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var)
connection
remote_path_for(var)
transferred_files_for(var)
Logger.message(var.join("\n"));Fi[	@∞iI"öprivate
Net::SFTP.start(ip, username, :password => (password), :port => (port))
remote_path_for(@var)
connection
remote_path_for(var)
connection
Array.new;Fi[	@èI"move_progress;Fi[[	@ìi:I"l(@var << "<ol>")
(@var << "</ol>")
var.dom_id
(@var + 1)
move_progress
@var.include?(var)
(@var << var);Fi[	@ìiZI"evar.exception
@var.tr
(@var + 1)
(@var + 1)
move_progress
(@var == 0)
build_cell(@var, var, var);Fi[	I"=data//rspec_proj/spec/runner/formatter/html_formatter.rb;TiI"…@var.puts("  </dl>")
@var.puts("</div>")
@var.flush
(@var + 1)
move_progress
@var.puts("    <dd class=\"spec passed\"><span class=\"passed_spec_name\">#{h(example.description)}</span></dd>")
@var.flush;Fi[	@ΩI"(var + var);Fi[[	@ÀiQI"ä(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0");Fi[	@÷iUI"ä(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0");Fi[	@·iNI"ä(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0");Fi[	I""var.save!(:validate => (var));FI"!var.save(:validate => (var));Fi[[	I"^data//activerecord_proj/active_record/associations/has_and_belongs_to_many_association.rb;TiI"ÿattr_reader(:join_table)
Arel::Table.new(var.join_table)
var.new_record?
var.save!(:validate => (var))
var.save(:validate => (var))
options[:insert_sql]
owner.connection.insert(interpolate(options[:insert_sql], var));Fi[	I"Odata//activerecord_proj/active_record/associations/has_many_association.rb;TiI"§load_target.each(&:mark_for_destruction)
delete_all
set_owner_attributes(var)
var.save!(:validate => (var))
var.save(:validate => (var))
private
has_cached_counter?;Fi[	I"Wdata//activerecord_proj/active_record/associations/has_many_through_association.rb;TiI"òvar.flatten.each
ensure_not_nested
var.new_record?
var.save!(:validate => (var))
var.save(:validate => (var))
save_through_record(var)
update_counter(1);Fi[	@˛I"(var - 1);Fi[[	@Ài,I"svar.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?;Fi[	@÷i,I"svar.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?;Fi[	@·i)I"svar.gsub("\r", "")
var.length
(var > 0)
(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?;Fi[	@òI"var.to_s.index("R").nil?;Fi[[	@Ài/I"(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T");Fi[	@÷i/I"(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T");Fi[	@·i,I"(var[(var - 1)] == "\n")
(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T");Fi[	@@I"(var + "R");Fi[[	@Ài0I"w(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T");Fi[	@÷i0I"w(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T");Fi[	@·i-I"w(var - 1)
(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T");Fi[	I"(var + "R");FI"var.to_s.index("T");Fi[[	@Ài1I"y(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var);Fi[	@÷i1I"y(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var);Fi[	@·i.I"y(var == 1)
var.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var);Fi[	I"var.to_s.index("T");FI"(var + "T");Fi[[	@Ài2I"Ävar.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String);Fi[	@÷i2I"Ävar.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String);Fi[	@·i/I"Ävar.to_s.index("L").nil?
var.to_s.index("R").nil?
(var + "R")
var.to_s.index("T")
(var + "T")
(var < var)
var[var].is_a?(String);Fi[	I"@var.include?(var);FI"(@var << var);Fi[[	@ìi<I"evar.dom_id
(@var + 1)
move_progress
@var.include?(var)
(@var << var)
var.!=(:failed)
@var.^(var);Fi[	@≤i3I"àvar[(1..-1)].each
@var.flush
print_feature_element_name(var, var, var, var)
@var.include?(var)
(@var << var)
var.!=(:failed)
@var.^(var);Fi[	@0i$I"xinclude(Enumerable)
Array.new(*var)
@var.each(*var, &var)
@var.include?(var)
(@var << var)
@var.empty?
(@var * var);Fi[	I"<Cell(var, var, var[var, (var - var)], var, 2, var, var);FI"(var + 1);Fi[[	@Ài:I"}var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2);Fi[	@÷i9I"}var[var].ord
var[var]
(var == 10)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2);Fi[	@·i7I"}var[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var + 1)
(var + 1)
(var == 2);Fi[	@pI"<Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[[	@ÀiFI"√(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1);Fi[	@÷iII"µ(var == var)
(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1);Fi[	@·iCI"√(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1);Fi[	@pI"(var[var].chr == " ");Fi[[	@ÀiGI"¿(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1);Fi[	@÷iJI"≤(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1);Fi[	@·iDI"¿(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var)
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var[var].chr == " ")
(var + 1)
(var + 1);Fi[	@pI"(var == 1);Fi[[	@ÀiOI"ö(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var);Fi[	@÷iSI"ç(var >= 128)
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var);Fi[	@·iLI"ö(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var);Fi[	I"(var == 2);FI"(@var["type"] == "Type0");Fi[[	@ÀiSI"r(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"];Fi[	@÷iWI"t(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
SJISWrite(var, var, var, var)
@var["cw"];Fi[	@·iPI"r(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var)
@var["cw"];Fi[	I"var.first.empty?;FI"var.shift;Fi[[	@?iîI"Åload_target.detect
load_target.select
var.first.is_a?(Hash)
var.first.empty?
var.shift
fetch_first_or_last_using_find?(var)
scope;Fi[	I"0data//cucumber_prok/cucumber/constantize.rb;TiI"√(var + 1)
var.split("::")
var.empty?
var.first.empty?
var.shift
var.each
var.to_s.gsub(/::/, "/").gsub(/([A-Z]+)([A-Z][a-z])/, "\\1_\\2").gsub(/([a-z\d])([A-Z])/, "\\1_\\2").tr("-", "_").downcase;Fi[	I"(data//rescue_proj/resque/helpers.rb;Ti
I"kResque.coder.decode(var)
var.to_s.split("::")
var.empty?
var.first.empty?
var.shift
var.inject(Object);Fi[	@DI"append(var);Fi[[	@,	i
I"\var.flatten
(var.size > 1)
concat(var)
var.first
append(var)
persistable?
_assigning?.!;Fi[	@2	i
I"\var.flatten
(var.size > 1)
concat(var)
var.first
append(var)
persistable?
_assigning?.!;Fi[	@oiI"svar.flatten
(var.size > 1)
concat(var)
var.first
append(var)
base.add_to_set(foreign_key, var.id)
persistable?;Fi[	@DI"5File.expand_path(find_in_source_paths(var.to_s));Fi[[	@3i	I"†require("open-uri")
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
create_file(var, nil, var)
(var[:mode] == :preserve);Fi[	@3iI"úchmod(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
create_link(var, var, var)
var.last.is_a?(Hash);Fi[	@3iI"âcreate_link(var, var, var)
var.last.is_a?(Hash)
var.pop
var.first
File.expand_path(find_in_source_paths(var.to_s))
open(var)
block_given?;Fi[	I"var.to_s.index("B").nil?.!;FI"(var + "B");Fi[[	@ÀiMI"ò(var + 1)
(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1);Fi[	@÷iQI"ç(var == 2)
(var + var)
(var >= 128)
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1);Fi[	@·iJI"ò(var + 1)
(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1);Fi[	I"(var + "B");FI"<Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[[	@ÀiNI"ô(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0);Fi[	@÷iRI"ç(var + var)
(var >= 128)
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0);Fi[	@·iKI"ô(var == 2)
(var + (var ? (1) : (2)))
var.to_s.index("B").nil?.!
(var + "B")
Cell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0);Fi[	I">Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);FI"(var + 1);Fi[[	@ÀiaI"åvar[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	@÷idI"ávar[var].ord
var[var]
(var == 10)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	@·i^I"åvar[var]
(var < 128)
(var.chr == "\n")
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var + 1)
(var == 1)
((@var - @var) - @var);Fi[	@—I">Cell(var, var, var[var, (var - var)], 0, 2, "", var, var);Fi[[	@ÀiuI"ƒ(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1);Fi[	@÷i|I"∂(var + 1)
(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1);Fi[	@·irI"ƒ(var + 1)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1);Fi[	@—I"(var[var].chr == " ");Fi[[	@ÀivI"≈(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1);Fi[	@÷i}I"∑(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1);Fi[	@·isI"≈(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
Cell(var, var, var[var, (var - var)], 0, 2, "", var, var)
(var[var].chr == " ")
(var + 1)
(var == 1);Fi[	@vI"var.first;Fi[[	@?ièI"Àreflection.is_a?(ActiveRecord::Reflection::ThroughReflection)
owner.send(reflection.through_reflection.name).any?
var.first.kind_of?(Array)
(var.size == 1)
var.first
load_target.detect
load_target.select;Fi[	I"2data//bundler_proj/bundler/lockfile_parser.rb;TiI"}var.name.!=("bundler")
@var.find
var.last.source
(var.size == 1)
var.first
var.source.is_a?(Bundler::Source::Path)
var.source;Fi[	I"4data//compass_proj/compass/commands/registry.rb;TiI"Œ@var[abbreviation_of(var)]
Regexp.escape(var)
@var.keys.select
(var.size == 1)
var.first
(var.size > 1)
raise(Compass::Error, "Ambiguous abbreviation '#{name}'. Did you mean one of: #{matching.join(", ")}");Fi[	I"RCell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var);FI"private;Fi[[	@ÀiI"û(var + 1)
(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair;Fi[	@÷iÇI"ì(var + var)
(var >= 128)
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair;Fi[	@·i|I"û(var + 1)
(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair;Fi[	I"@var.each_pair;FI"@var.each_pair;Fi[[	@Ài}I"œCell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]));Fi[	@÷iÖI"œCell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]));Fi[	@·iI"œCell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]));Fi[	@I"out("/Subtype /Type0");Fi[[	@Ài~I"§private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]));Fi[	@÷iÜI"§private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]));Fi[	@·i{I"§private
@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]));Fi[	I"out("/Subtype /Type0");FI"?out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]));Fi[[	@ÀiI"÷@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"));Fi[	@÷iáI"÷@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"));Fi[	@·i|I"÷@var.each
@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"));Fi[	@I"'out(("/Encoding /" + var["CMap"]));Fi[[	@ÀiÄI"÷@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>");Fi[	@÷iàI"÷@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>");Fi[	@·i}I"÷@var.each_pair
@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>");Fi[	@I">out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"));Fi[[	@ÀiÅI"’@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj");Fi[	@÷iâI"’@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj");Fi[	@·i~I"’@var.each_pair
out("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj");Fi[	@(I"out(">>");Fi[[	@ÀiÇI"Õout("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj;Fi[	@÷iäI"Õout("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj;Fi[	@·iI"Õout("/Subtype /Type0")
out(((("/BaseFont /" + var["name"]) + "-") + var["CMap"]))
out(("/Encoding /" + var["CMap"]))
out((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj;Fi[	I"var.flatten;FI"(var.size > 1);Fi[[	@,	iI"xrequire("mongoid/relations/embedded/batchable")
include(Batchable)
var.flatten
(var.size > 1)
concat(var)
var.first;Fi[	@2	iI"ñdelegate(:count, :to => :criteria)
delegate(:first, :in_memory, :last, :reset, :uniq, :to => :target)
var.flatten
(var.size > 1)
concat(var)
var.first;Fi[	@oi I"5var.flatten
(var.size > 1)
concat(var)
var.first;Fi [	I"(var + var);FI"var.step(var, var);Fi[[	@#iI"`(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
(var / 2.0)
min_value;Fi[	@&iI"e(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
@var[:fields]
(var / -2.0);Fi[	@)i%I"k(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
(var * var)
(@var - (var * var));Fi[	I"newobj;FI"out("<</Type /Font");Fi[[	@ÀiÖI"Æout((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]));Fi[	@÷içI"Æout((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]));Fi[	@·iÇI"Æout((("/DescendantFonts [" + (@var + 1).to_s) + " 0 R]"))
out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]));Fi[	@NI"#out("<</Type /FontDescriptor");Fi[[	@ÀiêI"ùvar["cw"].keys.sort.each
out((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6");Fi[	@÷ióI"§out((var + "] 231 325 500 631 [500] 326 389 500]"))
out(">>")
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6");Fi[	@·iåI"ùvar["cw"].keys.sort.each
out((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6");Fi[	I"out("<</Type /Font");FI""out("/Subtype /CIDFontType0");Fi[[	@ÀiÜI"1out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((((("/CIDSystemInfo <</Registry " + textstring("Adobe")) + " /Ordering ") + textstring(var["registry"]["ordering"])) + " /Supplement ") + var["registry"]["supplement"].to_s) + ">>"));Fi[	@÷iéI"out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((("/CIDSystemInfo <</Registry (Adobe) /Ordering (" + var["registry"]["ordering"]) + ") /Supplement ") + var["registry"]["supplement"].to_s) + ">>"));Fi[	@·iÉI"out(">>")
out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((("/CIDSystemInfo <</Registry (Adobe) /Ordering (" + var["registry"]["ordering"]) + ") /Supplement ") + var["registry"]["supplement"].to_s) + ">>"));Fi[	@bI"'out(("/BaseFont /" + var["name"]));Fi[[	@ÀiáI"^out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((((("/CIDSystemInfo <</Registry " + textstring("Adobe")) + " /Ordering ") + textstring(var["registry"]["ordering"])) + " /Supplement ") + var["registry"]["supplement"].to_s) + ">>"))
out((("/FontDescriptor " + (@var + 1).to_s) + " 0 R"));Fi[	@÷ièI"<out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((("/CIDSystemInfo <</Registry (Adobe) /Ordering (" + var["registry"]["ordering"]) + ") /Supplement ") + var["registry"]["supplement"].to_s) + ">>"))
out((("/FontDescriptor " + (@var + 1).to_s) + " 0 R"));Fi[	@·iÑI"<out("endobj")
newobj
out("<</Type /Font")
out("/Subtype /CIDFontType0")
out(("/BaseFont /" + var["name"]))
out((((("/CIDSystemInfo <</Registry (Adobe) /Ordering (" + var["registry"]["ordering"]) + ") /Supplement ") + var["registry"]["supplement"].to_s) + ">>"))
out((("/FontDescriptor " + (@var + 1).to_s) + " 0 R"));Fi[	@XI"'out(("/FontName /" + var["name"]));Fi[[	@ÀiëI"ßout((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]");Fi[	@÷iòI"ìout(">>")
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]");Fi[	@·içI"ßout((("/W [" + var) + "]>>"))
out("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]");Fi[	@tI"out("/Flags 6");Fi[[	@ÀiíI"üout("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0");Fi[	@÷iôI"üout("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0");Fi[	@·iéI"üout("endobj")
newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0");Fi[	I"out("/Flags 6");FI"'out("/FontBBox [0 -200 1000 900]");Fi[[	@ÀiìI"§newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800");Fi[	@÷iöI"§newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800");Fi[	@·ièI"§newobj
out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800");Fi[	@áI"out("/ItalicAngle 0");Fi[[	@ÀiîI"≤out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200");Fi[	@÷iõI"≤out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200");Fi[	@·iêI"≤out("<</Type /FontDescriptor")
out(("/FontName /" + var["name"]))
out("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200");Fi[	I"broadcast(var, var);FI"broadcast(var);Fi[[	@ØiI"|broadcast(var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var, var, var, var);Fi[	@ØiI"ãbroadcast(var, var, var, var)
broadcast(var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var, var, var, var)
broadcast(var);Fi[	@ØiI"©broadcast(var, var, var, var, var, var, var, var)
broadcast(var, var, var, var, var, var)
broadcast(var)
broadcast(var, var)
broadcast(var)
broadcast(var)
broadcast(var);Fi[	I"out("/Ascent 800");FI"out("/Descent -200");Fi[[	@ÀiñI"óout("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 50");Fi[	@÷iùI"óout("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 60");Fi[	@·iíI"óout("/Flags 6")
out("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 50");Fi[	I"out("/Descent -200");FI"out("/CapHeight 800");Fi[[	@ÀióI"ëout("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 50")
out(">>");Fi[	@÷iûI"ëout("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 60")
out(">>");Fi[	@·iìI"ëout("/FontBBox [0 -200 1000 900]")
out("/ItalicAngle 0")
out("/Ascent 800")
out("/Descent -200")
out("/CapHeight 800")
out("/StemV 50")
out(">>");Fi[	I"(var >= 161);FI"(var <= 223);Fi[[	@÷iI"`var[var.chr]
(var + var[var.chr])
(var + 1)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1);Fi[	@÷i@I"k(var < 128)
(var + (var[var.chr] or 0))
(var == 32)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1000);Fi[	@÷imI"k(var < 128)
(var + (var[var.chr] or 0))
(var == 32)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1000);Fi[	I"(var <= 223);FI"(var + 500);Fi[[	@÷iI"`(var + var[var.chr])
(var + 1)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1)
(var + 1000);Fi[	@÷iAI"k(var + (var[var.chr] or 0))
(var == 32)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1000)
(var > var);Fi[	@÷inI"k(var + (var[var.chr] or 0))
(var == 32)
(var >= 161)
(var <= 223)
(var + 500)
(var + 1000)
(var > var);Fi[	I"&scm_version_from_command_line.dup;FI"%var.respond_to?(:force_encoding);Fi[[	@´i
I"Õshell_quote_command
scm_command_version
client_version_above?([1, 12])
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/m);Fi[	@≤iI"≈shell_quote_command
scm_command_version
client_version.empty?.!
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/);Fi[	@ûiI" shell_quote_command
svn_binary_version
client_version_above?([1, 3])
scm_version_from_command_line.dup
var.respond_to?(:force_encoding)
var.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/);Fi[	@DI"(var == 2);Fi[[	@ÀiRI"öCell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var);Fi[	@÷iVI"úCell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
SJISWrite(var, var, var, var);Fi[	@·iOI"öCell(var, var, var[var, (var - var)], var, 2, var, var)
(var == 1)
(var == 0)
(var + var)
(var == 2)
(@var["type"] == "Type0")
MBWrite(var, var, var, var);Fi[	I"root_url;FI"url;Fi[[	@≤iJI"≈(var << "#{identifier}:#{scm_iconv(@path_encoding, "UTF-8", path)}")
git_cmd(var)
identifier[0, 8]
root_url
url
self.class.client_version_above?([1, 7, 2])
((var << "-c") << "core.quotepath=false");Fi[	@µi?I"¯CGI.escape(scm_iconv(@var, "UTF-8", var))
Annotate.new
hg("rhannotate", "-ncu", "-r", CGI.escape(hgrev(var)), hgtarget(var))
root_url
url
((var << "--config") << "extensions.redminehelper=#{HG_HELPER_EXT}")
((var << "--config") << "diff.git=false");Fi[	@ûiQI"{var[var]
var[var].each
var.match(/^\//)
root_url
url
URI.escape(URI.escape(var), "[]")
shell_quote(var.gsub(/[?<>\*]/, ""));Fi[	@◊I"(@var > @var);Fi[[	@ÀilI"É(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var);Fi[	@÷isI"h(var + 1000)
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var);Fi[	@·iiI"É(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(@var > @var)
(@var + var)
((@var - @var) - @var);Fi[	@◊I"(var == var);Fi[[	@ÀiCI"∞(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@÷iFI"Ç(var + 1000)
(var > var)
(var == -1)
(var == var)
(var == var)
(var + var)
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	@·i@I"∞(var + (var ? (var[var.chr]) : (1000) or 0))
(var > var)
(var == -1)
(var == var)
(var == var)
(var + (var ? (1) : (2)))
Cell(var, var, var[var, (var - var)], var, 2, var, var);Fi[	I"@var.clear;FI"@var.clear;Fi[[	@!iI"N@var[var]
@var[var]
@var[var]
@var.clear
@var.clear
@var.clear
@var.clear;Fi[	@!iI"U@var[var]
@var[var]
@var.clear
@var.clear
@var.clear
@var.clear
@var.delete(var);Fi[	@!iI"\@var[var]
@var.clear
@var.clear
@var.clear
@var.clear
@var.delete(var)
@var.delete(var);Fi[	I"max_value;FI"min_value;Fi[[	@#iI"Vinclude(REXML)
protected
@var[:fields]
max_value
min_value
(var - var)
(var == 0);Fi[	@&i	I"¥require("SVG/Graph/BarBase")
init_with(:rotate_y_labels => (true), :show_x_guidelines => (true), :show_y_guidelines => (false))
protected
max_value
min_value
(var - var)
(var == 0);Fi[	@)iI"~@var[:fields]
(((@var[:fields][0].length / 2) * font_size) * 0.6)
(var > @var)
max_value
min_value
(var - var)
(var == 0);Fi[	I"min_value;FI"(var - var);Fi[[	@#iI"Tprotected
@var[:fields]
max_value
min_value
(var - var)
(var == 0)
(var / 20.0);Fi[	@&i
I"§init_with(:rotate_y_labels => (true), :show_x_guidelines => (true), :show_y_guidelines => (false))
protected
max_value
min_value
(var - var)
(var == 0)
(var / 20.0);Fi[	@)iI"}(((@var[:fields][0].length / 2) * font_size) * 0.6)
(var > @var)
max_value
min_value
(var - var)
(var == 0)
(var / 20.0);Fi[	I"var.to_i;FI" (var << credentials_string);Fi[[	@ûiI"ívar.sort_by_name
self.class.client_version_above?([1, 5, 0])
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0);Fi[	@ûi;I"|shellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string)
shellout(var)
$?.exitstatus.!=(0);Fi[	@ûi@I"ushellout(var)
$?.exitstatus.!=(0)
(var.to_i > 0)
var.to_i
(var << credentials_string)
Annotate.new
shellout(var);Fi[	I"((var + var) - var);FI"scale_divisions;Fi[[	@#iI"h(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers;Fi[	@&iI"h(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers;Fi[	@)iI"h(var - var)
(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers;Fi[	I"scale_divisions;FI"(var / 10.0);Fi[[	@#iI"f(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1);Fi[	@&iI"f(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1);Fi[	@)iI"f(var == 0)
(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1);Fi[	I"(var / 10.0);FI"scale_integers;Fi[[	@#iI"e(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round;Fi[	@&iI"e(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round;Fi[	@)i I"e(var / 20.0)
((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round;Fi[	I"scale_integers;FI"(var < 1);Fi[[	@#iI"k((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0);Fi[	@&iI"k((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0);Fi[	@)i!I"k((var + var) - var)
scale_divisions
(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0);Fi[	I"var.round;FI"((var % var) == 0);Fi[[	@#iI"f(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var);Fi[	@&iI"f(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var);Fi[	@)i#I"f(var / 10.0)
scale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var);Fi[	I"((var % var) == 0);FI"(var + var);Fi[[	@#iI"escale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
(var / 2.0);Fi[	@&iI"gscale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
@var[:fields];Fi[	@)i$I"escale_integers
(var < 1)
var.round
((var % var) == 0)
(var + var)
var.step(var, var)
(var * var);Fi[	I"bar_gap;FI"(var < 10);Fi[[	@#iI"ìmin_value
field_width
((@var.to_f - ((font_size * 2) * top_font)) / (get_y_labels.max - get_y_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var);Fi[	@&iI"ñmin_value
field_height
((@var.to_f - ((font_size * 2) * right_font)) / (get_x_labels.max - get_x_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var);Fi[	@1i I"N@var[2]
field_height
field_width
bar_gap
(var < 10)
(var / 2)
(var - var);Fi[	I"(var / 2);FI"(var - var);Fi[[	@#iI"¢((@var.to_f - ((font_size * 2) * top_font)) / (get_y_labels.max - get_y_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var)
(stack == :side)
(var / @var.length);Fi[	@&iI"§((@var.to_f - ((font_size * 2) * right_font)) / (get_x_labels.max - get_x_labels.min))
bar_gap
(var < 10)
(var / 2)
(var - var)
(stack == :side)
(var / @var.length);Fi[	@1i"I"_field_width
bar_gap
(var < 10)
(var / 2)
(var - var)
((var / 2) + (font_size / 2))
x_range;Fi[	I"var.respond_to?(:call);FI"var.call(var);Fi[[	I">data//activemodel_proj/active_model/validations/format.rb;TiI" check_options_validity(options, :without)
private
options[var]
var.respond_to?(:call)
var.call(var)
var.errors.add(var, :invalid, options.except(var).merge!(:value => (var)))
var.source.start_with?("^");Fi[	I"Kdata//paperclip_proj/paperclip/validators/attachment_size_validator.rb;TiI"¥var.gsub(/%n/, var.to_i.to_s).gsub(/%u/, var).html_safe
options[:greater_than_or_equal_to]
options[:greater_than]
var.respond_to?(:call)
var.call(var)
var.respond_to?(:min)
var.min;Fi[	@yi!I"Ühuman_size(var)
options[:less_than_or_equal_to]
options[:less_than]
var.respond_to?(:call)
var.call(var)
var.respond_to?(:max)
var.max;Fi[	I"var.attributes;FI"var.to_s;Fi[[	@LiåI"ú((var + 1) % step_x_labels)
(var == 0)
@var.add_element("text")
var.attributes
var.to_s
((var * var) + x_label_offset(var))
((@var + x_label_font_size) + 3);Fi[	@LiïI"≥((var % 2) == 1)
(var + var)
@var.add_element("path", "d" => ("M#{x} #{@graph_height} v#{stagger}"), "class" => "staggerGuideLine")
var.attributes
var.to_s
var.attributes
var.to_s;Fi[	@LióI"µ@var.add_element("path", "d" => ("M#{x} #{@graph_height} v#{stagger}"), "class" => "staggerGuideLine")
var.attributes
var.to_s
var.attributes
var.to_s
rotate_x_labels
var.attributes;Fi[	@~I"var.attributes;Fi[[	@LiúI"Àrotate_x_labels
var.attributes
("rotate( 90 #{x} #{(y - x_label_font_size)} )" + " translate( 0 -#{(x_label_font_size / 4)} )")
var.attributes
var.attributes
show_x_guidelines
draw_x_guidelines(var, var);Fi[	@LiµI"Ærotate_y_labels
var.attributes
("translate( -#{font_size} 0 ) " + "rotate( 90 #{x} #{y} ) ")
var.attributes
var.attributes
(var - (y_label_font_size / 2)).to_s
var.attributes;Fi[	@LiÿI"≥@var.add_element("text", "x" => (var.to_s), "y" => (var.to_s), "class" => "yAxisTitle")
y_title.to_s
(y_title_text_direction == :bt)
var.attributes
var.attributes
@var.collect
key;Fi[	I"(var[:data].length == 0);FI"var[:data].each_index;Fi[[	@,iI"raise("No data provided by #{conf.inspect}")
((var[:data].length % 2) == 0)
raise((("Data supplied must be x,y pairs!  " + "The data provided contained an odd set of ") + "data points"))
(var[:data].length == 0)
var[:data].each_index
sort(var, var)
(@var << var);Fi[	@1iI"raise("No data provided by #{conf.inspect}")
((var[:data].length % 3) == 0)
raise((("Data supplied must be title,from,to tripples!  " + "The data provided contained an odd set of ") + "data points"))
(var[:data].length == 0)
var[:data].each_index
sort(var, var, var)
protected;Fi[	@–	iI"raise("No data provided by #{@data.inspect}")
((var[:data].length % 2) == 0)
raise((("Data supplied must be x,y pairs!  " + "The data provided contained an odd set of ") + "data points"))
(var[:data].length == 0)
var[:data].each_index
sort(var, var)
(@var << var);Fi[	I"var.!=(var);F@¯i[[	@Ài~I"¥(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each;Fi[	@÷iÅI"é(var + 1)
(var + var)
(var >= 128)
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each;Fi[	@·i{I"¥(((var - (2 * @var)) * 1000) / @var)
(var + 1)
(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each;Fi[	I"best_match;FI"best_match;Fi[[	I"6data//rspec_proj/spec/runner/line_number_query.rb;TiI"¶parse_location(var.location)
is_best_match?(var, var, var, var)
best_match.clear
best_match
best_match
parse_location(var.location)
is_best_match?(var, var, var, var);Fi[	@®iI"êparse_location(var.location)
is_best_match?(var, var, var, var)
best_match.clear
best_match
best_match
best_match
(var == File.expand_path(var));Fi[	@®iI"Äis_best_match?(var, var, var, var)
best_match.clear
best_match
best_match
best_match
(var == File.expand_path(var))
(var <= var);Fi[	I"($LOG_LEVEL > 3);FI"pp(var);Fi[[	@˚i`I"·(var["refId"] == self.last_ref_id)
($LOG_LEVEL > 1)
puts("[Info - Dropping Object from Guzzoni] #{object["class"]}")
($LOG_LEVEL > 3)
pp(var)
($LOG_LEVEL == 1)
puts("[Info - #{self.name}] Received Object: #{object["class"]}");Fi[	@˚ihI"?puts("[Info - #{self.name}] Received Object: #{object["class"]} (group: #{object["group"]})")
($LOG_LEVEL > 2)
puts("[Info - #{self.name}] Received Object: #{object["class"]} (group: #{object["group"]}, ref_id: #{object["refId"]}, ace_id: #{object["aceId"]})")
($LOG_LEVEL > 3)
pp(var)
received_object(var)
(var == nil);Fi[	@˚inI"¥(var == nil)
($LOG_LEVEL > 1)
puts("[Info - Dropping Object from #{self.name}] #{object["class"]}")
($LOG_LEVEL > 3)
pp(var)
SiriProxy::Interpret.speech_recognized(var)
var.!=(nil);Fi[	I"include(Assertions);FI"include(EvalHelpers);Fi[[	I"5data//state_machine_proj/state_machine/branch.rb;TiI"Õrequire("state_machine/matcher")
require("state_machine/eval_helpers")
require("state_machine/assertions")
include(Assertions)
include(EvalHelpers)
attr_reader(:if_condition)
attr_reader(:unless_condition);Fi[	@giI"—require("state_machine/event_collection")
require("state_machine/path_collection")
require("state_machine/matcher_helpers")
include(Assertions)
include(EvalHelpers)
include(MatcherHelpers)
var.last.is_a?(Hash);Fi[	I"<data//state_machine_proj/state_machine/state_context.rb;TiI"úrequire("state_machine/assertions")
require("state_machine/eval_helpers")
include(Assertions)
include(EvalHelpers)
attr_reader(:machine)
attr_reader(:state);Fi[	I"attr_reader(:object);FI"attr_reader(:machine);Fi[[	I"3data//state_machine_proj/state_machine/path.rb;TiI"xinclude(Assertions)
attr_reader(:object)
attr_reader(:machine)
assert_valid_keys(var, :target, :guard)
var[:target];Fi[	I">data//state_machine_proj/state_machine/path_collection.rb;TiI"ärequire("state_machine/path")
include(Assertions)
attr_reader(:object)
attr_reader(:machine)
attr_reader(:from_name)
attr_reader(:to_name);Fi[	@OiI"Å@var.name
@var.qualified_name
attr_reader(:events)
attr_reader(:object)
attr_reader(:machine)
attr_reader(:from)
attr_reader(:to);Fi[	I"@var.qualified_name;FI" @var.human_name(@var.class);Fi[[	@Oi%I"}machine.attribute
machine.action
@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name;Fi[	@Oi(I"á@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name;Fi[	@Oi+I"á@var.qualified_name
@var.human_name(@var.class)
@var.name
@var.qualified_name
@var.human_name(@var.class)
(from_name == to_name)
object;Fi[	@†I"
flash;Fi[[	I">data//diaspora_proj/controllers/invitations_controller.rb;TiI"îvar.empty?
EmailInviter.new(var.join(","), current_user, params[:email_inviter])
var.send!
var.empty?
flash
t("invitations.create.empty")
var.empty?;Fi[	@ﬁi!I"Ñvar.empty?
flash
t("invitations.create.empty")
var.empty?
flash
t("invitations.create.sent", :emails => (var.join(", ")))
var.empty?;Fi[	@ﬁi$I"ïvar.empty?
flash
t("invitations.create.sent", :emails => (var.join(", ")))
var.empty?
flash
(t("invitations.create.rejected") + var.join(", "))
flash;Fi[	@†I"var.each;Fi[[	@DicI"¢var.delete(nil)
print_options(var, var)
var.each
var.empty?
var.each
var.say((var ? ("#{group_name} options:") : ("Options:")))
var.print_table(var, :indent => 2);Fi[	@i!I"§update_documents(var, entries)
private
var.!
var.empty?
var.each
collection.find(selector).update(var)
skip(criteria.options[:skip]).limit(criteria.options[:limit]);Fi[	I"4data//rspec_proj/spec/runner/differs/default.rb;Ti
I"©var.split(/\n/).map!
var.split(/\n/).map!
Diff::LCS.diff(var, var)
var.empty?
var.each
((var << var.diff(format)) << "\n")
diff_as_string(PP.pp(var, ""), PP.pp(var, ""));Fi[	@%
I" require("twitter/identity");Fi[[	I"1data//twitter_proj/twitter/direct_message.rb;Ti I"lrequire("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:text);Fi [	I"'data//twitter_proj/twitter/list.rb;Ti I"√require("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:description, :following, :full_name, :member_count, :mode, :name, :slug, :subscriber_count, :uri);Fi [	I"/data//twitter_proj/twitter/saved_search.rb;Ti I"require("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:name, :position, :query);Fi [	@B
I".attr_reader(:max_position, :min_position);Fi[[	@+
iI"µrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map
Array(@var[:target_objects]).map;Fi[	@.
iI"¢require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map
sources.first;Fi[	@1
iI"îrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map;Fi[	@˚I"Array(@var[:sources]).map;Fi[[	@+
iI"œrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map
Array(@var[:target_objects]).map
Array(@var[:targets]).map;Fi[	@.
iI"√require("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map
sources.first
Array(@var[:target_objects]).map;Fi[	@1
iI"îrequire("twitter/base")
require("twitter/creatable")
include(Twitter::Creatable)
attr_reader(:max_position, :min_position)
Array(@var[:sources]).map;Fi[	@†I"NodeSet.new(document);Fi[[	@]iI"å[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
var.each
document.decorate(var);Fi[	@]iI"à[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
each
document.decorate(var);Fi[	@]i"I"à[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document)
each
document.decorate(var);Fi[	@†I"var.last.is_a?(Hash);Fi[[	@]iI"éfirst.before(var)
last.after(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document);Fi[	@]iI"åvar.each
document.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document);Fi[	@]i I"àeach
document.decorate(var)
[Hash, String, Symbol].include?(var.last.class).!
var.pop
var.last.is_a?(Hash)
var.pop
NodeSet.new(document);Fi[	I"var.is_a?(Hash);FI"var.each;Fi[[	I"9data//activemodel_proj/active_model/serialization.rb;TiI"Rserializable_add_includes(var)
private
var[:include]
var.is_a?(Hash)
var.each;Fi[	@ŒiI"|stringify_params(var.dup)
@var.each
@var.each
var.is_a?(Hash)
var.each
private
[Fixnum, TrueClass, FalseClass, Regexp].none?;Fi[	@]i2I"_each
Hash.===(var)
first.attribute(var)
var.is_a?(Hash)
var.each
each
0.upto((length - 1));Fi[	@I"%Twitter::API::Arguments.new(var);Fi[[	@ˇiI"∑require("twitter/error/forbidden")
require("twitter/tweet")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop
merge_user!(var.options, var);Fi[	@iI"require("twitter/api/arguments")
require("twitter/api/utils")
require("twitter/saved_search")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.empty?
objects_from_response(Twitter::SavedSearch, :get, "/1.1/saved_searches/list.json", var.options);Fi[	@i	I"¸require("twitter/api/utils")
require("twitter/suggestion")
require("twitter/user")
include(Twitter::API::Utils)
Twitter::API::Arguments.new(var)
var.pop
object_from_response(Twitter::Suggestion, :get, "/1.1/users/suggestions/#{slug}.json", var.options);Fi[	@¥I"block_given?;Fi[[	@Ni.I"î(terminal_width - var)
var.split("\n\n")
var.map!
var.each
block_given?
ask("Overwrite #{destination}? (enter \"h\" for help) #{options}")
is?(:yes);Fi[	I"Cdata//mongoid_proj/lib/mongoid/relations/targets/enumerable.rb;TiI"Yblock_given?
load_all!
in_memory.select(&var)
var.each
block_given?
to_enum
_loaded?;Fi[	@]iI"tinclude(Enumerable)
attr_accessor(:document)
var.decorate(self)
var.each
block_given?
self[0]
0.upto((var - 1));Fi[	I"var.blank?;FI"var.blank?;Fi[[	@´iI"ûvar.force_encoding("ASCII-8BIT")
var.match(/\A(.*?)((\d+\.)+\d+)/m)
var[2].scan(/\d+/).collect(&:to_i)
var.blank?
var.blank?
raise(CommandFailed)
var.empty?.!;Fi[	@ïiI"’self.class.client_version_above?([2, 0, 0])
revisions(nil, nil, nil, :limit => 1)
Info.new(:root_url => (@var), :lastrev => (var.last))
var.blank?
var.blank?
self.class.client_version_above?([2, 2, 0])
Entries.new;Fi[	@≤iI"πvar.to_s.split(/[\/\\]/).select
var[(0..-2)].join("/")
var[-1]
var.blank?
var.blank?
Entry.new(:path => "", :kind => "dir")
entries(var, var, (var = { :report_last_commit => (false) }));Fi[	@˛@bi[[	@iI" require("twitter/user")
include(Twitter::API::Utils)
objects_from_response_with_user(Twitter::List, :get, "/1.1/lists/list.json", var)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name];Fi[	@i'I"Dcursor_from_response_with_user(:lists, Twitter::List, :get, "/1.1/lists/subscriptions.json", var, :subscriptions)
list_from_response_with_users(:post, "/1.1/lists/members/destroy_all.json", var)
private
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name];Fi[	@i-I"var.options[:owner_screen_name]
merge_owner!(var.options, (var.pop or screen_name))
object_from_response(Twitter::List, var, var, var.options)
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id]
var.options[:owner_screen_name];Fi[	@éI"%Twitter::API::Arguments.new(var);Fi[[	@i&I"Zlist_from_response(:get, "/1.1/lists/show.json", var)
cursor_from_response_with_user(:lists, Twitter::List, :get, "/1.1/lists/subscriptions.json", var, :subscriptions)
list_from_response_with_users(:post, "/1.1/lists/members/destroy_all.json", var)
private
Twitter::API::Arguments.new(var)
merge_list!(var.options, var.pop)
var.options[:owner_id];Fi[	@iI" object_from_response(Twitter::OEmbed, :get, "/1.1/statuses/oembed.json?id=#{id}", var)
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
private
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
post("/1.1/statuses/retweet/#{id}.json", var);Fi[	@iI"µrequire("twitter/api/arguments")
require("twitter/cursor")
require("twitter/user")
private
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
Twitter::API::Arguments.new(var);Fi[	@˛I"var.options[:user_id];Fi[[	@i-I"Yuser_objects_from_response(:get, "/1.1/users/contributors.json", var)
post("/1.1/account/remove_profile_banner.json", var)[:body]
post("/1.1/account/update_profile_banner.json", var.merge(:banner => (var)))[:body]
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name));Fi[	@iI"≈private
Twitter::API::Arguments.new(var)
var.flatten.threaded_map
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name));Fi[	@iI"Œvar.flatten.threaded_map
send(var.to_sym, var, var)
var.from_response(var)
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name));Fi[	@éI"@var.each;Fi[[	@Ài{I"£(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair;Fi[	@÷iÉI"ñ(var >= 128)
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair;Fi[	@·i}I"£(var + (var ? (1) : (2)))
var.!=(var)
Cell(((var * @var) / 1000.0), var, var[var, (var - var)], 0, 0, "", var, var)
private
@var.each
@var.each_pair
@var.each_pair;Fi[	@éI"'execute_callback(:before_add, var);Fi[[	@,	i4I"™batch_replace(var)
klass.unscoped
_unscoped.delete_if(&:marked_for_destruction?)
private
execute_callback(:before_add, var)
target.push(*scope([var]))
_unscoped.push(var);Fi[	@2	i.I"∏remove_not_in(var)
var.each
klass.unscoped.where(foreign_key => (Conversions.flag(base.id, metadata)))
private
execute_callback(:before_add, var)
target.push(var)
characterize_one(var);Fi[	@oi,I"Øreset_unloaded
push(var.compact.uniq)
klass.unscoped.any_in(:_id => (base.send(foreign_key)))
private
execute_callback(:before_add, var)
target.push(var)
characterize_one(var);Fi[	@I"var[:save_with].!;Fi[[	@#iI"∆children.to_s
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_HTML)
var.insert(0, var);Fi[	@#iI"–children.to_html(*var)
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_XHTML)
var.insert(0, var);Fi[	@]i9I"Ωeach
Nokogiri.jruby?
var.first.is_a?(Hash)
var.shift
var[:save_with].!
Node::SaveOptions::NO_DECLARATION.|(Node::SaveOptions::NO_EMPTY_TAGS).|(Node::SaveOptions::AS_HTML)
var.insert(0, var);Fi[	I"include(Enumerable);FI"Array.new(*var);Fi[[	@¬i I"Rinclude(Enumerable)
Array.new(*var)
@var.each(*var, &var)
var.is_a?(Compiler);Fi [	@¬iI"svar.name
@var.any?
(@var << var)
include(Enumerable)
Array.new(*var)
@var.each(*var, &var)
var.is_a?(Compiler);Fi[	@0i!I"ØPostgresqlInstalled.new(var)
TeXInstalled.new(var)
raise("Unsupported special dependency #{spec}")
include(Enumerable)
Array.new(*var)
@var.each(*var, &var)
@var.include?(var);Fi[	I"var.options[:user_id];FI"var.options[:screen_name];Fi[[	@i.I"upost("/1.1/account/remove_profile_banner.json", var)[:body]
post("/1.1/account/update_profile_banner.json", var.merge(:banner => (var)))[:body]
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
object_from_response(Twitter::ProfileBanner, :get, "/1.1/users/profile_banner.json", var.options);Fi[	@iI"˘Twitter::API::Arguments.new(var)
var.flatten.threaded_map
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
objects_from_response(Twitter::User, var, var, var.options);Fi[	@iI"send(var.to_sym, var, var)
var.from_response(var)
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
cursor_from_response(var, var, var, var, var.options, var);Fi[	@áI"7merge_user!(var.options, (var.pop or screen_name));Fi[[	@i/I"9post("/1.1/account/update_profile_banner.json", var.merge(:banner => (var)))[:body]
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
object_from_response(Twitter::ProfileBanner, :get, "/1.1/users/profile_banner.json", var.options);Fi[	@iI"˘var.flatten.threaded_map
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
objects_from_response(Twitter::User, var, var, var.options)
Twitter::API::Arguments.new(var);Fi[	@iI"var.from_response(var)
Twitter::API::Arguments.new(var)
var.options[:user_id]
var.options[:screen_name]
merge_user!(var.options, (var.pop or screen_name))
cursor_from_response(var, var, var, var, var.options, var)
merge_default_cursor!(var);Fi[	I" require("twitter/identity");FI" include(Twitter::Creatable);Fi[[	@ÚiI"îrequire("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:text)
Twitter::User.fetch_or_new(@var[:recipient]);Fi[	@ıiI"Îrequire("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:description, :following, :full_name, :member_count, :mode, :name, :slug, :subscriber_count, :uri)
Twitter::User.fetch_or_new(@var[:user]);Fi[	@¯iI"require("twitter/creatable")
require("twitter/identity")
include(Twitter::Creatable)
attr_reader(:name, :position, :query);Fi
